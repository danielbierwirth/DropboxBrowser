///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBSerializableProtocol.h"

@class DBFILESLookupError;
@class DBFILESPropertiesError;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - API Object

///
/// The `PropertiesError` union.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBFILESPropertiesError : NSObject <DBSerializable, NSCopying>

#pragma mark - Instance fields

/// The `DBFILESPropertiesErrorTag` enum type represents the possible tag states
/// with which the `DBFILESPropertiesError` union can exist.
typedef NS_ENUM(NSInteger, DBFILESPropertiesErrorTag) {
  /// Property template does not exist for given identifier.
  DBFILESPropertiesErrorTemplateNotFound,

  /// You do not have the permissions to modify this property template.
  DBFILESPropertiesErrorRestrictedContent,

  /// (no description).
  DBFILESPropertiesErrorOther,

  /// (no description).
  DBFILESPropertiesErrorPath,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBFILESPropertiesErrorTag tag;

/// Property template does not exist for given identifier. @note Ensure the
/// `isTemplateNotFound` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly, copy) NSString *templateNotFound;

/// (no description). @note Ensure the `isPath` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBFILESLookupError *path;

#pragma mark - Constructors

///
/// Initializes union class with tag state of "template_not_found".
///
/// Description of the "template_not_found" tag state: Property template does
/// not exist for given identifier.
///
/// @param templateNotFound Property template does not exist for given
/// identifier.
///
/// @return An initialized instance.
///
- (instancetype)initWithTemplateNotFound:(NSString *)templateNotFound;

///
/// Initializes union class with tag state of "restricted_content".
///
/// Description of the "restricted_content" tag state: You do not have the
/// permissions to modify this property template.
///
/// @return An initialized instance.
///
- (instancetype)initWithRestrictedContent;

///
/// Initializes union class with tag state of "other".
///
/// @return An initialized instance.
///
- (instancetype)initWithOther;

///
/// Initializes union class with tag state of "path".
///
/// @param path (no description).
///
/// @return An initialized instance.
///
- (instancetype)initWithPath:(DBFILESLookupError *)path;

- (instancetype)init NS_UNAVAILABLE;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value
/// "template_not_found".
///
/// @note Call this method and ensure it returns true before accessing the
/// `templateNotFound` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "template_not_found".
///
- (BOOL)isTemplateNotFound;

///
/// Retrieves whether the union's current tag state has value
/// "restricted_content".
///
/// @return Whether the union's current tag state has value
/// "restricted_content".
///
- (BOOL)isRestrictedContent;

///
/// Retrieves whether the union's current tag state has value "other".
///
/// @return Whether the union's current tag state has value "other".
///
- (BOOL)isOther;

///
/// Retrieves whether the union's current tag state has value "path".
///
/// @note Call this method and ensure it returns true before accessing the
/// `path` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "path".
///
- (BOOL)isPath;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString *)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `DBFILESPropertiesError` union.
///
@interface DBFILESPropertiesErrorSerializer : NSObject

///
/// Serializes `DBFILESPropertiesError` instances.
///
/// @param instance An instance of the `DBFILESPropertiesError` API object.
///
/// @return A json-compatible dictionary representation of the
/// `DBFILESPropertiesError` API object.
///
+ (NSDictionary *)serialize:(DBFILESPropertiesError *)instance;

///
/// Deserializes `DBFILESPropertiesError` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBFILESPropertiesError` API object.
///
/// @return An instantiation of the `DBFILESPropertiesError` object.
///
+ (DBFILESPropertiesError *)deserialize:(NSDictionary *)dict;

@end

NS_ASSUME_NONNULL_END
