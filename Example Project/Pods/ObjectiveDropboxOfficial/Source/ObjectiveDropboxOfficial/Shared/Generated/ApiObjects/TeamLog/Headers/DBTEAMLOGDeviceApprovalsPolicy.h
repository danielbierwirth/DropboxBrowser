///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBSerializableProtocol.h"

@class DBTEAMLOGDeviceApprovalsPolicy;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - API Object

///
/// The `DeviceApprovalsPolicy` union.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBTEAMLOGDeviceApprovalsPolicy : NSObject <DBSerializable, NSCopying>

#pragma mark - Instance fields

/// The `DBTEAMLOGDeviceApprovalsPolicyTag` enum type represents the possible
/// tag states with which the `DBTEAMLOGDeviceApprovalsPolicy` union can exist.
typedef NS_ENUM(NSInteger, DBTEAMLOGDeviceApprovalsPolicyTag) {
  /// (no description).
  DBTEAMLOGDeviceApprovalsPolicyUnlimited,

  /// (no description).
  DBTEAMLOGDeviceApprovalsPolicyZero,

  /// (no description).
  DBTEAMLOGDeviceApprovalsPolicyOne,

  /// (no description).
  DBTEAMLOGDeviceApprovalsPolicyTwo,

  /// (no description).
  DBTEAMLOGDeviceApprovalsPolicyThree,

  /// (no description).
  DBTEAMLOGDeviceApprovalsPolicyFour,

  /// (no description).
  DBTEAMLOGDeviceApprovalsPolicyFive,

  /// (no description).
  DBTEAMLOGDeviceApprovalsPolicyOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBTEAMLOGDeviceApprovalsPolicyTag tag;

#pragma mark - Constructors

///
/// Initializes union class with tag state of "unlimited".
///
/// @return An initialized instance.
///
- (instancetype)initWithUnlimited;

///
/// Initializes union class with tag state of "zero".
///
/// @return An initialized instance.
///
- (instancetype)initWithZero;

///
/// Initializes union class with tag state of "one".
///
/// @return An initialized instance.
///
- (instancetype)initWithOne;

///
/// Initializes union class with tag state of "two".
///
/// @return An initialized instance.
///
- (instancetype)initWithTwo;

///
/// Initializes union class with tag state of "three".
///
/// @return An initialized instance.
///
- (instancetype)initWithThree;

///
/// Initializes union class with tag state of "four".
///
/// @return An initialized instance.
///
- (instancetype)initWithFour;

///
/// Initializes union class with tag state of "five".
///
/// @return An initialized instance.
///
- (instancetype)initWithFive;

///
/// Initializes union class with tag state of "other".
///
/// @return An initialized instance.
///
- (instancetype)initWithOther;

- (instancetype)init NS_UNAVAILABLE;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value "unlimited".
///
/// @return Whether the union's current tag state has value "unlimited".
///
- (BOOL)isUnlimited;

///
/// Retrieves whether the union's current tag state has value "zero".
///
/// @return Whether the union's current tag state has value "zero".
///
- (BOOL)isZero;

///
/// Retrieves whether the union's current tag state has value "one".
///
/// @return Whether the union's current tag state has value "one".
///
- (BOOL)isOne;

///
/// Retrieves whether the union's current tag state has value "two".
///
/// @return Whether the union's current tag state has value "two".
///
- (BOOL)isTwo;

///
/// Retrieves whether the union's current tag state has value "three".
///
/// @return Whether the union's current tag state has value "three".
///
- (BOOL)isThree;

///
/// Retrieves whether the union's current tag state has value "four".
///
/// @return Whether the union's current tag state has value "four".
///
- (BOOL)isFour;

///
/// Retrieves whether the union's current tag state has value "five".
///
/// @return Whether the union's current tag state has value "five".
///
- (BOOL)isFive;

///
/// Retrieves whether the union's current tag state has value "other".
///
/// @return Whether the union's current tag state has value "other".
///
- (BOOL)isOther;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString *)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `DBTEAMLOGDeviceApprovalsPolicy` union.
///
@interface DBTEAMLOGDeviceApprovalsPolicySerializer : NSObject

///
/// Serializes `DBTEAMLOGDeviceApprovalsPolicy` instances.
///
/// @param instance An instance of the `DBTEAMLOGDeviceApprovalsPolicy` API
/// object.
///
/// @return A json-compatible dictionary representation of the
/// `DBTEAMLOGDeviceApprovalsPolicy` API object.
///
+ (NSDictionary *)serialize:(DBTEAMLOGDeviceApprovalsPolicy *)instance;

///
/// Deserializes `DBTEAMLOGDeviceApprovalsPolicy` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBTEAMLOGDeviceApprovalsPolicy` API object.
///
/// @return An instantiation of the `DBTEAMLOGDeviceApprovalsPolicy` object.
///
+ (DBTEAMLOGDeviceApprovalsPolicy *)deserialize:(NSDictionary *)dict;

@end

NS_ASSUME_NONNULL_END
