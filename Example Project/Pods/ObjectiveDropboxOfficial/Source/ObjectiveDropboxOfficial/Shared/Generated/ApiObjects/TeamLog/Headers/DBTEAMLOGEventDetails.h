///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBSerializableProtocol.h"

@class DBTEAMLOGAccountCaptureChangeAvailabilityDetails;
@class DBTEAMLOGAccountCaptureChangePolicyDetails;
@class DBTEAMLOGAccountCaptureMigrateAccountDetails;
@class DBTEAMLOGAccountCaptureRelinquishAccountDetails;
@class DBTEAMLOGAllowDownloadDisabledDetails;
@class DBTEAMLOGAllowDownloadEnabledDetails;
@class DBTEAMLOGAppLinkTeamDetails;
@class DBTEAMLOGAppLinkUserDetails;
@class DBTEAMLOGAppUnlinkTeamDetails;
@class DBTEAMLOGAppUnlinkUserDetails;
@class DBTEAMLOGCollectionShareDetails;
@class DBTEAMLOGCreateFolderDetails;
@class DBTEAMLOGDataPlacementRestrictionChangePolicyDetails;
@class DBTEAMLOGDataPlacementRestrictionSatisfyPolicyDetails;
@class DBTEAMLOGDeviceApprovalsChangeDesktopPolicyDetails;
@class DBTEAMLOGDeviceApprovalsChangeMobilePolicyDetails;
@class DBTEAMLOGDeviceApprovalsChangeOverageActionDetails;
@class DBTEAMLOGDeviceApprovalsChangeUnlinkActionDetails;
@class DBTEAMLOGDeviceChangeIpDesktopDetails;
@class DBTEAMLOGDeviceChangeIpMobileDetails;
@class DBTEAMLOGDeviceChangeIpWebDetails;
@class DBTEAMLOGDeviceDeleteOnUnlinkFailDetails;
@class DBTEAMLOGDeviceDeleteOnUnlinkSuccessDetails;
@class DBTEAMLOGDeviceLinkFailDetails;
@class DBTEAMLOGDeviceLinkSuccessDetails;
@class DBTEAMLOGDeviceManagementDisabledDetails;
@class DBTEAMLOGDeviceManagementEnabledDetails;
@class DBTEAMLOGDeviceUnlinkDetails;
@class DBTEAMLOGDisabledDomainInvitesDetails;
@class DBTEAMLOGDomainInvitesApproveRequestToJoinTeamDetails;
@class DBTEAMLOGDomainInvitesDeclineRequestToJoinTeamDetails;
@class DBTEAMLOGDomainInvitesEmailExistingUsersDetails;
@class DBTEAMLOGDomainInvitesRequestToJoinTeamDetails;
@class DBTEAMLOGDomainInvitesSetInviteNewUserPrefToNoDetails;
@class DBTEAMLOGDomainInvitesSetInviteNewUserPrefToYesDetails;
@class DBTEAMLOGDomainVerificationAddDomainFailDetails;
@class DBTEAMLOGDomainVerificationAddDomainSuccessDetails;
@class DBTEAMLOGDomainVerificationRemoveDomainDetails;
@class DBTEAMLOGEmmAddExceptionDetails;
@class DBTEAMLOGEmmChangePolicyDetails;
@class DBTEAMLOGEmmCreateExceptionsReportDetails;
@class DBTEAMLOGEmmCreateUsageReportDetails;
@class DBTEAMLOGEmmLoginSuccessDetails;
@class DBTEAMLOGEmmRefreshAuthTokenDetails;
@class DBTEAMLOGEmmRemoveExceptionDetails;
@class DBTEAMLOGEnabledDomainInvitesDetails;
@class DBTEAMLOGEventDetails;
@class DBTEAMLOGExtendedVersionHistoryChangePolicyDetails;
@class DBTEAMLOGFileAddCommentDetails;
@class DBTEAMLOGFileAddDetails;
@class DBTEAMLOGFileCommentsChangePolicyDetails;
@class DBTEAMLOGFileCopyDetails;
@class DBTEAMLOGFileDeleteDetails;
@class DBTEAMLOGFileDownloadDetails;
@class DBTEAMLOGFileEditDetails;
@class DBTEAMLOGFileGetCopyReferenceDetails;
@class DBTEAMLOGFileLikeCommentDetails;
@class DBTEAMLOGFileMoveDetails;
@class DBTEAMLOGFilePermanentlyDeleteDetails;
@class DBTEAMLOGFilePreviewDetails;
@class DBTEAMLOGFileRenameDetails;
@class DBTEAMLOGFileRequestAddDeadlineDetails;
@class DBTEAMLOGFileRequestChangeFolderDetails;
@class DBTEAMLOGFileRequestChangeTitleDetails;
@class DBTEAMLOGFileRequestCloseDetails;
@class DBTEAMLOGFileRequestCreateDetails;
@class DBTEAMLOGFileRequestReceiveFileDetails;
@class DBTEAMLOGFileRequestRemoveDeadlineDetails;
@class DBTEAMLOGFileRequestSendDetails;
@class DBTEAMLOGFileRequestsChangePolicyDetails;
@class DBTEAMLOGFileRequestsEmailsEnabledDetails;
@class DBTEAMLOGFileRequestsEmailsRestrictedToTeamOnlyDetails;
@class DBTEAMLOGFileRestoreDetails;
@class DBTEAMLOGFileRevertDetails;
@class DBTEAMLOGFileRollbackChangesDetails;
@class DBTEAMLOGFileSaveCopyReferenceDetails;
@class DBTEAMLOGFileUnlikeCommentDetails;
@class DBTEAMLOGGoogleSsoChangePolicyDetails;
@class DBTEAMLOGGroupAddExternalIdDetails;
@class DBTEAMLOGGroupAddMemberDetails;
@class DBTEAMLOGGroupChangeExternalIdDetails;
@class DBTEAMLOGGroupChangeManagementTypeDetails;
@class DBTEAMLOGGroupChangeMemberRoleDetails;
@class DBTEAMLOGGroupCreateDetails;
@class DBTEAMLOGGroupDeleteDetails;
@class DBTEAMLOGGroupDescriptionUpdatedDetails;
@class DBTEAMLOGGroupJoinPolicyUpdatedDetails;
@class DBTEAMLOGGroupMovedDetails;
@class DBTEAMLOGGroupRemoveExternalIdDetails;
@class DBTEAMLOGGroupRemoveMemberDetails;
@class DBTEAMLOGGroupRenameDetails;
@class DBTEAMLOGGroupUserManagementChangePolicyDetails;
@class DBTEAMLOGLogoutDetails;
@class DBTEAMLOGMemberAddNameDetails;
@class DBTEAMLOGMemberChangeEmailDetails;
@class DBTEAMLOGMemberChangeMembershipTypeDetails;
@class DBTEAMLOGMemberChangeNameDetails;
@class DBTEAMLOGMemberChangeRoleDetails;
@class DBTEAMLOGMemberInviteDetails;
@class DBTEAMLOGMemberJoinDetails;
@class DBTEAMLOGMemberLeaveDetails;
@class DBTEAMLOGMemberPermanentlyDeleteAccountContentsDetails;
@class DBTEAMLOGMemberRecoverDetails;
@class DBTEAMLOGMemberRequestsChangePolicyDetails;
@class DBTEAMLOGMemberSpaceLimitsAddExceptionDetails;
@class DBTEAMLOGMemberSpaceLimitsChangePolicyDetails;
@class DBTEAMLOGMemberSpaceLimitsChangeStatusDetails;
@class DBTEAMLOGMemberSpaceLimitsRemoveExceptionDetails;
@class DBTEAMLOGMemberSuggestDetails;
@class DBTEAMLOGMemberSuggestionsChangePolicyDetails;
@class DBTEAMLOGMemberSuspendDetails;
@class DBTEAMLOGMemberTransferAccountContentsDetails;
@class DBTEAMLOGMemberUnsuspendDetails;
@class DBTEAMLOGMicrosoftOfficeAddinChangePolicyDetails;
@class DBTEAMLOGMissingDetails;
@class DBTEAMLOGNetworkControlChangePolicyDetails;
@class DBTEAMLOGNoteAclInviteOnlyDetails;
@class DBTEAMLOGNoteAclLinkDetails;
@class DBTEAMLOGNoteAclTeamLinkDetails;
@class DBTEAMLOGNoteShareReceiveDetails;
@class DBTEAMLOGNoteSharedDetails;
@class DBTEAMLOGOpenNoteSharedDetails;
@class DBTEAMLOGPaperChangeDeploymentPolicyDetails;
@class DBTEAMLOGPaperChangeMemberPolicyDetails;
@class DBTEAMLOGPaperChangePolicyDetails;
@class DBTEAMLOGPaperContentAddMemberDetails;
@class DBTEAMLOGPaperContentAddToFolderDetails;
@class DBTEAMLOGPaperContentArchiveDetails;
@class DBTEAMLOGPaperContentChangeSubscriptionDetails;
@class DBTEAMLOGPaperContentCreateDetails;
@class DBTEAMLOGPaperContentPermanentlyDeleteDetails;
@class DBTEAMLOGPaperContentRemoveFromFolderDetails;
@class DBTEAMLOGPaperContentRemoveMemberDetails;
@class DBTEAMLOGPaperContentRenameDetails;
@class DBTEAMLOGPaperContentRestoreDetails;
@class DBTEAMLOGPaperDocAddCommentDetails;
@class DBTEAMLOGPaperDocChangeMemberRoleDetails;
@class DBTEAMLOGPaperDocChangeSharingPolicyDetails;
@class DBTEAMLOGPaperDocDeleteCommentDetails;
@class DBTEAMLOGPaperDocDeletedDetails;
@class DBTEAMLOGPaperDocDownloadDetails;
@class DBTEAMLOGPaperDocEditCommentDetails;
@class DBTEAMLOGPaperDocEditDetails;
@class DBTEAMLOGPaperDocFollowedDetails;
@class DBTEAMLOGPaperDocMentionDetails;
@class DBTEAMLOGPaperDocRequestAccessDetails;
@class DBTEAMLOGPaperDocResolveCommentDetails;
@class DBTEAMLOGPaperDocRevertDetails;
@class DBTEAMLOGPaperDocSlackShareDetails;
@class DBTEAMLOGPaperDocTeamInviteDetails;
@class DBTEAMLOGPaperDocUnresolveCommentDetails;
@class DBTEAMLOGPaperDocViewDetails;
@class DBTEAMLOGPaperEnabledUsersGroupAdditionDetails;
@class DBTEAMLOGPaperEnabledUsersGroupRemovalDetails;
@class DBTEAMLOGPaperExternalViewAllowDetails;
@class DBTEAMLOGPaperExternalViewDefaultTeamDetails;
@class DBTEAMLOGPaperExternalViewForbidDetails;
@class DBTEAMLOGPaperFolderDeletedDetails;
@class DBTEAMLOGPaperFolderFollowedDetails;
@class DBTEAMLOGPaperFolderTeamInviteDetails;
@class DBTEAMLOGPasswordChangeDetails;
@class DBTEAMLOGPasswordLoginFailDetails;
@class DBTEAMLOGPasswordLoginSuccessDetails;
@class DBTEAMLOGPasswordResetAllDetails;
@class DBTEAMLOGPasswordResetDetails;
@class DBTEAMLOGPermanentDeleteChangePolicyDetails;
@class DBTEAMLOGRemoveLogoutUrlDetails;
@class DBTEAMLOGRemoveSsoUrlDetails;
@class DBTEAMLOGResellerSupportSessionEndDetails;
@class DBTEAMLOGResellerSupportSessionStartDetails;
@class DBTEAMLOGSfAddGroupDetails;
@class DBTEAMLOGSfAllowNonMembersToViewSharedLinksDetails;
@class DBTEAMLOGSfExternalInviteWarnDetails;
@class DBTEAMLOGSfInviteGroupDetails;
@class DBTEAMLOGSfNestDetails;
@class DBTEAMLOGSfTeamDeclineDetails;
@class DBTEAMLOGSfTeamGrantAccessDetails;
@class DBTEAMLOGSfTeamInviteChangeRoleDetails;
@class DBTEAMLOGSfTeamInviteDetails;
@class DBTEAMLOGSfTeamJoinDetails;
@class DBTEAMLOGSfTeamJoinFromOobLinkDetails;
@class DBTEAMLOGSfTeamUninviteDetails;
@class DBTEAMLOGSharedContentAddInviteesDetails;
@class DBTEAMLOGSharedContentAddLinkExpiryDetails;
@class DBTEAMLOGSharedContentAddLinkPasswordDetails;
@class DBTEAMLOGSharedContentAddMemberDetails;
@class DBTEAMLOGSharedContentChangeDownloadsPolicyDetails;
@class DBTEAMLOGSharedContentChangeInviteeRoleDetails;
@class DBTEAMLOGSharedContentChangeLinkAudienceDetails;
@class DBTEAMLOGSharedContentChangeLinkExpiryDetails;
@class DBTEAMLOGSharedContentChangeLinkPasswordDetails;
@class DBTEAMLOGSharedContentChangeMemberRoleDetails;
@class DBTEAMLOGSharedContentChangeViewerInfoPolicyDetails;
@class DBTEAMLOGSharedContentClaimInvitationDetails;
@class DBTEAMLOGSharedContentCopyDetails;
@class DBTEAMLOGSharedContentDownloadDetails;
@class DBTEAMLOGSharedContentRelinquishMembershipDetails;
@class DBTEAMLOGSharedContentRemoveInviteeDetails;
@class DBTEAMLOGSharedContentRemoveLinkExpiryDetails;
@class DBTEAMLOGSharedContentRemoveLinkPasswordDetails;
@class DBTEAMLOGSharedContentRemoveMemberDetails;
@class DBTEAMLOGSharedContentRequestAccessDetails;
@class DBTEAMLOGSharedContentUnshareDetails;
@class DBTEAMLOGSharedContentViewDetails;
@class DBTEAMLOGSharedFolderChangeConfidentialityDetails;
@class DBTEAMLOGSharedFolderChangeLinkPolicyDetails;
@class DBTEAMLOGSharedFolderChangeMemberManagementPolicyDetails;
@class DBTEAMLOGSharedFolderChangeMemberPolicyDetails;
@class DBTEAMLOGSharedFolderCreateDetails;
@class DBTEAMLOGSharedFolderMountDetails;
@class DBTEAMLOGSharedFolderTransferOwnershipDetails;
@class DBTEAMLOGSharedFolderUnmountDetails;
@class DBTEAMLOGSharedNoteOpenedDetails;
@class DBTEAMLOGSharingChangeFolderJoinPolicyDetails;
@class DBTEAMLOGSharingChangeLinkPolicyDetails;
@class DBTEAMLOGSharingChangeMemberPolicyDetails;
@class DBTEAMLOGShmodelAppCreateDetails;
@class DBTEAMLOGShmodelCreateDetails;
@class DBTEAMLOGShmodelDisableDetails;
@class DBTEAMLOGShmodelFbShareDetails;
@class DBTEAMLOGShmodelGroupShareDetails;
@class DBTEAMLOGShmodelRemoveExpirationDetails;
@class DBTEAMLOGShmodelSetExpirationDetails;
@class DBTEAMLOGShmodelTeamCopyDetails;
@class DBTEAMLOGShmodelTeamDownloadDetails;
@class DBTEAMLOGShmodelTeamShareDetails;
@class DBTEAMLOGShmodelTeamViewDetails;
@class DBTEAMLOGShmodelVisibilityPasswordDetails;
@class DBTEAMLOGShmodelVisibilityPublicDetails;
@class DBTEAMLOGShmodelVisibilityTeamOnlyDetails;
@class DBTEAMLOGSignInAsSessionEndDetails;
@class DBTEAMLOGSignInAsSessionStartDetails;
@class DBTEAMLOGSmartSyncChangePolicyDetails;
@class DBTEAMLOGSmartSyncCreateAdminPrivilegeReportDetails;
@class DBTEAMLOGSsoChangeCertDetails;
@class DBTEAMLOGSsoChangeLoginUrlDetails;
@class DBTEAMLOGSsoChangeLogoutUrlDetails;
@class DBTEAMLOGSsoChangePolicyDetails;
@class DBTEAMLOGSsoChangeSamlIdentityModeDetails;
@class DBTEAMLOGSsoLoginFailDetails;
@class DBTEAMLOGTeamActivityCreateReportDetails;
@class DBTEAMLOGTeamFolderChangeStatusDetails;
@class DBTEAMLOGTeamFolderCreateDetails;
@class DBTEAMLOGTeamFolderDowngradeDetails;
@class DBTEAMLOGTeamFolderPermanentlyDeleteDetails;
@class DBTEAMLOGTeamFolderRenameDetails;
@class DBTEAMLOGTeamMergeDetails;
@class DBTEAMLOGTeamProfileAddLogoDetails;
@class DBTEAMLOGTeamProfileChangeLogoDetails;
@class DBTEAMLOGTeamProfileChangeNameDetails;
@class DBTEAMLOGTeamProfileRemoveLogoDetails;
@class DBTEAMLOGTfaAddBackupPhoneDetails;
@class DBTEAMLOGTfaAddSecurityKeyDetails;
@class DBTEAMLOGTfaChangeBackupPhoneDetails;
@class DBTEAMLOGTfaChangePolicyDetails;
@class DBTEAMLOGTfaChangeStatusDetails;
@class DBTEAMLOGTfaRemoveBackupPhoneDetails;
@class DBTEAMLOGTfaRemoveSecurityKeyDetails;
@class DBTEAMLOGTfaResetDetails;
@class DBTEAMLOGTwoAccountChangePolicyDetails;
@class DBTEAMLOGWebSessionsChangeFixedLengthPolicyDetails;
@class DBTEAMLOGWebSessionsChangeIdleLengthPolicyDetails;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - API Object

///
/// The `EventDetails` union.
///
/// Additional fields depending on the event type.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBTEAMLOGEventDetails : NSObject <DBSerializable, NSCopying>

#pragma mark - Instance fields

/// The `DBTEAMLOGEventDetailsTag` enum type represents the possible tag states
/// with which the `DBTEAMLOGEventDetails` union can exist.
typedef NS_ENUM(NSInteger, DBTEAMLOGEventDetailsTag) {
  /// Changed the membership type (limited vs full) for team member.
  DBTEAMLOGEventDetailsMemberChangeMembershipTypeDetails,

  /// Permanently deleted contents of a removed team member account.
  DBTEAMLOGEventDetailsMemberPermanentlyDeleteAccountContentsDetails,

  /// Changed the status with respect to whether the team member is under or
  /// over storage quota specified by policy.
  DBTEAMLOGEventDetailsMemberSpaceLimitsChangeStatusDetails,

  /// Transferred contents of a removed team member account to another member.
  DBTEAMLOGEventDetailsMemberTransferAccountContentsDetails,

  /// Users added to Paper enabled users list.
  DBTEAMLOGEventDetailsPaperEnabledUsersGroupAdditionDetails,

  /// Users removed from Paper enabled users list.
  DBTEAMLOGEventDetailsPaperEnabledUsersGroupRemovalDetails,

  /// Paper external sharing policy changed: anyone.
  DBTEAMLOGEventDetailsPaperExternalViewAllowDetails,

  /// Paper external sharing policy changed: default team.
  DBTEAMLOGEventDetailsPaperExternalViewDefaultTeamDetails,

  /// Paper external sharing policy changed: team-only.
  DBTEAMLOGEventDetailsPaperExternalViewForbidDetails,

  /// Admin settings: team members see a warning before sharing folders
  /// outside the team (DEPRECATED FEATURE).
  DBTEAMLOGEventDetailsSfExternalInviteWarnDetails,

  /// Merged the team into another team.
  DBTEAMLOGEventDetailsTeamMergeDetails,

  /// Linked an app for team.
  DBTEAMLOGEventDetailsAppLinkTeamDetails,

  /// Linked an app for team member.
  DBTEAMLOGEventDetailsAppLinkUserDetails,

  /// Unlinked an app for team.
  DBTEAMLOGEventDetailsAppUnlinkTeamDetails,

  /// Unlinked an app for team member.
  DBTEAMLOGEventDetailsAppUnlinkUserDetails,

  /// IP address associated with active desktop session changed.
  DBTEAMLOGEventDetailsDeviceChangeIpDesktopDetails,

  /// IP address associated with active mobile session changed.
  DBTEAMLOGEventDetailsDeviceChangeIpMobileDetails,

  /// IP address associated with active Web session changed.
  DBTEAMLOGEventDetailsDeviceChangeIpWebDetails,

  /// Failed to delete all files from an unlinked device.
  DBTEAMLOGEventDetailsDeviceDeleteOnUnlinkFailDetails,

  /// Deleted all files from an unlinked device.
  DBTEAMLOGEventDetailsDeviceDeleteOnUnlinkSuccessDetails,

  /// Failed to link a device.
  DBTEAMLOGEventDetailsDeviceLinkFailDetails,

  /// Linked a device.
  DBTEAMLOGEventDetailsDeviceLinkSuccessDetails,

  /// Disable Device Management.
  DBTEAMLOGEventDetailsDeviceManagementDisabledDetails,

  /// Enable Device Management.
  DBTEAMLOGEventDetailsDeviceManagementEnabledDetails,

  /// Disconnected a device.
  DBTEAMLOGEventDetailsDeviceUnlinkDetails,

  /// Refreshed the auth token used for setting up enterprise mobility
  /// management.
  DBTEAMLOGEventDetailsEmmRefreshAuthTokenDetails,

  /// Granted or revoked the option to enable account capture on domains
  /// belonging to the team.
  DBTEAMLOGEventDetailsAccountCaptureChangeAvailabilityDetails,

  /// Account captured user migrated their account to the team.
  DBTEAMLOGEventDetailsAccountCaptureMigrateAccountDetails,

  /// Account captured user relinquished their account by changing the email
  /// address associated with it.
  DBTEAMLOGEventDetailsAccountCaptureRelinquishAccountDetails,

  /// Disabled domain invites.
  DBTEAMLOGEventDetailsDisabledDomainInvitesDetails,

  /// Approved a member's request to join the team.
  DBTEAMLOGEventDetailsDomainInvitesApproveRequestToJoinTeamDetails,

  /// Declined a user's request to join the team.
  DBTEAMLOGEventDetailsDomainInvitesDeclineRequestToJoinTeamDetails,

  /// Sent domain invites to existing domain accounts.
  DBTEAMLOGEventDetailsDomainInvitesEmailExistingUsersDetails,

  /// Asked to join the team.
  DBTEAMLOGEventDetailsDomainInvitesRequestToJoinTeamDetails,

  /// Turned off u201cAutomatically invite new usersu201d.
  DBTEAMLOGEventDetailsDomainInvitesSetInviteNewUserPrefToNoDetails,

  /// Turned on u201cAutomatically invite new usersu201d.
  DBTEAMLOGEventDetailsDomainInvitesSetInviteNewUserPrefToYesDetails,

  /// Failed to verify a domain belonging to the team.
  DBTEAMLOGEventDetailsDomainVerificationAddDomainFailDetails,

  /// Verified a domain belonging to the team.
  DBTEAMLOGEventDetailsDomainVerificationAddDomainSuccessDetails,

  /// Removed a domain from the list of verified domains belonging to the
  /// team.
  DBTEAMLOGEventDetailsDomainVerificationRemoveDomainDetails,

  /// Enabled domain invites.
  DBTEAMLOGEventDetailsEnabledDomainInvitesDetails,

  /// Created folders.
  DBTEAMLOGEventDetailsCreateFolderDetails,

  /// Added files and/or folders.
  DBTEAMLOGEventDetailsFileAddDetails,

  /// Copied files and/or folders.
  DBTEAMLOGEventDetailsFileCopyDetails,

  /// Deleted files and/or folders.
  DBTEAMLOGEventDetailsFileDeleteDetails,

  /// Downloaded files and/or folders.
  DBTEAMLOGEventDetailsFileDownloadDetails,

  /// Edited files.
  DBTEAMLOGEventDetailsFileEditDetails,

  /// Create a copy reference to a file or folder.
  DBTEAMLOGEventDetailsFileGetCopyReferenceDetails,

  /// Moved files and/or folders.
  DBTEAMLOGEventDetailsFileMoveDetails,

  /// Permanently deleted files and/or folders.
  DBTEAMLOGEventDetailsFilePermanentlyDeleteDetails,

  /// Previewed files and/or folders.
  DBTEAMLOGEventDetailsFilePreviewDetails,

  /// Renamed files and/or folders.
  DBTEAMLOGEventDetailsFileRenameDetails,

  /// Restored deleted files and/or folders.
  DBTEAMLOGEventDetailsFileRestoreDetails,

  /// Reverted files to a previous version.
  DBTEAMLOGEventDetailsFileRevertDetails,

  /// Rolled back file change location changes.
  DBTEAMLOGEventDetailsFileRollbackChangesDetails,

  /// Save a file or folder using a copy reference.
  DBTEAMLOGEventDetailsFileSaveCopyReferenceDetails,

  /// Added a deadline to a file request.
  DBTEAMLOGEventDetailsFileRequestAddDeadlineDetails,

  /// Changed the file request folder.
  DBTEAMLOGEventDetailsFileRequestChangeFolderDetails,

  /// Change the file request title.
  DBTEAMLOGEventDetailsFileRequestChangeTitleDetails,

  /// Closed a file request.
  DBTEAMLOGEventDetailsFileRequestCloseDetails,

  /// Created a file request.
  DBTEAMLOGEventDetailsFileRequestCreateDetails,

  /// Received files for a file request.
  DBTEAMLOGEventDetailsFileRequestReceiveFileDetails,

  /// Removed the file request deadline.
  DBTEAMLOGEventDetailsFileRequestRemoveDeadlineDetails,

  /// Sent file request to users via email.
  DBTEAMLOGEventDetailsFileRequestSendDetails,

  /// Added an external ID for group.
  DBTEAMLOGEventDetailsGroupAddExternalIdDetails,

  /// Added team members to a group.
  DBTEAMLOGEventDetailsGroupAddMemberDetails,

  /// Changed the external ID for group.
  DBTEAMLOGEventDetailsGroupChangeExternalIdDetails,

  /// Changed group management type.
  DBTEAMLOGEventDetailsGroupChangeManagementTypeDetails,

  /// Changed the manager permissions belonging to a group member.
  DBTEAMLOGEventDetailsGroupChangeMemberRoleDetails,

  /// Created a group.
  DBTEAMLOGEventDetailsGroupCreateDetails,

  /// Deleted a group.
  DBTEAMLOGEventDetailsGroupDeleteDetails,

  /// Updated a group.
  DBTEAMLOGEventDetailsGroupDescriptionUpdatedDetails,

  /// Updated a group join policy.
  DBTEAMLOGEventDetailsGroupJoinPolicyUpdatedDetails,

  /// Moved a group.
  DBTEAMLOGEventDetailsGroupMovedDetails,

  /// Removed the external ID for group.
  DBTEAMLOGEventDetailsGroupRemoveExternalIdDetails,

  /// Removed team members from a group.
  DBTEAMLOGEventDetailsGroupRemoveMemberDetails,

  /// Renamed a group.
  DBTEAMLOGEventDetailsGroupRenameDetails,

  /// Signed in using the Dropbox EMM app.
  DBTEAMLOGEventDetailsEmmLoginSuccessDetails,

  /// Signed out.
  DBTEAMLOGEventDetailsLogoutDetails,

  /// Failed to sign in using a password.
  DBTEAMLOGEventDetailsPasswordLoginFailDetails,

  /// Signed in using a password.
  DBTEAMLOGEventDetailsPasswordLoginSuccessDetails,

  /// Ended reseller support session.
  DBTEAMLOGEventDetailsResellerSupportSessionEndDetails,

  /// Started reseller support session.
  DBTEAMLOGEventDetailsResellerSupportSessionStartDetails,

  /// Ended admin sign-in-as session.
  DBTEAMLOGEventDetailsSignInAsSessionEndDetails,

  /// Started admin sign-in-as session.
  DBTEAMLOGEventDetailsSignInAsSessionStartDetails,

  /// Failed to sign in using SSO.
  DBTEAMLOGEventDetailsSsoLoginFailDetails,

  /// Set team member name when joining team.
  DBTEAMLOGEventDetailsMemberAddNameDetails,

  /// Changed team member email address.
  DBTEAMLOGEventDetailsMemberChangeEmailDetails,

  /// Changed team member name.
  DBTEAMLOGEventDetailsMemberChangeNameDetails,

  /// Change the admin permissions belonging to team member.
  DBTEAMLOGEventDetailsMemberChangeRoleDetails,

  /// Invited a user to join the team.
  DBTEAMLOGEventDetailsMemberInviteDetails,

  /// Joined the team.
  DBTEAMLOGEventDetailsMemberJoinDetails,

  /// Removed a team member.
  DBTEAMLOGEventDetailsMemberLeaveDetails,

  /// Recovered a removed member.
  DBTEAMLOGEventDetailsMemberRecoverDetails,

  /// Suggested a new team member to be added to the team.
  DBTEAMLOGEventDetailsMemberSuggestDetails,

  /// Suspended a team member.
  DBTEAMLOGEventDetailsMemberSuspendDetails,

  /// Unsuspended a team member.
  DBTEAMLOGEventDetailsMemberUnsuspendDetails,

  /// Added users to the membership of a Paper doc or folder.
  DBTEAMLOGEventDetailsPaperContentAddMemberDetails,

  /// Added Paper doc or folder to a folder.
  DBTEAMLOGEventDetailsPaperContentAddToFolderDetails,

  /// Archived Paper doc or folder.
  DBTEAMLOGEventDetailsPaperContentArchiveDetails,

  /// Followed or unfollowed a Paper doc or folder.
  DBTEAMLOGEventDetailsPaperContentChangeSubscriptionDetails,

  /// Created a Paper doc or folder.
  DBTEAMLOGEventDetailsPaperContentCreateDetails,

  /// Permanently deleted a Paper doc or folder.
  DBTEAMLOGEventDetailsPaperContentPermanentlyDeleteDetails,

  /// Removed Paper doc or folder from a folder.
  DBTEAMLOGEventDetailsPaperContentRemoveFromFolderDetails,

  /// Removed a user from the membership of a Paper doc or folder.
  DBTEAMLOGEventDetailsPaperContentRemoveMemberDetails,

  /// Renamed Paper doc or folder.
  DBTEAMLOGEventDetailsPaperContentRenameDetails,

  /// Restored an archived Paper doc or folder.
  DBTEAMLOGEventDetailsPaperContentRestoreDetails,

  /// Added a Paper doc comment.
  DBTEAMLOGEventDetailsPaperDocAddCommentDetails,

  /// Changed the access type of a Paper doc member.
  DBTEAMLOGEventDetailsPaperDocChangeMemberRoleDetails,

  /// Changed the sharing policy for Paper doc.
  DBTEAMLOGEventDetailsPaperDocChangeSharingPolicyDetails,

  /// Paper doc archived.
  DBTEAMLOGEventDetailsPaperDocDeletedDetails,

  /// Deleted a Paper doc comment.
  DBTEAMLOGEventDetailsPaperDocDeleteCommentDetails,

  /// Downloaded a Paper doc in a particular output format.
  DBTEAMLOGEventDetailsPaperDocDownloadDetails,

  /// Edited a Paper doc.
  DBTEAMLOGEventDetailsPaperDocEditDetails,

  /// Edited a Paper doc comment.
  DBTEAMLOGEventDetailsPaperDocEditCommentDetails,

  /// Followed a Paper doc.
  DBTEAMLOGEventDetailsPaperDocFollowedDetails,

  /// Mentioned a member in a Paper doc.
  DBTEAMLOGEventDetailsPaperDocMentionDetails,

  /// Requested to be a member on a Paper doc.
  DBTEAMLOGEventDetailsPaperDocRequestAccessDetails,

  /// Paper doc comment resolved.
  DBTEAMLOGEventDetailsPaperDocResolveCommentDetails,

  /// Restored a Paper doc to previous revision.
  DBTEAMLOGEventDetailsPaperDocRevertDetails,

  /// Paper doc link shared via slack.
  DBTEAMLOGEventDetailsPaperDocSlackShareDetails,

  /// Paper doc shared with team member.
  DBTEAMLOGEventDetailsPaperDocTeamInviteDetails,

  /// Unresolved a Paper doc comment.
  DBTEAMLOGEventDetailsPaperDocUnresolveCommentDetails,

  /// Viewed Paper doc.
  DBTEAMLOGEventDetailsPaperDocViewDetails,

  /// Paper folder archived.
  DBTEAMLOGEventDetailsPaperFolderDeletedDetails,

  /// Followed a Paper folder.
  DBTEAMLOGEventDetailsPaperFolderFollowedDetails,

  /// Paper folder shared with team member.
  DBTEAMLOGEventDetailsPaperFolderTeamInviteDetails,

  /// Changed password.
  DBTEAMLOGEventDetailsPasswordChangeDetails,

  /// Reset password.
  DBTEAMLOGEventDetailsPasswordResetDetails,

  /// Reset all team member passwords.
  DBTEAMLOGEventDetailsPasswordResetAllDetails,

  /// EMM excluded users report created.
  DBTEAMLOGEventDetailsEmmCreateExceptionsReportDetails,

  /// EMM mobile app usage report created.
  DBTEAMLOGEventDetailsEmmCreateUsageReportDetails,

  /// Smart Sync non-admin devices report created.
  DBTEAMLOGEventDetailsSmartSyncCreateAdminPrivilegeReportDetails,

  /// Created a team activity report.
  DBTEAMLOGEventDetailsTeamActivityCreateReportDetails,

  /// Shared an album.
  DBTEAMLOGEventDetailsCollectionShareDetails,

  /// Added a file comment.
  DBTEAMLOGEventDetailsFileAddCommentDetails,

  /// Liked a file comment.
  DBTEAMLOGEventDetailsFileLikeCommentDetails,

  /// Unliked a file comment.
  DBTEAMLOGEventDetailsFileUnlikeCommentDetails,

  /// Changed a Paper document to be invite-only.
  DBTEAMLOGEventDetailsNoteAclInviteOnlyDetails,

  /// Changed a Paper document to be link accessible.
  DBTEAMLOGEventDetailsNoteAclLinkDetails,

  /// Changed a Paper document to be link accessible for the team.
  DBTEAMLOGEventDetailsNoteAclTeamLinkDetails,

  /// Shared a Paper doc.
  DBTEAMLOGEventDetailsNoteSharedDetails,

  /// Shared Paper document received.
  DBTEAMLOGEventDetailsNoteShareReceiveDetails,

  /// Opened a shared Paper doc.
  DBTEAMLOGEventDetailsOpenNoteSharedDetails,

  /// Added the team to a shared folder.
  DBTEAMLOGEventDetailsSfAddGroupDetails,

  /// Allowed non collaborators to view links to files in a shared folder.
  DBTEAMLOGEventDetailsSfAllowNonMembersToViewSharedLinksDetails,

  /// Invited a group to a shared folder.
  DBTEAMLOGEventDetailsSfInviteGroupDetails,

  /// Changed parent of shared folder.
  DBTEAMLOGEventDetailsSfNestDetails,

  /// Declined a team member's invitation to a shared folder.
  DBTEAMLOGEventDetailsSfTeamDeclineDetails,

  /// Granted access to a shared folder.
  DBTEAMLOGEventDetailsSfTeamGrantAccessDetails,

  /// Invited team members to a shared folder.
  DBTEAMLOGEventDetailsSfTeamInviteDetails,

  /// Changed a team member's role in a shared folder.
  DBTEAMLOGEventDetailsSfTeamInviteChangeRoleDetails,

  /// Joined a team member's shared folder.
  DBTEAMLOGEventDetailsSfTeamJoinDetails,

  /// Joined a team member's shared folder from a link.
  DBTEAMLOGEventDetailsSfTeamJoinFromOobLinkDetails,

  /// Unshared a folder with a team member.
  DBTEAMLOGEventDetailsSfTeamUninviteDetails,

  /// Sent an email invitation to the membership of a shared file or folder.
  DBTEAMLOGEventDetailsSharedContentAddInviteesDetails,

  /// Added an expiry to the link for the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentAddLinkExpiryDetails,

  /// Added a password to the link for the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentAddLinkPasswordDetails,

  /// Added users and/or groups to the membership of a shared file or folder.
  DBTEAMLOGEventDetailsSharedContentAddMemberDetails,

  /// Changed whether members can download the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentChangeDownloadsPolicyDetails,

  /// Changed the access type of an invitee to a shared file or folder before
  /// the invitation was claimed.
  DBTEAMLOGEventDetailsSharedContentChangeInviteeRoleDetails,

  /// Changed the audience of the link for a shared file or folder.
  DBTEAMLOGEventDetailsSharedContentChangeLinkAudienceDetails,

  /// Changed the expiry of the link for the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentChangeLinkExpiryDetails,

  /// Changed the password on the link for the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentChangeLinkPasswordDetails,

  /// Changed the access type of a shared file or folder member.
  DBTEAMLOGEventDetailsSharedContentChangeMemberRoleDetails,

  /// Changed whether members can see who viewed the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentChangeViewerInfoPolicyDetails,

  /// Claimed membership to a team member's shared folder.
  DBTEAMLOGEventDetailsSharedContentClaimInvitationDetails,

  /// Copied the shared file or folder to own Dropbox.
  DBTEAMLOGEventDetailsSharedContentCopyDetails,

  /// Downloaded the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentDownloadDetails,

  /// Left the membership of a shared file or folder.
  DBTEAMLOGEventDetailsSharedContentRelinquishMembershipDetails,

  /// Removed an invitee from the membership of a shared file or folder before
  /// it was claimed.
  DBTEAMLOGEventDetailsSharedContentRemoveInviteeDetails,

  /// Removed the expiry of the link for the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentRemoveLinkExpiryDetails,

  /// Removed the password on the link for the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentRemoveLinkPasswordDetails,

  /// Removed a user or a group from the membership of a shared file or
  /// folder.
  DBTEAMLOGEventDetailsSharedContentRemoveMemberDetails,

  /// Requested to be on the membership of a shared file or folder.
  DBTEAMLOGEventDetailsSharedContentRequestAccessDetails,

  /// Unshared a shared file or folder by clearing its membership and turning
  /// off its link.
  DBTEAMLOGEventDetailsSharedContentUnshareDetails,

  /// Previewed the shared file or folder.
  DBTEAMLOGEventDetailsSharedContentViewDetails,

  /// Set or unset the confidential flag on a shared folder.
  DBTEAMLOGEventDetailsSharedFolderChangeConfidentialityDetails,

  /// Changed who can access the shared folder via a link.
  DBTEAMLOGEventDetailsSharedFolderChangeLinkPolicyDetails,

  /// Changed who can manage the membership of a shared folder.
  DBTEAMLOGEventDetailsSharedFolderChangeMemberManagementPolicyDetails,

  /// Changed who can become a member of the shared folder.
  DBTEAMLOGEventDetailsSharedFolderChangeMemberPolicyDetails,

  /// Created a shared folder.
  DBTEAMLOGEventDetailsSharedFolderCreateDetails,

  /// Added a shared folder to own Dropbox.
  DBTEAMLOGEventDetailsSharedFolderMountDetails,

  /// Transferred the ownership of a shared folder to another member.
  DBTEAMLOGEventDetailsSharedFolderTransferOwnershipDetails,

  /// Deleted a shared folder from Dropbox.
  DBTEAMLOGEventDetailsSharedFolderUnmountDetails,

  /// Shared Paper document was opened.
  DBTEAMLOGEventDetailsSharedNoteOpenedDetails,

  /// Created a link to a file using an app.
  DBTEAMLOGEventDetailsShmodelAppCreateDetails,

  /// Created a new link.
  DBTEAMLOGEventDetailsShmodelCreateDetails,

  /// Removed a link.
  DBTEAMLOGEventDetailsShmodelDisableDetails,

  /// Shared a link with Facebook users.
  DBTEAMLOGEventDetailsShmodelFbShareDetails,

  /// Shared a link with a group.
  DBTEAMLOGEventDetailsShmodelGroupShareDetails,

  /// Removed the expiration date from a link.
  DBTEAMLOGEventDetailsShmodelRemoveExpirationDetails,

  /// Added an expiration date to a link.
  DBTEAMLOGEventDetailsShmodelSetExpirationDetails,

  /// Added a team member's file/folder to their Dropbox from a link.
  DBTEAMLOGEventDetailsShmodelTeamCopyDetails,

  /// Downloaded a team member's file/folder from a link.
  DBTEAMLOGEventDetailsShmodelTeamDownloadDetails,

  /// Shared a link with team members.
  DBTEAMLOGEventDetailsShmodelTeamShareDetails,

  /// Opened a team member's link.
  DBTEAMLOGEventDetailsShmodelTeamViewDetails,

  /// Password-protected a link.
  DBTEAMLOGEventDetailsShmodelVisibilityPasswordDetails,

  /// Made a file/folder visible to anyone with the link.
  DBTEAMLOGEventDetailsShmodelVisibilityPublicDetails,

  /// Made a file/folder visible only to team members with the link.
  DBTEAMLOGEventDetailsShmodelVisibilityTeamOnlyDetails,

  /// Removed single sign-on logout URL.
  DBTEAMLOGEventDetailsRemoveLogoutUrlDetails,

  /// Changed the sign-out URL for SSO.
  DBTEAMLOGEventDetailsRemoveSsoUrlDetails,

  /// Changed the X.509 certificate for SSO.
  DBTEAMLOGEventDetailsSsoChangeCertDetails,

  /// Changed the sign-in URL for SSO.
  DBTEAMLOGEventDetailsSsoChangeLoginUrlDetails,

  /// Changed the sign-out URL for SSO.
  DBTEAMLOGEventDetailsSsoChangeLogoutUrlDetails,

  /// Changed the SAML identity mode for SSO.
  DBTEAMLOGEventDetailsSsoChangeSamlIdentityModeDetails,

  /// Changed the archival status of a team folder.
  DBTEAMLOGEventDetailsTeamFolderChangeStatusDetails,

  /// Created a new team folder in active status.
  DBTEAMLOGEventDetailsTeamFolderCreateDetails,

  /// Downgraded a team folder to a regular shared folder.
  DBTEAMLOGEventDetailsTeamFolderDowngradeDetails,

  /// Permanently deleted an archived team folder.
  DBTEAMLOGEventDetailsTeamFolderPermanentlyDeleteDetails,

  /// Renamed an active or archived team folder.
  DBTEAMLOGEventDetailsTeamFolderRenameDetails,

  /// Changed the account capture policy on a domain belonging to the team.
  DBTEAMLOGEventDetailsAccountCaptureChangePolicyDetails,

  /// Disabled allow downloads.
  DBTEAMLOGEventDetailsAllowDownloadDisabledDetails,

  /// Enabled allow downloads.
  DBTEAMLOGEventDetailsAllowDownloadEnabledDetails,

  /// Set a restriction policy regarding the location of data centers where
  /// team data resides.
  DBTEAMLOGEventDetailsDataPlacementRestrictionChangePolicyDetails,

  /// Satisfied a previously set restriction policy regarding the location of
  /// data centers where team data resides (i.e. all data have been migrated
  /// according to the restriction placed).
  DBTEAMLOGEventDetailsDataPlacementRestrictionSatisfyPolicyDetails,

  /// Set or removed a limit on the number of computers each team member can
  /// link to their work Dropbox account.
  DBTEAMLOGEventDetailsDeviceApprovalsChangeDesktopPolicyDetails,

  /// Set or removed a limit on the number of mobiles devices each team member
  /// can link to their work Dropbox account.
  DBTEAMLOGEventDetailsDeviceApprovalsChangeMobilePolicyDetails,

  /// Changed the action taken when a team member is already over the limits
  /// (e.g when they join the team, an admin lowers limits, etc.).
  DBTEAMLOGEventDetailsDeviceApprovalsChangeOverageActionDetails,

  /// Changed the action taken with respect to approval limits when a team
  /// member unlinks an approved device.
  DBTEAMLOGEventDetailsDeviceApprovalsChangeUnlinkActionDetails,

  /// Added an exception for one or more team members to optionally use the
  /// regular Dropbox app when EMM is enabled.
  DBTEAMLOGEventDetailsEmmAddExceptionDetails,

  /// Enabled or disabled enterprise mobility management for team members.
  DBTEAMLOGEventDetailsEmmChangePolicyDetails,

  /// Removed an exception for one or more team members to optionally use the
  /// regular Dropbox app when EMM is enabled.
  DBTEAMLOGEventDetailsEmmRemoveExceptionDetails,

  /// Accepted or opted out of extended version history.
  DBTEAMLOGEventDetailsExtendedVersionHistoryChangePolicyDetails,

  /// Enabled or disabled commenting on team files.
  DBTEAMLOGEventDetailsFileCommentsChangePolicyDetails,

  /// Enabled or disabled file requests.
  DBTEAMLOGEventDetailsFileRequestsChangePolicyDetails,

  /// Enabled file request emails for everyone.
  DBTEAMLOGEventDetailsFileRequestsEmailsEnabledDetails,

  /// Allowed file request emails for the team.
  DBTEAMLOGEventDetailsFileRequestsEmailsRestrictedToTeamOnlyDetails,

  /// Enabled or disabled Google single sign-on for the team.
  DBTEAMLOGEventDetailsGoogleSsoChangePolicyDetails,

  /// Changed who can create groups.
  DBTEAMLOGEventDetailsGroupUserManagementChangePolicyDetails,

  /// Changed whether users can find the team when not invited.
  DBTEAMLOGEventDetailsMemberRequestsChangePolicyDetails,

  /// Added an exception for one or more team members to bypass space limits
  /// imposed by policy.
  DBTEAMLOGEventDetailsMemberSpaceLimitsAddExceptionDetails,

  /// Changed the storage limits applied to team members by policy.
  DBTEAMLOGEventDetailsMemberSpaceLimitsChangePolicyDetails,

  /// Removed an exception for one or more team members to bypass space limits
  /// imposed by policy.
  DBTEAMLOGEventDetailsMemberSpaceLimitsRemoveExceptionDetails,

  /// Enabled or disabled the option for team members to suggest new members
  /// to add to the team.
  DBTEAMLOGEventDetailsMemberSuggestionsChangePolicyDetails,

  /// Enabled or disabled the Microsoft Office add-in, which lets team members
  /// save files to Dropbox directly from Microsoft Office.
  DBTEAMLOGEventDetailsMicrosoftOfficeAddinChangePolicyDetails,

  /// Enabled or disabled network control.
  DBTEAMLOGEventDetailsNetworkControlChangePolicyDetails,

  /// Changed whether Dropbox Paper, when enabled, is deployed to all teams or
  /// to specific members of the team.
  DBTEAMLOGEventDetailsPaperChangeDeploymentPolicyDetails,

  /// Changed whether team members can share Paper documents externally (i.e.
  /// outside the team), and if so, whether they should be accessible only by
  /// team members or anyone by default.
  DBTEAMLOGEventDetailsPaperChangeMemberPolicyDetails,

  /// Enabled or disabled Dropbox Paper for the team.
  DBTEAMLOGEventDetailsPaperChangePolicyDetails,

  /// Enabled or disabled the ability of team members to permanently delete
  /// content.
  DBTEAMLOGEventDetailsPermanentDeleteChangePolicyDetails,

  /// Changed whether team members can join shared folders owned externally
  /// (i.e. outside the team).
  DBTEAMLOGEventDetailsSharingChangeFolderJoinPolicyDetails,

  /// Changed whether team members can share links externally (i.e. outside
  /// the team), and if so, whether links should be accessible only by team
  /// members or anyone by default.
  DBTEAMLOGEventDetailsSharingChangeLinkPolicyDetails,

  /// Changed whether team members can share files and folders externally
  /// (i.e. outside the team).
  DBTEAMLOGEventDetailsSharingChangeMemberPolicyDetails,

  /// Changed the default Smart Sync policy for team members.
  DBTEAMLOGEventDetailsSmartSyncChangePolicyDetails,

  /// Change the single sign-on policy for the team.
  DBTEAMLOGEventDetailsSsoChangePolicyDetails,

  /// Change two-step verification policy for the team.
  DBTEAMLOGEventDetailsTfaChangePolicyDetails,

  /// Enabled or disabled the option for team members to link a personal
  /// Dropbox account in addition to their work account to the same computer.
  DBTEAMLOGEventDetailsTwoAccountChangePolicyDetails,

  /// Changed how long team members can stay signed in to Dropbox on the web.
  DBTEAMLOGEventDetailsWebSessionsChangeFixedLengthPolicyDetails,

  /// Changed how long team members can be idle while signed in to Dropbox on
  /// the web.
  DBTEAMLOGEventDetailsWebSessionsChangeIdleLengthPolicyDetails,

  /// Added a team logo to be displayed on shared link headers.
  DBTEAMLOGEventDetailsTeamProfileAddLogoDetails,

  /// Changed the team logo to be displayed on shared link headers.
  DBTEAMLOGEventDetailsTeamProfileChangeLogoDetails,

  /// Changed the team name.
  DBTEAMLOGEventDetailsTeamProfileChangeNameDetails,

  /// Removed the team logo to be displayed on shared link headers.
  DBTEAMLOGEventDetailsTeamProfileRemoveLogoDetails,

  /// Added a backup phone for two-step verification.
  DBTEAMLOGEventDetailsTfaAddBackupPhoneDetails,

  /// Added a security key for two-step verification.
  DBTEAMLOGEventDetailsTfaAddSecurityKeyDetails,

  /// Changed the backup phone for two-step verification.
  DBTEAMLOGEventDetailsTfaChangeBackupPhoneDetails,

  /// Enabled, disabled or changed the configuration for two-step
  /// verification.
  DBTEAMLOGEventDetailsTfaChangeStatusDetails,

  /// Removed the backup phone for two-step verification.
  DBTEAMLOGEventDetailsTfaRemoveBackupPhoneDetails,

  /// Removed a security key for two-step verification.
  DBTEAMLOGEventDetailsTfaRemoveSecurityKeyDetails,

  /// Reset two-step verification for team member.
  DBTEAMLOGEventDetailsTfaResetDetails,

  /// Hints that this event was returned with missing details due to an
  /// internal error.
  DBTEAMLOGEventDetailsMissingDetails,

  /// (no description).
  DBTEAMLOGEventDetailsOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBTEAMLOGEventDetailsTag tag;

/// Changed the membership type (limited vs full) for team member. @note Ensure
/// the `isMemberChangeMembershipTypeDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberChangeMembershipTypeDetails *memberChangeMembershipTypeDetails;

/// Permanently deleted contents of a removed team member account. @note Ensure
/// the `isMemberPermanentlyDeleteAccountContentsDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGMemberPermanentlyDeleteAccountContentsDetails *memberPermanentlyDeleteAccountContentsDetails;

/// Changed the status with respect to whether the team member is under or over
/// storage quota specified by policy. @note Ensure the
/// `isMemberSpaceLimitsChangeStatusDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberSpaceLimitsChangeStatusDetails *memberSpaceLimitsChangeStatusDetails;

/// Transferred contents of a removed team member account to another member.
/// @note Ensure the `isMemberTransferAccountContentsDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberTransferAccountContentsDetails *memberTransferAccountContentsDetails;

/// Users added to Paper enabled users list. @note Ensure the
/// `isPaperEnabledUsersGroupAdditionDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperEnabledUsersGroupAdditionDetails *paperEnabledUsersGroupAdditionDetails;

/// Users removed from Paper enabled users list. @note Ensure the
/// `isPaperEnabledUsersGroupRemovalDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperEnabledUsersGroupRemovalDetails *paperEnabledUsersGroupRemovalDetails;

/// Paper external sharing policy changed: anyone. @note Ensure the
/// `isPaperExternalViewAllowDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperExternalViewAllowDetails *paperExternalViewAllowDetails;

/// Paper external sharing policy changed: default team. @note Ensure the
/// `isPaperExternalViewDefaultTeamDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperExternalViewDefaultTeamDetails *paperExternalViewDefaultTeamDetails;

/// Paper external sharing policy changed: team-only. @note Ensure the
/// `isPaperExternalViewForbidDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperExternalViewForbidDetails *paperExternalViewForbidDetails;

/// Admin settings: team members see a warning before sharing folders outside
/// the team (DEPRECATED FEATURE). @note Ensure the
/// `isSfExternalInviteWarnDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSfExternalInviteWarnDetails *sfExternalInviteWarnDetails;

/// Merged the team into another team. @note Ensure the `isTeamMergeDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGTeamMergeDetails *teamMergeDetails;

/// Linked an app for team. @note Ensure the `isAppLinkTeamDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGAppLinkTeamDetails *appLinkTeamDetails;

/// Linked an app for team member. @note Ensure the `isAppLinkUserDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGAppLinkUserDetails *appLinkUserDetails;

/// Unlinked an app for team. @note Ensure the `isAppUnlinkTeamDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGAppUnlinkTeamDetails *appUnlinkTeamDetails;

/// Unlinked an app for team member. @note Ensure the `isAppUnlinkUserDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGAppUnlinkUserDetails *appUnlinkUserDetails;

/// IP address associated with active desktop session changed. @note Ensure the
/// `isDeviceChangeIpDesktopDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceChangeIpDesktopDetails *deviceChangeIpDesktopDetails;

/// IP address associated with active mobile session changed. @note Ensure the
/// `isDeviceChangeIpMobileDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceChangeIpMobileDetails *deviceChangeIpMobileDetails;

/// IP address associated with active Web session changed. @note Ensure the
/// `isDeviceChangeIpWebDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceChangeIpWebDetails *deviceChangeIpWebDetails;

/// Failed to delete all files from an unlinked device. @note Ensure the
/// `isDeviceDeleteOnUnlinkFailDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceDeleteOnUnlinkFailDetails *deviceDeleteOnUnlinkFailDetails;

/// Deleted all files from an unlinked device. @note Ensure the
/// `isDeviceDeleteOnUnlinkSuccessDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceDeleteOnUnlinkSuccessDetails *deviceDeleteOnUnlinkSuccessDetails;

/// Failed to link a device. @note Ensure the `isDeviceLinkFailDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceLinkFailDetails *deviceLinkFailDetails;

/// Linked a device. @note Ensure the `isDeviceLinkSuccessDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceLinkSuccessDetails *deviceLinkSuccessDetails;

/// Disable Device Management. @note Ensure the
/// `isDeviceManagementDisabledDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceManagementDisabledDetails *deviceManagementDisabledDetails;

/// Enable Device Management. @note Ensure the
/// `isDeviceManagementEnabledDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceManagementEnabledDetails *deviceManagementEnabledDetails;

/// Disconnected a device. @note Ensure the `isDeviceUnlinkDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDeviceUnlinkDetails *deviceUnlinkDetails;

/// Refreshed the auth token used for setting up enterprise mobility management.
/// @note Ensure the `isEmmRefreshAuthTokenDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGEmmRefreshAuthTokenDetails *emmRefreshAuthTokenDetails;

/// Granted or revoked the option to enable account capture on domains belonging
/// to the team. @note Ensure the `isAccountCaptureChangeAvailabilityDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly)
    DBTEAMLOGAccountCaptureChangeAvailabilityDetails *accountCaptureChangeAvailabilityDetails;

/// Account captured user migrated their account to the team. @note Ensure the
/// `isAccountCaptureMigrateAccountDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGAccountCaptureMigrateAccountDetails *accountCaptureMigrateAccountDetails;

/// Account captured user relinquished their account by changing the email
/// address associated with it. @note Ensure the
/// `isAccountCaptureRelinquishAccountDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGAccountCaptureRelinquishAccountDetails *accountCaptureRelinquishAccountDetails;

/// Disabled domain invites. @note Ensure the `isDisabledDomainInvitesDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGDisabledDomainInvitesDetails *disabledDomainInvitesDetails;

/// Approved a member's request to join the team. @note Ensure the
/// `isDomainInvitesApproveRequestToJoinTeamDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDomainInvitesApproveRequestToJoinTeamDetails *domainInvitesApproveRequestToJoinTeamDetails;

/// Declined a user's request to join the team. @note Ensure the
/// `isDomainInvitesDeclineRequestToJoinTeamDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDomainInvitesDeclineRequestToJoinTeamDetails *domainInvitesDeclineRequestToJoinTeamDetails;

/// Sent domain invites to existing domain accounts. @note Ensure the
/// `isDomainInvitesEmailExistingUsersDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDomainInvitesEmailExistingUsersDetails *domainInvitesEmailExistingUsersDetails;

/// Asked to join the team. @note Ensure the
/// `isDomainInvitesRequestToJoinTeamDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDomainInvitesRequestToJoinTeamDetails *domainInvitesRequestToJoinTeamDetails;

/// Turned off u201cAutomatically invite new usersu201d. @note Ensure the
/// `isDomainInvitesSetInviteNewUserPrefToNoDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDomainInvitesSetInviteNewUserPrefToNoDetails *domainInvitesSetInviteNewUserPrefToNoDetails;

/// Turned on u201cAutomatically invite new usersu201d. @note Ensure the
/// `isDomainInvitesSetInviteNewUserPrefToYesDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDomainInvitesSetInviteNewUserPrefToYesDetails *domainInvitesSetInviteNewUserPrefToYesDetails;

/// Failed to verify a domain belonging to the team. @note Ensure the
/// `isDomainVerificationAddDomainFailDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDomainVerificationAddDomainFailDetails *domainVerificationAddDomainFailDetails;

/// Verified a domain belonging to the team. @note Ensure the
/// `isDomainVerificationAddDomainSuccessDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDomainVerificationAddDomainSuccessDetails *domainVerificationAddDomainSuccessDetails;

/// Removed a domain from the list of verified domains belonging to the team.
/// @note Ensure the `isDomainVerificationRemoveDomainDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGDomainVerificationRemoveDomainDetails *domainVerificationRemoveDomainDetails;

/// Enabled domain invites. @note Ensure the `isEnabledDomainInvitesDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGEnabledDomainInvitesDetails *enabledDomainInvitesDetails;

/// Created folders. @note Ensure the `isCreateFolderDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGCreateFolderDetails *createFolderDetails;

/// Added files and/or folders. @note Ensure the `isFileAddDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileAddDetails *fileAddDetails;

/// Copied files and/or folders. @note Ensure the `isFileCopyDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileCopyDetails *fileCopyDetails;

/// Deleted files and/or folders. @note Ensure the `isFileDeleteDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileDeleteDetails *fileDeleteDetails;

/// Downloaded files and/or folders. @note Ensure the `isFileDownloadDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGFileDownloadDetails *fileDownloadDetails;

/// Edited files. @note Ensure the `isFileEditDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileEditDetails *fileEditDetails;

/// Create a copy reference to a file or folder. @note Ensure the
/// `isFileGetCopyReferenceDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileGetCopyReferenceDetails *fileGetCopyReferenceDetails;

/// Moved files and/or folders. @note Ensure the `isFileMoveDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileMoveDetails *fileMoveDetails;

/// Permanently deleted files and/or folders. @note Ensure the
/// `isFilePermanentlyDeleteDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFilePermanentlyDeleteDetails *filePermanentlyDeleteDetails;

/// Previewed files and/or folders. @note Ensure the `isFilePreviewDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGFilePreviewDetails *filePreviewDetails;

/// Renamed files and/or folders. @note Ensure the `isFileRenameDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRenameDetails *fileRenameDetails;

/// Restored deleted files and/or folders. @note Ensure the
/// `isFileRestoreDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRestoreDetails *fileRestoreDetails;

/// Reverted files to a previous version. @note Ensure the `isFileRevertDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGFileRevertDetails *fileRevertDetails;

/// Rolled back file change location changes. @note Ensure the
/// `isFileRollbackChangesDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRollbackChangesDetails *fileRollbackChangesDetails;

/// Save a file or folder using a copy reference. @note Ensure the
/// `isFileSaveCopyReferenceDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileSaveCopyReferenceDetails *fileSaveCopyReferenceDetails;

/// Added a deadline to a file request. @note Ensure the
/// `isFileRequestAddDeadlineDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestAddDeadlineDetails *fileRequestAddDeadlineDetails;

/// Changed the file request folder. @note Ensure the
/// `isFileRequestChangeFolderDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestChangeFolderDetails *fileRequestChangeFolderDetails;

/// Change the file request title. @note Ensure the
/// `isFileRequestChangeTitleDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestChangeTitleDetails *fileRequestChangeTitleDetails;

/// Closed a file request. @note Ensure the `isFileRequestCloseDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestCloseDetails *fileRequestCloseDetails;

/// Created a file request. @note Ensure the `isFileRequestCreateDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestCreateDetails *fileRequestCreateDetails;

/// Received files for a file request. @note Ensure the
/// `isFileRequestReceiveFileDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestReceiveFileDetails *fileRequestReceiveFileDetails;

/// Removed the file request deadline. @note Ensure the
/// `isFileRequestRemoveDeadlineDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestRemoveDeadlineDetails *fileRequestRemoveDeadlineDetails;

/// Sent file request to users via email. @note Ensure the
/// `isFileRequestSendDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestSendDetails *fileRequestSendDetails;

/// Added an external ID for group. @note Ensure the
/// `isGroupAddExternalIdDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupAddExternalIdDetails *groupAddExternalIdDetails;

/// Added team members to a group. @note Ensure the `isGroupAddMemberDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGGroupAddMemberDetails *groupAddMemberDetails;

/// Changed the external ID for group. @note Ensure the
/// `isGroupChangeExternalIdDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupChangeExternalIdDetails *groupChangeExternalIdDetails;

/// Changed group management type. @note Ensure the
/// `isGroupChangeManagementTypeDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupChangeManagementTypeDetails *groupChangeManagementTypeDetails;

/// Changed the manager permissions belonging to a group member. @note Ensure
/// the `isGroupChangeMemberRoleDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupChangeMemberRoleDetails *groupChangeMemberRoleDetails;

/// Created a group. @note Ensure the `isGroupCreateDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupCreateDetails *groupCreateDetails;

/// Deleted a group. @note Ensure the `isGroupDeleteDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupDeleteDetails *groupDeleteDetails;

/// Updated a group. @note Ensure the `isGroupDescriptionUpdatedDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupDescriptionUpdatedDetails *groupDescriptionUpdatedDetails;

/// Updated a group join policy. @note Ensure the
/// `isGroupJoinPolicyUpdatedDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupJoinPolicyUpdatedDetails *groupJoinPolicyUpdatedDetails;

/// Moved a group. @note Ensure the `isGroupMovedDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupMovedDetails *groupMovedDetails;

/// Removed the external ID for group. @note Ensure the
/// `isGroupRemoveExternalIdDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupRemoveExternalIdDetails *groupRemoveExternalIdDetails;

/// Removed team members from a group. @note Ensure the
/// `isGroupRemoveMemberDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupRemoveMemberDetails *groupRemoveMemberDetails;

/// Renamed a group. @note Ensure the `isGroupRenameDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupRenameDetails *groupRenameDetails;

/// Signed in using the Dropbox EMM app. @note Ensure the
/// `isEmmLoginSuccessDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGEmmLoginSuccessDetails *emmLoginSuccessDetails;

/// Signed out. @note Ensure the `isLogoutDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGLogoutDetails *logoutDetails;

/// Failed to sign in using a password. @note Ensure the
/// `isPasswordLoginFailDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPasswordLoginFailDetails *passwordLoginFailDetails;

/// Signed in using a password. @note Ensure the `isPasswordLoginSuccessDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGPasswordLoginSuccessDetails *passwordLoginSuccessDetails;

/// Ended reseller support session. @note Ensure the
/// `isResellerSupportSessionEndDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGResellerSupportSessionEndDetails *resellerSupportSessionEndDetails;

/// Started reseller support session. @note Ensure the
/// `isResellerSupportSessionStartDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGResellerSupportSessionStartDetails *resellerSupportSessionStartDetails;

/// Ended admin sign-in-as session. @note Ensure the
/// `isSignInAsSessionEndDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSignInAsSessionEndDetails *signInAsSessionEndDetails;

/// Started admin sign-in-as session. @note Ensure the
/// `isSignInAsSessionStartDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSignInAsSessionStartDetails *signInAsSessionStartDetails;

/// Failed to sign in using SSO. @note Ensure the `isSsoLoginFailDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSsoLoginFailDetails *ssoLoginFailDetails;

/// Set team member name when joining team. @note Ensure the
/// `isMemberAddNameDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberAddNameDetails *memberAddNameDetails;

/// Changed team member email address. @note Ensure the
/// `isMemberChangeEmailDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberChangeEmailDetails *memberChangeEmailDetails;

/// Changed team member name. @note Ensure the `isMemberChangeNameDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGMemberChangeNameDetails *memberChangeNameDetails;

/// Change the admin permissions belonging to team member. @note Ensure the
/// `isMemberChangeRoleDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberChangeRoleDetails *memberChangeRoleDetails;

/// Invited a user to join the team. @note Ensure the `isMemberInviteDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGMemberInviteDetails *memberInviteDetails;

/// Joined the team. @note Ensure the `isMemberJoinDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberJoinDetails *memberJoinDetails;

/// Removed a team member. @note Ensure the `isMemberLeaveDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberLeaveDetails *memberLeaveDetails;

/// Recovered a removed member. @note Ensure the `isMemberRecoverDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberRecoverDetails *memberRecoverDetails;

/// Suggested a new team member to be added to the team. @note Ensure the
/// `isMemberSuggestDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberSuggestDetails *memberSuggestDetails;

/// Suspended a team member. @note Ensure the `isMemberSuspendDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberSuspendDetails *memberSuspendDetails;

/// Unsuspended a team member. @note Ensure the `isMemberUnsuspendDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGMemberUnsuspendDetails *memberUnsuspendDetails;

/// Added users to the membership of a Paper doc or folder. @note Ensure the
/// `isPaperContentAddMemberDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentAddMemberDetails *paperContentAddMemberDetails;

/// Added Paper doc or folder to a folder. @note Ensure the
/// `isPaperContentAddToFolderDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentAddToFolderDetails *paperContentAddToFolderDetails;

/// Archived Paper doc or folder. @note Ensure the
/// `isPaperContentArchiveDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentArchiveDetails *paperContentArchiveDetails;

/// Followed or unfollowed a Paper doc or folder. @note Ensure the
/// `isPaperContentChangeSubscriptionDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentChangeSubscriptionDetails *paperContentChangeSubscriptionDetails;

/// Created a Paper doc or folder. @note Ensure the
/// `isPaperContentCreateDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentCreateDetails *paperContentCreateDetails;

/// Permanently deleted a Paper doc or folder. @note Ensure the
/// `isPaperContentPermanentlyDeleteDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentPermanentlyDeleteDetails *paperContentPermanentlyDeleteDetails;

/// Removed Paper doc or folder from a folder. @note Ensure the
/// `isPaperContentRemoveFromFolderDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentRemoveFromFolderDetails *paperContentRemoveFromFolderDetails;

/// Removed a user from the membership of a Paper doc or folder. @note Ensure
/// the `isPaperContentRemoveMemberDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentRemoveMemberDetails *paperContentRemoveMemberDetails;

/// Renamed Paper doc or folder. @note Ensure the `isPaperContentRenameDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentRenameDetails *paperContentRenameDetails;

/// Restored an archived Paper doc or folder. @note Ensure the
/// `isPaperContentRestoreDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperContentRestoreDetails *paperContentRestoreDetails;

/// Added a Paper doc comment. @note Ensure the `isPaperDocAddCommentDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocAddCommentDetails *paperDocAddCommentDetails;

/// Changed the access type of a Paper doc member. @note Ensure the
/// `isPaperDocChangeMemberRoleDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocChangeMemberRoleDetails *paperDocChangeMemberRoleDetails;

/// Changed the sharing policy for Paper doc. @note Ensure the
/// `isPaperDocChangeSharingPolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocChangeSharingPolicyDetails *paperDocChangeSharingPolicyDetails;

/// Paper doc archived. @note Ensure the `isPaperDocDeletedDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocDeletedDetails *paperDocDeletedDetails;

/// Deleted a Paper doc comment. @note Ensure the
/// `isPaperDocDeleteCommentDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocDeleteCommentDetails *paperDocDeleteCommentDetails;

/// Downloaded a Paper doc in a particular output format. @note Ensure the
/// `isPaperDocDownloadDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocDownloadDetails *paperDocDownloadDetails;

/// Edited a Paper doc. @note Ensure the `isPaperDocEditDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocEditDetails *paperDocEditDetails;

/// Edited a Paper doc comment. @note Ensure the `isPaperDocEditCommentDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocEditCommentDetails *paperDocEditCommentDetails;

/// Followed a Paper doc. @note Ensure the `isPaperDocFollowedDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocFollowedDetails *paperDocFollowedDetails;

/// Mentioned a member in a Paper doc. @note Ensure the
/// `isPaperDocMentionDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocMentionDetails *paperDocMentionDetails;

/// Requested to be a member on a Paper doc. @note Ensure the
/// `isPaperDocRequestAccessDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocRequestAccessDetails *paperDocRequestAccessDetails;

/// Paper doc comment resolved. @note Ensure the
/// `isPaperDocResolveCommentDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocResolveCommentDetails *paperDocResolveCommentDetails;

/// Restored a Paper doc to previous revision. @note Ensure the
/// `isPaperDocRevertDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocRevertDetails *paperDocRevertDetails;

/// Paper doc link shared via slack. @note Ensure the
/// `isPaperDocSlackShareDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocSlackShareDetails *paperDocSlackShareDetails;

/// Paper doc shared with team member. @note Ensure the
/// `isPaperDocTeamInviteDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocTeamInviteDetails *paperDocTeamInviteDetails;

/// Unresolved a Paper doc comment. @note Ensure the
/// `isPaperDocUnresolveCommentDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocUnresolveCommentDetails *paperDocUnresolveCommentDetails;

/// Viewed Paper doc. @note Ensure the `isPaperDocViewDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperDocViewDetails *paperDocViewDetails;

/// Paper folder archived. @note Ensure the `isPaperFolderDeletedDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperFolderDeletedDetails *paperFolderDeletedDetails;

/// Followed a Paper folder. @note Ensure the `isPaperFolderFollowedDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGPaperFolderFollowedDetails *paperFolderFollowedDetails;

/// Paper folder shared with team member. @note Ensure the
/// `isPaperFolderTeamInviteDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperFolderTeamInviteDetails *paperFolderTeamInviteDetails;

/// Changed password. @note Ensure the `isPasswordChangeDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPasswordChangeDetails *passwordChangeDetails;

/// Reset password. @note Ensure the `isPasswordResetDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPasswordResetDetails *passwordResetDetails;

/// Reset all team member passwords. @note Ensure the
/// `isPasswordResetAllDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPasswordResetAllDetails *passwordResetAllDetails;

/// EMM excluded users report created. @note Ensure the
/// `isEmmCreateExceptionsReportDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGEmmCreateExceptionsReportDetails *emmCreateExceptionsReportDetails;

/// EMM mobile app usage report created. @note Ensure the
/// `isEmmCreateUsageReportDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGEmmCreateUsageReportDetails *emmCreateUsageReportDetails;

/// Smart Sync non-admin devices report created. @note Ensure the
/// `isSmartSyncCreateAdminPrivilegeReportDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGSmartSyncCreateAdminPrivilegeReportDetails *smartSyncCreateAdminPrivilegeReportDetails;

/// Created a team activity report. @note Ensure the
/// `isTeamActivityCreateReportDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTeamActivityCreateReportDetails *teamActivityCreateReportDetails;

/// Shared an album. @note Ensure the `isCollectionShareDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGCollectionShareDetails *collectionShareDetails;

/// Added a file comment. @note Ensure the `isFileAddCommentDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileAddCommentDetails *fileAddCommentDetails;

/// Liked a file comment. @note Ensure the `isFileLikeCommentDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileLikeCommentDetails *fileLikeCommentDetails;

/// Unliked a file comment. @note Ensure the `isFileUnlikeCommentDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileUnlikeCommentDetails *fileUnlikeCommentDetails;

/// Changed a Paper document to be invite-only. @note Ensure the
/// `isNoteAclInviteOnlyDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGNoteAclInviteOnlyDetails *noteAclInviteOnlyDetails;

/// Changed a Paper document to be link accessible. @note Ensure the
/// `isNoteAclLinkDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGNoteAclLinkDetails *noteAclLinkDetails;

/// Changed a Paper document to be link accessible for the team. @note Ensure
/// the `isNoteAclTeamLinkDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGNoteAclTeamLinkDetails *noteAclTeamLinkDetails;

/// Shared a Paper doc. @note Ensure the `isNoteSharedDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGNoteSharedDetails *noteSharedDetails;

/// Shared Paper document received. @note Ensure the `isNoteShareReceiveDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGNoteShareReceiveDetails *noteShareReceiveDetails;

/// Opened a shared Paper doc. @note Ensure the `isOpenNoteSharedDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGOpenNoteSharedDetails *openNoteSharedDetails;

/// Added the team to a shared folder. @note Ensure the `isSfAddGroupDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGSfAddGroupDetails *sfAddGroupDetails;

/// Allowed non collaborators to view links to files in a shared folder. @note
/// Ensure the `isSfAllowNonMembersToViewSharedLinksDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGSfAllowNonMembersToViewSharedLinksDetails *sfAllowNonMembersToViewSharedLinksDetails;

/// Invited a group to a shared folder. @note Ensure the
/// `isSfInviteGroupDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSfInviteGroupDetails *sfInviteGroupDetails;

/// Changed parent of shared folder. @note Ensure the `isSfNestDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSfNestDetails *sfNestDetails;

/// Declined a team member's invitation to a shared folder. @note Ensure the
/// `isSfTeamDeclineDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSfTeamDeclineDetails *sfTeamDeclineDetails;

/// Granted access to a shared folder. @note Ensure the
/// `isSfTeamGrantAccessDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSfTeamGrantAccessDetails *sfTeamGrantAccessDetails;

/// Invited team members to a shared folder. @note Ensure the
/// `isSfTeamInviteDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSfTeamInviteDetails *sfTeamInviteDetails;

/// Changed a team member's role in a shared folder. @note Ensure the
/// `isSfTeamInviteChangeRoleDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSfTeamInviteChangeRoleDetails *sfTeamInviteChangeRoleDetails;

/// Joined a team member's shared folder. @note Ensure the `isSfTeamJoinDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGSfTeamJoinDetails *sfTeamJoinDetails;

/// Joined a team member's shared folder from a link. @note Ensure the
/// `isSfTeamJoinFromOobLinkDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSfTeamJoinFromOobLinkDetails *sfTeamJoinFromOobLinkDetails;

/// Unshared a folder with a team member. @note Ensure the
/// `isSfTeamUninviteDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSfTeamUninviteDetails *sfTeamUninviteDetails;

/// Sent an email invitation to the membership of a shared file or folder. @note
/// Ensure the `isSharedContentAddInviteesDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentAddInviteesDetails *sharedContentAddInviteesDetails;

/// Added an expiry to the link for the shared file or folder. @note Ensure the
/// `isSharedContentAddLinkExpiryDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentAddLinkExpiryDetails *sharedContentAddLinkExpiryDetails;

/// Added a password to the link for the shared file or folder. @note Ensure the
/// `isSharedContentAddLinkPasswordDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentAddLinkPasswordDetails *sharedContentAddLinkPasswordDetails;

/// Added users and/or groups to the membership of a shared file or folder.
/// @note Ensure the `isSharedContentAddMemberDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentAddMemberDetails *sharedContentAddMemberDetails;

/// Changed whether members can download the shared file or folder. @note Ensure
/// the `isSharedContentChangeDownloadsPolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGSharedContentChangeDownloadsPolicyDetails *sharedContentChangeDownloadsPolicyDetails;

/// Changed the access type of an invitee to a shared file or folder before the
/// invitation was claimed. @note Ensure the
/// `isSharedContentChangeInviteeRoleDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentChangeInviteeRoleDetails *sharedContentChangeInviteeRoleDetails;

/// Changed the audience of the link for a shared file or folder. @note Ensure
/// the `isSharedContentChangeLinkAudienceDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentChangeLinkAudienceDetails *sharedContentChangeLinkAudienceDetails;

/// Changed the expiry of the link for the shared file or folder. @note Ensure
/// the `isSharedContentChangeLinkExpiryDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentChangeLinkExpiryDetails *sharedContentChangeLinkExpiryDetails;

/// Changed the password on the link for the shared file or folder. @note Ensure
/// the `isSharedContentChangeLinkPasswordDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentChangeLinkPasswordDetails *sharedContentChangeLinkPasswordDetails;

/// Changed the access type of a shared file or folder member. @note Ensure the
/// `isSharedContentChangeMemberRoleDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentChangeMemberRoleDetails *sharedContentChangeMemberRoleDetails;

/// Changed whether members can see who viewed the shared file or folder. @note
/// Ensure the `isSharedContentChangeViewerInfoPolicyDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGSharedContentChangeViewerInfoPolicyDetails *sharedContentChangeViewerInfoPolicyDetails;

/// Claimed membership to a team member's shared folder. @note Ensure the
/// `isSharedContentClaimInvitationDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentClaimInvitationDetails *sharedContentClaimInvitationDetails;

/// Copied the shared file or folder to own Dropbox. @note Ensure the
/// `isSharedContentCopyDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentCopyDetails *sharedContentCopyDetails;

/// Downloaded the shared file or folder. @note Ensure the
/// `isSharedContentDownloadDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentDownloadDetails *sharedContentDownloadDetails;

/// Left the membership of a shared file or folder. @note Ensure the
/// `isSharedContentRelinquishMembershipDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGSharedContentRelinquishMembershipDetails *sharedContentRelinquishMembershipDetails;

/// Removed an invitee from the membership of a shared file or folder before it
/// was claimed. @note Ensure the `isSharedContentRemoveInviteeDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentRemoveInviteeDetails *sharedContentRemoveInviteeDetails;

/// Removed the expiry of the link for the shared file or folder. @note Ensure
/// the `isSharedContentRemoveLinkExpiryDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentRemoveLinkExpiryDetails *sharedContentRemoveLinkExpiryDetails;

/// Removed the password on the link for the shared file or folder. @note Ensure
/// the `isSharedContentRemoveLinkPasswordDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentRemoveLinkPasswordDetails *sharedContentRemoveLinkPasswordDetails;

/// Removed a user or a group from the membership of a shared file or folder.
/// @note Ensure the `isSharedContentRemoveMemberDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentRemoveMemberDetails *sharedContentRemoveMemberDetails;

/// Requested to be on the membership of a shared file or folder. @note Ensure
/// the `isSharedContentRequestAccessDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentRequestAccessDetails *sharedContentRequestAccessDetails;

/// Unshared a shared file or folder by clearing its membership and turning off
/// its link. @note Ensure the `isSharedContentUnshareDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentUnshareDetails *sharedContentUnshareDetails;

/// Previewed the shared file or folder. @note Ensure the
/// `isSharedContentViewDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedContentViewDetails *sharedContentViewDetails;

/// Set or unset the confidential flag on a shared folder. @note Ensure the
/// `isSharedFolderChangeConfidentialityDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGSharedFolderChangeConfidentialityDetails *sharedFolderChangeConfidentialityDetails;

/// Changed who can access the shared folder via a link. @note Ensure the
/// `isSharedFolderChangeLinkPolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedFolderChangeLinkPolicyDetails *sharedFolderChangeLinkPolicyDetails;

/// Changed who can manage the membership of a shared folder. @note Ensure the
/// `isSharedFolderChangeMemberManagementPolicyDetails` method returns true
/// before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGSharedFolderChangeMemberManagementPolicyDetails *sharedFolderChangeMemberManagementPolicyDetails;

/// Changed who can become a member of the shared folder. @note Ensure the
/// `isSharedFolderChangeMemberPolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedFolderChangeMemberPolicyDetails *sharedFolderChangeMemberPolicyDetails;

/// Created a shared folder. @note Ensure the `isSharedFolderCreateDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGSharedFolderCreateDetails *sharedFolderCreateDetails;

/// Added a shared folder to own Dropbox. @note Ensure the
/// `isSharedFolderMountDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedFolderMountDetails *sharedFolderMountDetails;

/// Transferred the ownership of a shared folder to another member. @note Ensure
/// the `isSharedFolderTransferOwnershipDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedFolderTransferOwnershipDetails *sharedFolderTransferOwnershipDetails;

/// Deleted a shared folder from Dropbox. @note Ensure the
/// `isSharedFolderUnmountDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedFolderUnmountDetails *sharedFolderUnmountDetails;

/// Shared Paper document was opened. @note Ensure the
/// `isSharedNoteOpenedDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSharedNoteOpenedDetails *sharedNoteOpenedDetails;

/// Created a link to a file using an app. @note Ensure the
/// `isShmodelAppCreateDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelAppCreateDetails *shmodelAppCreateDetails;

/// Created a new link. @note Ensure the `isShmodelCreateDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelCreateDetails *shmodelCreateDetails;

/// Removed a link. @note Ensure the `isShmodelDisableDetails` method returns
/// true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelDisableDetails *shmodelDisableDetails;

/// Shared a link with Facebook users. @note Ensure the
/// `isShmodelFbShareDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelFbShareDetails *shmodelFbShareDetails;

/// Shared a link with a group. @note Ensure the `isShmodelGroupShareDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelGroupShareDetails *shmodelGroupShareDetails;

/// Removed the expiration date from a link. @note Ensure the
/// `isShmodelRemoveExpirationDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelRemoveExpirationDetails *shmodelRemoveExpirationDetails;

/// Added an expiration date to a link. @note Ensure the
/// `isShmodelSetExpirationDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelSetExpirationDetails *shmodelSetExpirationDetails;

/// Added a team member's file/folder to their Dropbox from a link. @note Ensure
/// the `isShmodelTeamCopyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelTeamCopyDetails *shmodelTeamCopyDetails;

/// Downloaded a team member's file/folder from a link. @note Ensure the
/// `isShmodelTeamDownloadDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelTeamDownloadDetails *shmodelTeamDownloadDetails;

/// Shared a link with team members. @note Ensure the
/// `isShmodelTeamShareDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelTeamShareDetails *shmodelTeamShareDetails;

/// Opened a team member's link. @note Ensure the `isShmodelTeamViewDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelTeamViewDetails *shmodelTeamViewDetails;

/// Password-protected a link. @note Ensure the
/// `isShmodelVisibilityPasswordDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelVisibilityPasswordDetails *shmodelVisibilityPasswordDetails;

/// Made a file/folder visible to anyone with the link. @note Ensure the
/// `isShmodelVisibilityPublicDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelVisibilityPublicDetails *shmodelVisibilityPublicDetails;

/// Made a file/folder visible only to team members with the link. @note Ensure
/// the `isShmodelVisibilityTeamOnlyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGShmodelVisibilityTeamOnlyDetails *shmodelVisibilityTeamOnlyDetails;

/// Removed single sign-on logout URL. @note Ensure the
/// `isRemoveLogoutUrlDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGRemoveLogoutUrlDetails *removeLogoutUrlDetails;

/// Changed the sign-out URL for SSO. @note Ensure the `isRemoveSsoUrlDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGRemoveSsoUrlDetails *removeSsoUrlDetails;

/// Changed the X.509 certificate for SSO. @note Ensure the
/// `isSsoChangeCertDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSsoChangeCertDetails *ssoChangeCertDetails;

/// Changed the sign-in URL for SSO. @note Ensure the
/// `isSsoChangeLoginUrlDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSsoChangeLoginUrlDetails *ssoChangeLoginUrlDetails;

/// Changed the sign-out URL for SSO. @note Ensure the
/// `isSsoChangeLogoutUrlDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSsoChangeLogoutUrlDetails *ssoChangeLogoutUrlDetails;

/// Changed the SAML identity mode for SSO. @note Ensure the
/// `isSsoChangeSamlIdentityModeDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSsoChangeSamlIdentityModeDetails *ssoChangeSamlIdentityModeDetails;

/// Changed the archival status of a team folder. @note Ensure the
/// `isTeamFolderChangeStatusDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTeamFolderChangeStatusDetails *teamFolderChangeStatusDetails;

/// Created a new team folder in active status. @note Ensure the
/// `isTeamFolderCreateDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTeamFolderCreateDetails *teamFolderCreateDetails;

/// Downgraded a team folder to a regular shared folder. @note Ensure the
/// `isTeamFolderDowngradeDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTeamFolderDowngradeDetails *teamFolderDowngradeDetails;

/// Permanently deleted an archived team folder. @note Ensure the
/// `isTeamFolderPermanentlyDeleteDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTeamFolderPermanentlyDeleteDetails *teamFolderPermanentlyDeleteDetails;

/// Renamed an active or archived team folder. @note Ensure the
/// `isTeamFolderRenameDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTeamFolderRenameDetails *teamFolderRenameDetails;

/// Changed the account capture policy on a domain belonging to the team. @note
/// Ensure the `isAccountCaptureChangePolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGAccountCaptureChangePolicyDetails *accountCaptureChangePolicyDetails;

/// Disabled allow downloads. @note Ensure the `isAllowDownloadDisabledDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGAllowDownloadDisabledDetails *allowDownloadDisabledDetails;

/// Enabled allow downloads. @note Ensure the `isAllowDownloadEnabledDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGAllowDownloadEnabledDetails *allowDownloadEnabledDetails;

/// Set a restriction policy regarding the location of data centers where team
/// data resides. @note Ensure the
/// `isDataPlacementRestrictionChangePolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDataPlacementRestrictionChangePolicyDetails *dataPlacementRestrictionChangePolicyDetails;

/// Satisfied a previously set restriction policy regarding the location of data
/// centers where team data resides (i.e. all data have been migrated according
/// to the restriction placed). @note Ensure the
/// `isDataPlacementRestrictionSatisfyPolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDataPlacementRestrictionSatisfyPolicyDetails *dataPlacementRestrictionSatisfyPolicyDetails;

/// Set or removed a limit on the number of computers each team member can link
/// to their work Dropbox account. @note Ensure the
/// `isDeviceApprovalsChangeDesktopPolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDeviceApprovalsChangeDesktopPolicyDetails *deviceApprovalsChangeDesktopPolicyDetails;

/// Set or removed a limit on the number of mobiles devices each team member can
/// link to their work Dropbox account. @note Ensure the
/// `isDeviceApprovalsChangeMobilePolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDeviceApprovalsChangeMobilePolicyDetails *deviceApprovalsChangeMobilePolicyDetails;

/// Changed the action taken when a team member is already over the limits (e.g
/// when they join the team, an admin lowers limits, etc.). @note Ensure the
/// `isDeviceApprovalsChangeOverageActionDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDeviceApprovalsChangeOverageActionDetails *deviceApprovalsChangeOverageActionDetails;

/// Changed the action taken with respect to approval limits when a team member
/// unlinks an approved device. @note Ensure the
/// `isDeviceApprovalsChangeUnlinkActionDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGDeviceApprovalsChangeUnlinkActionDetails *deviceApprovalsChangeUnlinkActionDetails;

/// Added an exception for one or more team members to optionally use the
/// regular Dropbox app when EMM is enabled. @note Ensure the
/// `isEmmAddExceptionDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGEmmAddExceptionDetails *emmAddExceptionDetails;

/// Enabled or disabled enterprise mobility management for team members. @note
/// Ensure the `isEmmChangePolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGEmmChangePolicyDetails *emmChangePolicyDetails;

/// Removed an exception for one or more team members to optionally use the
/// regular Dropbox app when EMM is enabled. @note Ensure the
/// `isEmmRemoveExceptionDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGEmmRemoveExceptionDetails *emmRemoveExceptionDetails;

/// Accepted or opted out of extended version history. @note Ensure the
/// `isExtendedVersionHistoryChangePolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGExtendedVersionHistoryChangePolicyDetails *extendedVersionHistoryChangePolicyDetails;

/// Enabled or disabled commenting on team files. @note Ensure the
/// `isFileCommentsChangePolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileCommentsChangePolicyDetails *fileCommentsChangePolicyDetails;

/// Enabled or disabled file requests. @note Ensure the
/// `isFileRequestsChangePolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestsChangePolicyDetails *fileRequestsChangePolicyDetails;

/// Enabled file request emails for everyone. @note Ensure the
/// `isFileRequestsEmailsEnabledDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGFileRequestsEmailsEnabledDetails *fileRequestsEmailsEnabledDetails;

/// Allowed file request emails for the team. @note Ensure the
/// `isFileRequestsEmailsRestrictedToTeamOnlyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGFileRequestsEmailsRestrictedToTeamOnlyDetails *fileRequestsEmailsRestrictedToTeamOnlyDetails;

/// Enabled or disabled Google single sign-on for the team. @note Ensure the
/// `isGoogleSsoChangePolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGoogleSsoChangePolicyDetails *googleSsoChangePolicyDetails;

/// Changed who can create groups. @note Ensure the
/// `isGroupUserManagementChangePolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGGroupUserManagementChangePolicyDetails *groupUserManagementChangePolicyDetails;

/// Changed whether users can find the team when not invited. @note Ensure the
/// `isMemberRequestsChangePolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberRequestsChangePolicyDetails *memberRequestsChangePolicyDetails;

/// Added an exception for one or more team members to bypass space limits
/// imposed by policy. @note Ensure the `isMemberSpaceLimitsAddExceptionDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGMemberSpaceLimitsAddExceptionDetails *memberSpaceLimitsAddExceptionDetails;

/// Changed the storage limits applied to team members by policy. @note Ensure
/// the `isMemberSpaceLimitsChangePolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMemberSpaceLimitsChangePolicyDetails *memberSpaceLimitsChangePolicyDetails;

/// Removed an exception for one or more team members to bypass space limits
/// imposed by policy. @note Ensure the
/// `isMemberSpaceLimitsRemoveExceptionDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGMemberSpaceLimitsRemoveExceptionDetails *memberSpaceLimitsRemoveExceptionDetails;

/// Enabled or disabled the option for team members to suggest new members to
/// add to the team. @note Ensure the `isMemberSuggestionsChangePolicyDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGMemberSuggestionsChangePolicyDetails *memberSuggestionsChangePolicyDetails;

/// Enabled or disabled the Microsoft Office add-in, which lets team members
/// save files to Dropbox directly from Microsoft Office. @note Ensure the
/// `isMicrosoftOfficeAddinChangePolicyDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGMicrosoftOfficeAddinChangePolicyDetails *microsoftOfficeAddinChangePolicyDetails;

/// Enabled or disabled network control. @note Ensure the
/// `isNetworkControlChangePolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGNetworkControlChangePolicyDetails *networkControlChangePolicyDetails;

/// Changed whether Dropbox Paper, when enabled, is deployed to all teams or to
/// specific members of the team. @note Ensure the
/// `isPaperChangeDeploymentPolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperChangeDeploymentPolicyDetails *paperChangeDeploymentPolicyDetails;

/// Changed whether team members can share Paper documents externally (i.e.
/// outside the team), and if so, whether they should be accessible only by team
/// members or anyone by default. @note Ensure the
/// `isPaperChangeMemberPolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperChangeMemberPolicyDetails *paperChangeMemberPolicyDetails;

/// Enabled or disabled Dropbox Paper for the team. @note Ensure the
/// `isPaperChangePolicyDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPaperChangePolicyDetails *paperChangePolicyDetails;

/// Enabled or disabled the ability of team members to permanently delete
/// content. @note Ensure the `isPermanentDeleteChangePolicyDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGPermanentDeleteChangePolicyDetails *permanentDeleteChangePolicyDetails;

/// Changed whether team members can join shared folders owned externally (i.e.
/// outside the team). @note Ensure the `isSharingChangeFolderJoinPolicyDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGSharingChangeFolderJoinPolicyDetails *sharingChangeFolderJoinPolicyDetails;

/// Changed whether team members can share links externally (i.e. outside the
/// team), and if so, whether links should be accessible only by team members or
/// anyone by default. @note Ensure the `isSharingChangeLinkPolicyDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGSharingChangeLinkPolicyDetails *sharingChangeLinkPolicyDetails;

/// Changed whether team members can share files and folders externally (i.e.
/// outside the team). @note Ensure the `isSharingChangeMemberPolicyDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGSharingChangeMemberPolicyDetails *sharingChangeMemberPolicyDetails;

/// Changed the default Smart Sync policy for team members. @note Ensure the
/// `isSmartSyncChangePolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSmartSyncChangePolicyDetails *smartSyncChangePolicyDetails;

/// Change the single sign-on policy for the team. @note Ensure the
/// `isSsoChangePolicyDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGSsoChangePolicyDetails *ssoChangePolicyDetails;

/// Change two-step verification policy for the team. @note Ensure the
/// `isTfaChangePolicyDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTfaChangePolicyDetails *tfaChangePolicyDetails;

/// Enabled or disabled the option for team members to link a personal Dropbox
/// account in addition to their work account to the same computer. @note Ensure
/// the `isTwoAccountChangePolicyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTwoAccountChangePolicyDetails *twoAccountChangePolicyDetails;

/// Changed how long team members can stay signed in to Dropbox on the web.
/// @note Ensure the `isWebSessionsChangeFixedLengthPolicyDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGWebSessionsChangeFixedLengthPolicyDetails *webSessionsChangeFixedLengthPolicyDetails;

/// Changed how long team members can be idle while signed in to Dropbox on the
/// web. @note Ensure the `isWebSessionsChangeIdleLengthPolicyDetails` method
/// returns true before accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly)
    DBTEAMLOGWebSessionsChangeIdleLengthPolicyDetails *webSessionsChangeIdleLengthPolicyDetails;

/// Added a team logo to be displayed on shared link headers. @note Ensure the
/// `isTeamProfileAddLogoDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTeamProfileAddLogoDetails *teamProfileAddLogoDetails;

/// Changed the team logo to be displayed on shared link headers. @note Ensure
/// the `isTeamProfileChangeLogoDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTeamProfileChangeLogoDetails *teamProfileChangeLogoDetails;

/// Changed the team name. @note Ensure the `isTeamProfileChangeNameDetails`
/// method returns true before accessing, otherwise a runtime exception will be
/// raised.
@property (nonatomic, readonly) DBTEAMLOGTeamProfileChangeNameDetails *teamProfileChangeNameDetails;

/// Removed the team logo to be displayed on shared link headers. @note Ensure
/// the `isTeamProfileRemoveLogoDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTeamProfileRemoveLogoDetails *teamProfileRemoveLogoDetails;

/// Added a backup phone for two-step verification. @note Ensure the
/// `isTfaAddBackupPhoneDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTfaAddBackupPhoneDetails *tfaAddBackupPhoneDetails;

/// Added a security key for two-step verification. @note Ensure the
/// `isTfaAddSecurityKeyDetails` method returns true before accessing, otherwise
/// a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTfaAddSecurityKeyDetails *tfaAddSecurityKeyDetails;

/// Changed the backup phone for two-step verification. @note Ensure the
/// `isTfaChangeBackupPhoneDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTfaChangeBackupPhoneDetails *tfaChangeBackupPhoneDetails;

/// Enabled, disabled or changed the configuration for two-step verification.
/// @note Ensure the `isTfaChangeStatusDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTfaChangeStatusDetails *tfaChangeStatusDetails;

/// Removed the backup phone for two-step verification. @note Ensure the
/// `isTfaRemoveBackupPhoneDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTfaRemoveBackupPhoneDetails *tfaRemoveBackupPhoneDetails;

/// Removed a security key for two-step verification. @note Ensure the
/// `isTfaRemoveSecurityKeyDetails` method returns true before accessing,
/// otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTfaRemoveSecurityKeyDetails *tfaRemoveSecurityKeyDetails;

/// Reset two-step verification for team member. @note Ensure the
/// `isTfaResetDetails` method returns true before accessing, otherwise a
/// runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGTfaResetDetails *tfaResetDetails;

/// Hints that this event was returned with missing details due to an internal
/// error. @note Ensure the `isMissingDetails` method returns true before
/// accessing, otherwise a runtime exception will be raised.
@property (nonatomic, readonly) DBTEAMLOGMissingDetails *missingDetails;

#pragma mark - Constructors

///
/// Initializes union class with tag state of
/// "member_change_membership_type_details".
///
/// Description of the "member_change_membership_type_details" tag state:
/// Changed the membership type (limited vs full) for team member.
///
/// @param memberChangeMembershipTypeDetails Changed the membership type
/// (limited vs full) for team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberChangeMembershipTypeDetails:
    (DBTEAMLOGMemberChangeMembershipTypeDetails *)memberChangeMembershipTypeDetails;

///
/// Initializes union class with tag state of
/// "member_permanently_delete_account_contents_details".
///
/// Description of the "member_permanently_delete_account_contents_details" tag
/// state: Permanently deleted contents of a removed team member account.
///
/// @param memberPermanentlyDeleteAccountContentsDetails Permanently deleted
/// contents of a removed team member account.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberPermanentlyDeleteAccountContentsDetails:
    (DBTEAMLOGMemberPermanentlyDeleteAccountContentsDetails *)memberPermanentlyDeleteAccountContentsDetails;

///
/// Initializes union class with tag state of
/// "member_space_limits_change_status_details".
///
/// Description of the "member_space_limits_change_status_details" tag state:
/// Changed the status with respect to whether the team member is under or over
/// storage quota specified by policy.
///
/// @param memberSpaceLimitsChangeStatusDetails Changed the status with respect
/// to whether the team member is under or over storage quota specified by
/// policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSpaceLimitsChangeStatusDetails:
    (DBTEAMLOGMemberSpaceLimitsChangeStatusDetails *)memberSpaceLimitsChangeStatusDetails;

///
/// Initializes union class with tag state of
/// "member_transfer_account_contents_details".
///
/// Description of the "member_transfer_account_contents_details" tag state:
/// Transferred contents of a removed team member account to another member.
///
/// @param memberTransferAccountContentsDetails Transferred contents of a
/// removed team member account to another member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberTransferAccountContentsDetails:
    (DBTEAMLOGMemberTransferAccountContentsDetails *)memberTransferAccountContentsDetails;

///
/// Initializes union class with tag state of
/// "paper_enabled_users_group_addition_details".
///
/// Description of the "paper_enabled_users_group_addition_details" tag state:
/// Users added to Paper enabled users list.
///
/// @param paperEnabledUsersGroupAdditionDetails Users added to Paper enabled
/// users list.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperEnabledUsersGroupAdditionDetails:
    (DBTEAMLOGPaperEnabledUsersGroupAdditionDetails *)paperEnabledUsersGroupAdditionDetails;

///
/// Initializes union class with tag state of
/// "paper_enabled_users_group_removal_details".
///
/// Description of the "paper_enabled_users_group_removal_details" tag state:
/// Users removed from Paper enabled users list.
///
/// @param paperEnabledUsersGroupRemovalDetails Users removed from Paper enabled
/// users list.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperEnabledUsersGroupRemovalDetails:
    (DBTEAMLOGPaperEnabledUsersGroupRemovalDetails *)paperEnabledUsersGroupRemovalDetails;

///
/// Initializes union class with tag state of
/// "paper_external_view_allow_details".
///
/// Description of the "paper_external_view_allow_details" tag state: Paper
/// external sharing policy changed: anyone.
///
/// @param paperExternalViewAllowDetails Paper external sharing policy changed:
/// anyone.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperExternalViewAllowDetails:
    (DBTEAMLOGPaperExternalViewAllowDetails *)paperExternalViewAllowDetails;

///
/// Initializes union class with tag state of
/// "paper_external_view_default_team_details".
///
/// Description of the "paper_external_view_default_team_details" tag state:
/// Paper external sharing policy changed: default team.
///
/// @param paperExternalViewDefaultTeamDetails Paper external sharing policy
/// changed: default team.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperExternalViewDefaultTeamDetails:
    (DBTEAMLOGPaperExternalViewDefaultTeamDetails *)paperExternalViewDefaultTeamDetails;

///
/// Initializes union class with tag state of
/// "paper_external_view_forbid_details".
///
/// Description of the "paper_external_view_forbid_details" tag state: Paper
/// external sharing policy changed: team-only.
///
/// @param paperExternalViewForbidDetails Paper external sharing policy changed:
/// team-only.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperExternalViewForbidDetails:
    (DBTEAMLOGPaperExternalViewForbidDetails *)paperExternalViewForbidDetails;

///
/// Initializes union class with tag state of "sf_external_invite_warn_details".
///
/// Description of the "sf_external_invite_warn_details" tag state: Admin
/// settings: team members see a warning before sharing folders outside the team
/// (DEPRECATED FEATURE).
///
/// @param sfExternalInviteWarnDetails Admin settings: team members see a
/// warning before sharing folders outside the team (DEPRECATED FEATURE).
///
/// @return An initialized instance.
///
- (instancetype)initWithSfExternalInviteWarnDetails:(DBTEAMLOGSfExternalInviteWarnDetails *)sfExternalInviteWarnDetails;

///
/// Initializes union class with tag state of "team_merge_details".
///
/// Description of the "team_merge_details" tag state: Merged the team into
/// another team.
///
/// @param teamMergeDetails Merged the team into another team.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamMergeDetails:(DBTEAMLOGTeamMergeDetails *)teamMergeDetails;

///
/// Initializes union class with tag state of "app_link_team_details".
///
/// Description of the "app_link_team_details" tag state: Linked an app for
/// team.
///
/// @param appLinkTeamDetails Linked an app for team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAppLinkTeamDetails:(DBTEAMLOGAppLinkTeamDetails *)appLinkTeamDetails;

///
/// Initializes union class with tag state of "app_link_user_details".
///
/// Description of the "app_link_user_details" tag state: Linked an app for team
/// member.
///
/// @param appLinkUserDetails Linked an app for team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithAppLinkUserDetails:(DBTEAMLOGAppLinkUserDetails *)appLinkUserDetails;

///
/// Initializes union class with tag state of "app_unlink_team_details".
///
/// Description of the "app_unlink_team_details" tag state: Unlinked an app for
/// team.
///
/// @param appUnlinkTeamDetails Unlinked an app for team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAppUnlinkTeamDetails:(DBTEAMLOGAppUnlinkTeamDetails *)appUnlinkTeamDetails;

///
/// Initializes union class with tag state of "app_unlink_user_details".
///
/// Description of the "app_unlink_user_details" tag state: Unlinked an app for
/// team member.
///
/// @param appUnlinkUserDetails Unlinked an app for team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithAppUnlinkUserDetails:(DBTEAMLOGAppUnlinkUserDetails *)appUnlinkUserDetails;

///
/// Initializes union class with tag state of
/// "device_change_ip_desktop_details".
///
/// Description of the "device_change_ip_desktop_details" tag state: IP address
/// associated with active desktop session changed.
///
/// @param deviceChangeIpDesktopDetails IP address associated with active
/// desktop session changed.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceChangeIpDesktopDetails:
    (DBTEAMLOGDeviceChangeIpDesktopDetails *)deviceChangeIpDesktopDetails;

///
/// Initializes union class with tag state of "device_change_ip_mobile_details".
///
/// Description of the "device_change_ip_mobile_details" tag state: IP address
/// associated with active mobile session changed.
///
/// @param deviceChangeIpMobileDetails IP address associated with active mobile
/// session changed.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceChangeIpMobileDetails:(DBTEAMLOGDeviceChangeIpMobileDetails *)deviceChangeIpMobileDetails;

///
/// Initializes union class with tag state of "device_change_ip_web_details".
///
/// Description of the "device_change_ip_web_details" tag state: IP address
/// associated with active Web session changed.
///
/// @param deviceChangeIpWebDetails IP address associated with active Web
/// session changed.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceChangeIpWebDetails:(DBTEAMLOGDeviceChangeIpWebDetails *)deviceChangeIpWebDetails;

///
/// Initializes union class with tag state of
/// "device_delete_on_unlink_fail_details".
///
/// Description of the "device_delete_on_unlink_fail_details" tag state: Failed
/// to delete all files from an unlinked device.
///
/// @param deviceDeleteOnUnlinkFailDetails Failed to delete all files from an
/// unlinked device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceDeleteOnUnlinkFailDetails:
    (DBTEAMLOGDeviceDeleteOnUnlinkFailDetails *)deviceDeleteOnUnlinkFailDetails;

///
/// Initializes union class with tag state of
/// "device_delete_on_unlink_success_details".
///
/// Description of the "device_delete_on_unlink_success_details" tag state:
/// Deleted all files from an unlinked device.
///
/// @param deviceDeleteOnUnlinkSuccessDetails Deleted all files from an unlinked
/// device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceDeleteOnUnlinkSuccessDetails:
    (DBTEAMLOGDeviceDeleteOnUnlinkSuccessDetails *)deviceDeleteOnUnlinkSuccessDetails;

///
/// Initializes union class with tag state of "device_link_fail_details".
///
/// Description of the "device_link_fail_details" tag state: Failed to link a
/// device.
///
/// @param deviceLinkFailDetails Failed to link a device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceLinkFailDetails:(DBTEAMLOGDeviceLinkFailDetails *)deviceLinkFailDetails;

///
/// Initializes union class with tag state of "device_link_success_details".
///
/// Description of the "device_link_success_details" tag state: Linked a device.
///
/// @param deviceLinkSuccessDetails Linked a device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceLinkSuccessDetails:(DBTEAMLOGDeviceLinkSuccessDetails *)deviceLinkSuccessDetails;

///
/// Initializes union class with tag state of
/// "device_management_disabled_details".
///
/// Description of the "device_management_disabled_details" tag state: Disable
/// Device Management.
///
/// @param deviceManagementDisabledDetails Disable Device Management.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceManagementDisabledDetails:
    (DBTEAMLOGDeviceManagementDisabledDetails *)deviceManagementDisabledDetails;

///
/// Initializes union class with tag state of
/// "device_management_enabled_details".
///
/// Description of the "device_management_enabled_details" tag state: Enable
/// Device Management.
///
/// @param deviceManagementEnabledDetails Enable Device Management.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceManagementEnabledDetails:
    (DBTEAMLOGDeviceManagementEnabledDetails *)deviceManagementEnabledDetails;

///
/// Initializes union class with tag state of "device_unlink_details".
///
/// Description of the "device_unlink_details" tag state: Disconnected a device.
///
/// @param deviceUnlinkDetails Disconnected a device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceUnlinkDetails:(DBTEAMLOGDeviceUnlinkDetails *)deviceUnlinkDetails;

///
/// Initializes union class with tag state of "emm_refresh_auth_token_details".
///
/// Description of the "emm_refresh_auth_token_details" tag state: Refreshed the
/// auth token used for setting up enterprise mobility management.
///
/// @param emmRefreshAuthTokenDetails Refreshed the auth token used for setting
/// up enterprise mobility management.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmRefreshAuthTokenDetails:(DBTEAMLOGEmmRefreshAuthTokenDetails *)emmRefreshAuthTokenDetails;

///
/// Initializes union class with tag state of
/// "account_capture_change_availability_details".
///
/// Description of the "account_capture_change_availability_details" tag state:
/// Granted or revoked the option to enable account capture on domains belonging
/// to the team.
///
/// @param accountCaptureChangeAvailabilityDetails Granted or revoked the option
/// to enable account capture on domains belonging to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAccountCaptureChangeAvailabilityDetails:
    (DBTEAMLOGAccountCaptureChangeAvailabilityDetails *)accountCaptureChangeAvailabilityDetails;

///
/// Initializes union class with tag state of
/// "account_capture_migrate_account_details".
///
/// Description of the "account_capture_migrate_account_details" tag state:
/// Account captured user migrated their account to the team.
///
/// @param accountCaptureMigrateAccountDetails Account captured user migrated
/// their account to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAccountCaptureMigrateAccountDetails:
    (DBTEAMLOGAccountCaptureMigrateAccountDetails *)accountCaptureMigrateAccountDetails;

///
/// Initializes union class with tag state of
/// "account_capture_relinquish_account_details".
///
/// Description of the "account_capture_relinquish_account_details" tag state:
/// Account captured user relinquished their account by changing the email
/// address associated with it.
///
/// @param accountCaptureRelinquishAccountDetails Account captured user
/// relinquished their account by changing the email address associated with it.
///
/// @return An initialized instance.
///
- (instancetype)initWithAccountCaptureRelinquishAccountDetails:
    (DBTEAMLOGAccountCaptureRelinquishAccountDetails *)accountCaptureRelinquishAccountDetails;

///
/// Initializes union class with tag state of "disabled_domain_invites_details".
///
/// Description of the "disabled_domain_invites_details" tag state: Disabled
/// domain invites.
///
/// @param disabledDomainInvitesDetails Disabled domain invites.
///
/// @return An initialized instance.
///
- (instancetype)initWithDisabledDomainInvitesDetails:
    (DBTEAMLOGDisabledDomainInvitesDetails *)disabledDomainInvitesDetails;

///
/// Initializes union class with tag state of
/// "domain_invites_approve_request_to_join_team_details".
///
/// Description of the "domain_invites_approve_request_to_join_team_details" tag
/// state: Approved a member's request to join the team.
///
/// @param domainInvitesApproveRequestToJoinTeamDetails Approved a member's
/// request to join the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesApproveRequestToJoinTeamDetails:
    (DBTEAMLOGDomainInvitesApproveRequestToJoinTeamDetails *)domainInvitesApproveRequestToJoinTeamDetails;

///
/// Initializes union class with tag state of
/// "domain_invites_decline_request_to_join_team_details".
///
/// Description of the "domain_invites_decline_request_to_join_team_details" tag
/// state: Declined a user's request to join the team.
///
/// @param domainInvitesDeclineRequestToJoinTeamDetails Declined a user's
/// request to join the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesDeclineRequestToJoinTeamDetails:
    (DBTEAMLOGDomainInvitesDeclineRequestToJoinTeamDetails *)domainInvitesDeclineRequestToJoinTeamDetails;

///
/// Initializes union class with tag state of
/// "domain_invites_email_existing_users_details".
///
/// Description of the "domain_invites_email_existing_users_details" tag state:
/// Sent domain invites to existing domain accounts.
///
/// @param domainInvitesEmailExistingUsersDetails Sent domain invites to
/// existing domain accounts.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesEmailExistingUsersDetails:
    (DBTEAMLOGDomainInvitesEmailExistingUsersDetails *)domainInvitesEmailExistingUsersDetails;

///
/// Initializes union class with tag state of
/// "domain_invites_request_to_join_team_details".
///
/// Description of the "domain_invites_request_to_join_team_details" tag state:
/// Asked to join the team.
///
/// @param domainInvitesRequestToJoinTeamDetails Asked to join the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesRequestToJoinTeamDetails:
    (DBTEAMLOGDomainInvitesRequestToJoinTeamDetails *)domainInvitesRequestToJoinTeamDetails;

///
/// Initializes union class with tag state of
/// "domain_invites_set_invite_new_user_pref_to_no_details".
///
/// Description of the "domain_invites_set_invite_new_user_pref_to_no_details"
/// tag state: Turned off u201cAutomatically invite new usersu201d.
///
/// @param domainInvitesSetInviteNewUserPrefToNoDetails Turned off
/// u201cAutomatically invite new usersu201d.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesSetInviteNewUserPrefToNoDetails:
    (DBTEAMLOGDomainInvitesSetInviteNewUserPrefToNoDetails *)domainInvitesSetInviteNewUserPrefToNoDetails;

///
/// Initializes union class with tag state of
/// "domain_invites_set_invite_new_user_pref_to_yes_details".
///
/// Description of the "domain_invites_set_invite_new_user_pref_to_yes_details"
/// tag state: Turned on u201cAutomatically invite new usersu201d.
///
/// @param domainInvitesSetInviteNewUserPrefToYesDetails Turned on
/// u201cAutomatically invite new usersu201d.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesSetInviteNewUserPrefToYesDetails:
    (DBTEAMLOGDomainInvitesSetInviteNewUserPrefToYesDetails *)domainInvitesSetInviteNewUserPrefToYesDetails;

///
/// Initializes union class with tag state of
/// "domain_verification_add_domain_fail_details".
///
/// Description of the "domain_verification_add_domain_fail_details" tag state:
/// Failed to verify a domain belonging to the team.
///
/// @param domainVerificationAddDomainFailDetails Failed to verify a domain
/// belonging to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainVerificationAddDomainFailDetails:
    (DBTEAMLOGDomainVerificationAddDomainFailDetails *)domainVerificationAddDomainFailDetails;

///
/// Initializes union class with tag state of
/// "domain_verification_add_domain_success_details".
///
/// Description of the "domain_verification_add_domain_success_details" tag
/// state: Verified a domain belonging to the team.
///
/// @param domainVerificationAddDomainSuccessDetails Verified a domain belonging
/// to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainVerificationAddDomainSuccessDetails:
    (DBTEAMLOGDomainVerificationAddDomainSuccessDetails *)domainVerificationAddDomainSuccessDetails;

///
/// Initializes union class with tag state of
/// "domain_verification_remove_domain_details".
///
/// Description of the "domain_verification_remove_domain_details" tag state:
/// Removed a domain from the list of verified domains belonging to the team.
///
/// @param domainVerificationRemoveDomainDetails Removed a domain from the list
/// of verified domains belonging to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainVerificationRemoveDomainDetails:
    (DBTEAMLOGDomainVerificationRemoveDomainDetails *)domainVerificationRemoveDomainDetails;

///
/// Initializes union class with tag state of "enabled_domain_invites_details".
///
/// Description of the "enabled_domain_invites_details" tag state: Enabled
/// domain invites.
///
/// @param enabledDomainInvitesDetails Enabled domain invites.
///
/// @return An initialized instance.
///
- (instancetype)initWithEnabledDomainInvitesDetails:(DBTEAMLOGEnabledDomainInvitesDetails *)enabledDomainInvitesDetails;

///
/// Initializes union class with tag state of "create_folder_details".
///
/// Description of the "create_folder_details" tag state: Created folders.
///
/// @param createFolderDetails Created folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithCreateFolderDetails:(DBTEAMLOGCreateFolderDetails *)createFolderDetails;

///
/// Initializes union class with tag state of "file_add_details".
///
/// Description of the "file_add_details" tag state: Added files and/or folders.
///
/// @param fileAddDetails Added files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileAddDetails:(DBTEAMLOGFileAddDetails *)fileAddDetails;

///
/// Initializes union class with tag state of "file_copy_details".
///
/// Description of the "file_copy_details" tag state: Copied files and/or
/// folders.
///
/// @param fileCopyDetails Copied files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileCopyDetails:(DBTEAMLOGFileCopyDetails *)fileCopyDetails;

///
/// Initializes union class with tag state of "file_delete_details".
///
/// Description of the "file_delete_details" tag state: Deleted files and/or
/// folders.
///
/// @param fileDeleteDetails Deleted files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileDeleteDetails:(DBTEAMLOGFileDeleteDetails *)fileDeleteDetails;

///
/// Initializes union class with tag state of "file_download_details".
///
/// Description of the "file_download_details" tag state: Downloaded files
/// and/or folders.
///
/// @param fileDownloadDetails Downloaded files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileDownloadDetails:(DBTEAMLOGFileDownloadDetails *)fileDownloadDetails;

///
/// Initializes union class with tag state of "file_edit_details".
///
/// Description of the "file_edit_details" tag state: Edited files.
///
/// @param fileEditDetails Edited files.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileEditDetails:(DBTEAMLOGFileEditDetails *)fileEditDetails;

///
/// Initializes union class with tag state of "file_get_copy_reference_details".
///
/// Description of the "file_get_copy_reference_details" tag state: Create a
/// copy reference to a file or folder.
///
/// @param fileGetCopyReferenceDetails Create a copy reference to a file or
/// folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileGetCopyReferenceDetails:(DBTEAMLOGFileGetCopyReferenceDetails *)fileGetCopyReferenceDetails;

///
/// Initializes union class with tag state of "file_move_details".
///
/// Description of the "file_move_details" tag state: Moved files and/or
/// folders.
///
/// @param fileMoveDetails Moved files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileMoveDetails:(DBTEAMLOGFileMoveDetails *)fileMoveDetails;

///
/// Initializes union class with tag state of "file_permanently_delete_details".
///
/// Description of the "file_permanently_delete_details" tag state: Permanently
/// deleted files and/or folders.
///
/// @param filePermanentlyDeleteDetails Permanently deleted files and/or
/// folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFilePermanentlyDeleteDetails:
    (DBTEAMLOGFilePermanentlyDeleteDetails *)filePermanentlyDeleteDetails;

///
/// Initializes union class with tag state of "file_preview_details".
///
/// Description of the "file_preview_details" tag state: Previewed files and/or
/// folders.
///
/// @param filePreviewDetails Previewed files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFilePreviewDetails:(DBTEAMLOGFilePreviewDetails *)filePreviewDetails;

///
/// Initializes union class with tag state of "file_rename_details".
///
/// Description of the "file_rename_details" tag state: Renamed files and/or
/// folders.
///
/// @param fileRenameDetails Renamed files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRenameDetails:(DBTEAMLOGFileRenameDetails *)fileRenameDetails;

///
/// Initializes union class with tag state of "file_restore_details".
///
/// Description of the "file_restore_details" tag state: Restored deleted files
/// and/or folders.
///
/// @param fileRestoreDetails Restored deleted files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRestoreDetails:(DBTEAMLOGFileRestoreDetails *)fileRestoreDetails;

///
/// Initializes union class with tag state of "file_revert_details".
///
/// Description of the "file_revert_details" tag state: Reverted files to a
/// previous version.
///
/// @param fileRevertDetails Reverted files to a previous version.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRevertDetails:(DBTEAMLOGFileRevertDetails *)fileRevertDetails;

///
/// Initializes union class with tag state of "file_rollback_changes_details".
///
/// Description of the "file_rollback_changes_details" tag state: Rolled back
/// file change location changes.
///
/// @param fileRollbackChangesDetails Rolled back file change location changes.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRollbackChangesDetails:(DBTEAMLOGFileRollbackChangesDetails *)fileRollbackChangesDetails;

///
/// Initializes union class with tag state of
/// "file_save_copy_reference_details".
///
/// Description of the "file_save_copy_reference_details" tag state: Save a file
/// or folder using a copy reference.
///
/// @param fileSaveCopyReferenceDetails Save a file or folder using a copy
/// reference.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileSaveCopyReferenceDetails:
    (DBTEAMLOGFileSaveCopyReferenceDetails *)fileSaveCopyReferenceDetails;

///
/// Initializes union class with tag state of
/// "file_request_add_deadline_details".
///
/// Description of the "file_request_add_deadline_details" tag state: Added a
/// deadline to a file request.
///
/// @param fileRequestAddDeadlineDetails Added a deadline to a file request.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestAddDeadlineDetails:
    (DBTEAMLOGFileRequestAddDeadlineDetails *)fileRequestAddDeadlineDetails;

///
/// Initializes union class with tag state of
/// "file_request_change_folder_details".
///
/// Description of the "file_request_change_folder_details" tag state: Changed
/// the file request folder.
///
/// @param fileRequestChangeFolderDetails Changed the file request folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestChangeFolderDetails:
    (DBTEAMLOGFileRequestChangeFolderDetails *)fileRequestChangeFolderDetails;

///
/// Initializes union class with tag state of
/// "file_request_change_title_details".
///
/// Description of the "file_request_change_title_details" tag state: Change the
/// file request title.
///
/// @param fileRequestChangeTitleDetails Change the file request title.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestChangeTitleDetails:
    (DBTEAMLOGFileRequestChangeTitleDetails *)fileRequestChangeTitleDetails;

///
/// Initializes union class with tag state of "file_request_close_details".
///
/// Description of the "file_request_close_details" tag state: Closed a file
/// request.
///
/// @param fileRequestCloseDetails Closed a file request.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestCloseDetails:(DBTEAMLOGFileRequestCloseDetails *)fileRequestCloseDetails;

///
/// Initializes union class with tag state of "file_request_create_details".
///
/// Description of the "file_request_create_details" tag state: Created a file
/// request.
///
/// @param fileRequestCreateDetails Created a file request.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestCreateDetails:(DBTEAMLOGFileRequestCreateDetails *)fileRequestCreateDetails;

///
/// Initializes union class with tag state of
/// "file_request_receive_file_details".
///
/// Description of the "file_request_receive_file_details" tag state: Received
/// files for a file request.
///
/// @param fileRequestReceiveFileDetails Received files for a file request.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestReceiveFileDetails:
    (DBTEAMLOGFileRequestReceiveFileDetails *)fileRequestReceiveFileDetails;

///
/// Initializes union class with tag state of
/// "file_request_remove_deadline_details".
///
/// Description of the "file_request_remove_deadline_details" tag state: Removed
/// the file request deadline.
///
/// @param fileRequestRemoveDeadlineDetails Removed the file request deadline.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestRemoveDeadlineDetails:
    (DBTEAMLOGFileRequestRemoveDeadlineDetails *)fileRequestRemoveDeadlineDetails;

///
/// Initializes union class with tag state of "file_request_send_details".
///
/// Description of the "file_request_send_details" tag state: Sent file request
/// to users via email.
///
/// @param fileRequestSendDetails Sent file request to users via email.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestSendDetails:(DBTEAMLOGFileRequestSendDetails *)fileRequestSendDetails;

///
/// Initializes union class with tag state of "group_add_external_id_details".
///
/// Description of the "group_add_external_id_details" tag state: Added an
/// external ID for group.
///
/// @param groupAddExternalIdDetails Added an external ID for group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupAddExternalIdDetails:(DBTEAMLOGGroupAddExternalIdDetails *)groupAddExternalIdDetails;

///
/// Initializes union class with tag state of "group_add_member_details".
///
/// Description of the "group_add_member_details" tag state: Added team members
/// to a group.
///
/// @param groupAddMemberDetails Added team members to a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupAddMemberDetails:(DBTEAMLOGGroupAddMemberDetails *)groupAddMemberDetails;

///
/// Initializes union class with tag state of
/// "group_change_external_id_details".
///
/// Description of the "group_change_external_id_details" tag state: Changed the
/// external ID for group.
///
/// @param groupChangeExternalIdDetails Changed the external ID for group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupChangeExternalIdDetails:
    (DBTEAMLOGGroupChangeExternalIdDetails *)groupChangeExternalIdDetails;

///
/// Initializes union class with tag state of
/// "group_change_management_type_details".
///
/// Description of the "group_change_management_type_details" tag state: Changed
/// group management type.
///
/// @param groupChangeManagementTypeDetails Changed group management type.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupChangeManagementTypeDetails:
    (DBTEAMLOGGroupChangeManagementTypeDetails *)groupChangeManagementTypeDetails;

///
/// Initializes union class with tag state of
/// "group_change_member_role_details".
///
/// Description of the "group_change_member_role_details" tag state: Changed the
/// manager permissions belonging to a group member.
///
/// @param groupChangeMemberRoleDetails Changed the manager permissions
/// belonging to a group member.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupChangeMemberRoleDetails:
    (DBTEAMLOGGroupChangeMemberRoleDetails *)groupChangeMemberRoleDetails;

///
/// Initializes union class with tag state of "group_create_details".
///
/// Description of the "group_create_details" tag state: Created a group.
///
/// @param groupCreateDetails Created a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupCreateDetails:(DBTEAMLOGGroupCreateDetails *)groupCreateDetails;

///
/// Initializes union class with tag state of "group_delete_details".
///
/// Description of the "group_delete_details" tag state: Deleted a group.
///
/// @param groupDeleteDetails Deleted a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupDeleteDetails:(DBTEAMLOGGroupDeleteDetails *)groupDeleteDetails;

///
/// Initializes union class with tag state of
/// "group_description_updated_details".
///
/// Description of the "group_description_updated_details" tag state: Updated a
/// group.
///
/// @param groupDescriptionUpdatedDetails Updated a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupDescriptionUpdatedDetails:
    (DBTEAMLOGGroupDescriptionUpdatedDetails *)groupDescriptionUpdatedDetails;

///
/// Initializes union class with tag state of
/// "group_join_policy_updated_details".
///
/// Description of the "group_join_policy_updated_details" tag state: Updated a
/// group join policy.
///
/// @param groupJoinPolicyUpdatedDetails Updated a group join policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupJoinPolicyUpdatedDetails:
    (DBTEAMLOGGroupJoinPolicyUpdatedDetails *)groupJoinPolicyUpdatedDetails;

///
/// Initializes union class with tag state of "group_moved_details".
///
/// Description of the "group_moved_details" tag state: Moved a group.
///
/// @param groupMovedDetails Moved a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupMovedDetails:(DBTEAMLOGGroupMovedDetails *)groupMovedDetails;

///
/// Initializes union class with tag state of
/// "group_remove_external_id_details".
///
/// Description of the "group_remove_external_id_details" tag state: Removed the
/// external ID for group.
///
/// @param groupRemoveExternalIdDetails Removed the external ID for group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupRemoveExternalIdDetails:
    (DBTEAMLOGGroupRemoveExternalIdDetails *)groupRemoveExternalIdDetails;

///
/// Initializes union class with tag state of "group_remove_member_details".
///
/// Description of the "group_remove_member_details" tag state: Removed team
/// members from a group.
///
/// @param groupRemoveMemberDetails Removed team members from a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupRemoveMemberDetails:(DBTEAMLOGGroupRemoveMemberDetails *)groupRemoveMemberDetails;

///
/// Initializes union class with tag state of "group_rename_details".
///
/// Description of the "group_rename_details" tag state: Renamed a group.
///
/// @param groupRenameDetails Renamed a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupRenameDetails:(DBTEAMLOGGroupRenameDetails *)groupRenameDetails;

///
/// Initializes union class with tag state of "emm_login_success_details".
///
/// Description of the "emm_login_success_details" tag state: Signed in using
/// the Dropbox EMM app.
///
/// @param emmLoginSuccessDetails Signed in using the Dropbox EMM app.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmLoginSuccessDetails:(DBTEAMLOGEmmLoginSuccessDetails *)emmLoginSuccessDetails;

///
/// Initializes union class with tag state of "logout_details".
///
/// Description of the "logout_details" tag state: Signed out.
///
/// @param logoutDetails Signed out.
///
/// @return An initialized instance.
///
- (instancetype)initWithLogoutDetails:(DBTEAMLOGLogoutDetails *)logoutDetails;

///
/// Initializes union class with tag state of "password_login_fail_details".
///
/// Description of the "password_login_fail_details" tag state: Failed to sign
/// in using a password.
///
/// @param passwordLoginFailDetails Failed to sign in using a password.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordLoginFailDetails:(DBTEAMLOGPasswordLoginFailDetails *)passwordLoginFailDetails;

///
/// Initializes union class with tag state of "password_login_success_details".
///
/// Description of the "password_login_success_details" tag state: Signed in
/// using a password.
///
/// @param passwordLoginSuccessDetails Signed in using a password.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordLoginSuccessDetails:(DBTEAMLOGPasswordLoginSuccessDetails *)passwordLoginSuccessDetails;

///
/// Initializes union class with tag state of
/// "reseller_support_session_end_details".
///
/// Description of the "reseller_support_session_end_details" tag state: Ended
/// reseller support session.
///
/// @param resellerSupportSessionEndDetails Ended reseller support session.
///
/// @return An initialized instance.
///
- (instancetype)initWithResellerSupportSessionEndDetails:
    (DBTEAMLOGResellerSupportSessionEndDetails *)resellerSupportSessionEndDetails;

///
/// Initializes union class with tag state of
/// "reseller_support_session_start_details".
///
/// Description of the "reseller_support_session_start_details" tag state:
/// Started reseller support session.
///
/// @param resellerSupportSessionStartDetails Started reseller support session.
///
/// @return An initialized instance.
///
- (instancetype)initWithResellerSupportSessionStartDetails:
    (DBTEAMLOGResellerSupportSessionStartDetails *)resellerSupportSessionStartDetails;

///
/// Initializes union class with tag state of "sign_in_as_session_end_details".
///
/// Description of the "sign_in_as_session_end_details" tag state: Ended admin
/// sign-in-as session.
///
/// @param signInAsSessionEndDetails Ended admin sign-in-as session.
///
/// @return An initialized instance.
///
- (instancetype)initWithSignInAsSessionEndDetails:(DBTEAMLOGSignInAsSessionEndDetails *)signInAsSessionEndDetails;

///
/// Initializes union class with tag state of
/// "sign_in_as_session_start_details".
///
/// Description of the "sign_in_as_session_start_details" tag state: Started
/// admin sign-in-as session.
///
/// @param signInAsSessionStartDetails Started admin sign-in-as session.
///
/// @return An initialized instance.
///
- (instancetype)initWithSignInAsSessionStartDetails:(DBTEAMLOGSignInAsSessionStartDetails *)signInAsSessionStartDetails;

///
/// Initializes union class with tag state of "sso_login_fail_details".
///
/// Description of the "sso_login_fail_details" tag state: Failed to sign in
/// using SSO.
///
/// @param ssoLoginFailDetails Failed to sign in using SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoLoginFailDetails:(DBTEAMLOGSsoLoginFailDetails *)ssoLoginFailDetails;

///
/// Initializes union class with tag state of "member_add_name_details".
///
/// Description of the "member_add_name_details" tag state: Set team member name
/// when joining team.
///
/// @param memberAddNameDetails Set team member name when joining team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberAddNameDetails:(DBTEAMLOGMemberAddNameDetails *)memberAddNameDetails;

///
/// Initializes union class with tag state of "member_change_email_details".
///
/// Description of the "member_change_email_details" tag state: Changed team
/// member email address.
///
/// @param memberChangeEmailDetails Changed team member email address.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberChangeEmailDetails:(DBTEAMLOGMemberChangeEmailDetails *)memberChangeEmailDetails;

///
/// Initializes union class with tag state of "member_change_name_details".
///
/// Description of the "member_change_name_details" tag state: Changed team
/// member name.
///
/// @param memberChangeNameDetails Changed team member name.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberChangeNameDetails:(DBTEAMLOGMemberChangeNameDetails *)memberChangeNameDetails;

///
/// Initializes union class with tag state of "member_change_role_details".
///
/// Description of the "member_change_role_details" tag state: Change the admin
/// permissions belonging to team member.
///
/// @param memberChangeRoleDetails Change the admin permissions belonging to
/// team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberChangeRoleDetails:(DBTEAMLOGMemberChangeRoleDetails *)memberChangeRoleDetails;

///
/// Initializes union class with tag state of "member_invite_details".
///
/// Description of the "member_invite_details" tag state: Invited a user to join
/// the team.
///
/// @param memberInviteDetails Invited a user to join the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberInviteDetails:(DBTEAMLOGMemberInviteDetails *)memberInviteDetails;

///
/// Initializes union class with tag state of "member_join_details".
///
/// Description of the "member_join_details" tag state: Joined the team.
///
/// @param memberJoinDetails Joined the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberJoinDetails:(DBTEAMLOGMemberJoinDetails *)memberJoinDetails;

///
/// Initializes union class with tag state of "member_leave_details".
///
/// Description of the "member_leave_details" tag state: Removed a team member.
///
/// @param memberLeaveDetails Removed a team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberLeaveDetails:(DBTEAMLOGMemberLeaveDetails *)memberLeaveDetails;

///
/// Initializes union class with tag state of "member_recover_details".
///
/// Description of the "member_recover_details" tag state: Recovered a removed
/// member.
///
/// @param memberRecoverDetails Recovered a removed member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberRecoverDetails:(DBTEAMLOGMemberRecoverDetails *)memberRecoverDetails;

///
/// Initializes union class with tag state of "member_suggest_details".
///
/// Description of the "member_suggest_details" tag state: Suggested a new team
/// member to be added to the team.
///
/// @param memberSuggestDetails Suggested a new team member to be added to the
/// team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSuggestDetails:(DBTEAMLOGMemberSuggestDetails *)memberSuggestDetails;

///
/// Initializes union class with tag state of "member_suspend_details".
///
/// Description of the "member_suspend_details" tag state: Suspended a team
/// member.
///
/// @param memberSuspendDetails Suspended a team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSuspendDetails:(DBTEAMLOGMemberSuspendDetails *)memberSuspendDetails;

///
/// Initializes union class with tag state of "member_unsuspend_details".
///
/// Description of the "member_unsuspend_details" tag state: Unsuspended a team
/// member.
///
/// @param memberUnsuspendDetails Unsuspended a team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberUnsuspendDetails:(DBTEAMLOGMemberUnsuspendDetails *)memberUnsuspendDetails;

///
/// Initializes union class with tag state of
/// "paper_content_add_member_details".
///
/// Description of the "paper_content_add_member_details" tag state: Added users
/// to the membership of a Paper doc or folder.
///
/// @param paperContentAddMemberDetails Added users to the membership of a Paper
/// doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentAddMemberDetails:
    (DBTEAMLOGPaperContentAddMemberDetails *)paperContentAddMemberDetails;

///
/// Initializes union class with tag state of
/// "paper_content_add_to_folder_details".
///
/// Description of the "paper_content_add_to_folder_details" tag state: Added
/// Paper doc or folder to a folder.
///
/// @param paperContentAddToFolderDetails Added Paper doc or folder to a folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentAddToFolderDetails:
    (DBTEAMLOGPaperContentAddToFolderDetails *)paperContentAddToFolderDetails;

///
/// Initializes union class with tag state of "paper_content_archive_details".
///
/// Description of the "paper_content_archive_details" tag state: Archived Paper
/// doc or folder.
///
/// @param paperContentArchiveDetails Archived Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentArchiveDetails:(DBTEAMLOGPaperContentArchiveDetails *)paperContentArchiveDetails;

///
/// Initializes union class with tag state of
/// "paper_content_change_subscription_details".
///
/// Description of the "paper_content_change_subscription_details" tag state:
/// Followed or unfollowed a Paper doc or folder.
///
/// @param paperContentChangeSubscriptionDetails Followed or unfollowed a Paper
/// doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentChangeSubscriptionDetails:
    (DBTEAMLOGPaperContentChangeSubscriptionDetails *)paperContentChangeSubscriptionDetails;

///
/// Initializes union class with tag state of "paper_content_create_details".
///
/// Description of the "paper_content_create_details" tag state: Created a Paper
/// doc or folder.
///
/// @param paperContentCreateDetails Created a Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentCreateDetails:(DBTEAMLOGPaperContentCreateDetails *)paperContentCreateDetails;

///
/// Initializes union class with tag state of
/// "paper_content_permanently_delete_details".
///
/// Description of the "paper_content_permanently_delete_details" tag state:
/// Permanently deleted a Paper doc or folder.
///
/// @param paperContentPermanentlyDeleteDetails Permanently deleted a Paper doc
/// or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentPermanentlyDeleteDetails:
    (DBTEAMLOGPaperContentPermanentlyDeleteDetails *)paperContentPermanentlyDeleteDetails;

///
/// Initializes union class with tag state of
/// "paper_content_remove_from_folder_details".
///
/// Description of the "paper_content_remove_from_folder_details" tag state:
/// Removed Paper doc or folder from a folder.
///
/// @param paperContentRemoveFromFolderDetails Removed Paper doc or folder from
/// a folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentRemoveFromFolderDetails:
    (DBTEAMLOGPaperContentRemoveFromFolderDetails *)paperContentRemoveFromFolderDetails;

///
/// Initializes union class with tag state of
/// "paper_content_remove_member_details".
///
/// Description of the "paper_content_remove_member_details" tag state: Removed
/// a user from the membership of a Paper doc or folder.
///
/// @param paperContentRemoveMemberDetails Removed a user from the membership of
/// a Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentRemoveMemberDetails:
    (DBTEAMLOGPaperContentRemoveMemberDetails *)paperContentRemoveMemberDetails;

///
/// Initializes union class with tag state of "paper_content_rename_details".
///
/// Description of the "paper_content_rename_details" tag state: Renamed Paper
/// doc or folder.
///
/// @param paperContentRenameDetails Renamed Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentRenameDetails:(DBTEAMLOGPaperContentRenameDetails *)paperContentRenameDetails;

///
/// Initializes union class with tag state of "paper_content_restore_details".
///
/// Description of the "paper_content_restore_details" tag state: Restored an
/// archived Paper doc or folder.
///
/// @param paperContentRestoreDetails Restored an archived Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentRestoreDetails:(DBTEAMLOGPaperContentRestoreDetails *)paperContentRestoreDetails;

///
/// Initializes union class with tag state of "paper_doc_add_comment_details".
///
/// Description of the "paper_doc_add_comment_details" tag state: Added a Paper
/// doc comment.
///
/// @param paperDocAddCommentDetails Added a Paper doc comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocAddCommentDetails:(DBTEAMLOGPaperDocAddCommentDetails *)paperDocAddCommentDetails;

///
/// Initializes union class with tag state of
/// "paper_doc_change_member_role_details".
///
/// Description of the "paper_doc_change_member_role_details" tag state: Changed
/// the access type of a Paper doc member.
///
/// @param paperDocChangeMemberRoleDetails Changed the access type of a Paper
/// doc member.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocChangeMemberRoleDetails:
    (DBTEAMLOGPaperDocChangeMemberRoleDetails *)paperDocChangeMemberRoleDetails;

///
/// Initializes union class with tag state of
/// "paper_doc_change_sharing_policy_details".
///
/// Description of the "paper_doc_change_sharing_policy_details" tag state:
/// Changed the sharing policy for Paper doc.
///
/// @param paperDocChangeSharingPolicyDetails Changed the sharing policy for
/// Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocChangeSharingPolicyDetails:
    (DBTEAMLOGPaperDocChangeSharingPolicyDetails *)paperDocChangeSharingPolicyDetails;

///
/// Initializes union class with tag state of "paper_doc_deleted_details".
///
/// Description of the "paper_doc_deleted_details" tag state: Paper doc
/// archived.
///
/// @param paperDocDeletedDetails Paper doc archived.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocDeletedDetails:(DBTEAMLOGPaperDocDeletedDetails *)paperDocDeletedDetails;

///
/// Initializes union class with tag state of
/// "paper_doc_delete_comment_details".
///
/// Description of the "paper_doc_delete_comment_details" tag state: Deleted a
/// Paper doc comment.
///
/// @param paperDocDeleteCommentDetails Deleted a Paper doc comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocDeleteCommentDetails:
    (DBTEAMLOGPaperDocDeleteCommentDetails *)paperDocDeleteCommentDetails;

///
/// Initializes union class with tag state of "paper_doc_download_details".
///
/// Description of the "paper_doc_download_details" tag state: Downloaded a
/// Paper doc in a particular output format.
///
/// @param paperDocDownloadDetails Downloaded a Paper doc in a particular output
/// format.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocDownloadDetails:(DBTEAMLOGPaperDocDownloadDetails *)paperDocDownloadDetails;

///
/// Initializes union class with tag state of "paper_doc_edit_details".
///
/// Description of the "paper_doc_edit_details" tag state: Edited a Paper doc.
///
/// @param paperDocEditDetails Edited a Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocEditDetails:(DBTEAMLOGPaperDocEditDetails *)paperDocEditDetails;

///
/// Initializes union class with tag state of "paper_doc_edit_comment_details".
///
/// Description of the "paper_doc_edit_comment_details" tag state: Edited a
/// Paper doc comment.
///
/// @param paperDocEditCommentDetails Edited a Paper doc comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocEditCommentDetails:(DBTEAMLOGPaperDocEditCommentDetails *)paperDocEditCommentDetails;

///
/// Initializes union class with tag state of "paper_doc_followed_details".
///
/// Description of the "paper_doc_followed_details" tag state: Followed a Paper
/// doc.
///
/// @param paperDocFollowedDetails Followed a Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocFollowedDetails:(DBTEAMLOGPaperDocFollowedDetails *)paperDocFollowedDetails;

///
/// Initializes union class with tag state of "paper_doc_mention_details".
///
/// Description of the "paper_doc_mention_details" tag state: Mentioned a member
/// in a Paper doc.
///
/// @param paperDocMentionDetails Mentioned a member in a Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocMentionDetails:(DBTEAMLOGPaperDocMentionDetails *)paperDocMentionDetails;

///
/// Initializes union class with tag state of
/// "paper_doc_request_access_details".
///
/// Description of the "paper_doc_request_access_details" tag state: Requested
/// to be a member on a Paper doc.
///
/// @param paperDocRequestAccessDetails Requested to be a member on a Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocRequestAccessDetails:
    (DBTEAMLOGPaperDocRequestAccessDetails *)paperDocRequestAccessDetails;

///
/// Initializes union class with tag state of
/// "paper_doc_resolve_comment_details".
///
/// Description of the "paper_doc_resolve_comment_details" tag state: Paper doc
/// comment resolved.
///
/// @param paperDocResolveCommentDetails Paper doc comment resolved.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocResolveCommentDetails:
    (DBTEAMLOGPaperDocResolveCommentDetails *)paperDocResolveCommentDetails;

///
/// Initializes union class with tag state of "paper_doc_revert_details".
///
/// Description of the "paper_doc_revert_details" tag state: Restored a Paper
/// doc to previous revision.
///
/// @param paperDocRevertDetails Restored a Paper doc to previous revision.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocRevertDetails:(DBTEAMLOGPaperDocRevertDetails *)paperDocRevertDetails;

///
/// Initializes union class with tag state of "paper_doc_slack_share_details".
///
/// Description of the "paper_doc_slack_share_details" tag state: Paper doc link
/// shared via slack.
///
/// @param paperDocSlackShareDetails Paper doc link shared via slack.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocSlackShareDetails:(DBTEAMLOGPaperDocSlackShareDetails *)paperDocSlackShareDetails;

///
/// Initializes union class with tag state of "paper_doc_team_invite_details".
///
/// Description of the "paper_doc_team_invite_details" tag state: Paper doc
/// shared with team member.
///
/// @param paperDocTeamInviteDetails Paper doc shared with team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocTeamInviteDetails:(DBTEAMLOGPaperDocTeamInviteDetails *)paperDocTeamInviteDetails;

///
/// Initializes union class with tag state of
/// "paper_doc_unresolve_comment_details".
///
/// Description of the "paper_doc_unresolve_comment_details" tag state:
/// Unresolved a Paper doc comment.
///
/// @param paperDocUnresolveCommentDetails Unresolved a Paper doc comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocUnresolveCommentDetails:
    (DBTEAMLOGPaperDocUnresolveCommentDetails *)paperDocUnresolveCommentDetails;

///
/// Initializes union class with tag state of "paper_doc_view_details".
///
/// Description of the "paper_doc_view_details" tag state: Viewed Paper doc.
///
/// @param paperDocViewDetails Viewed Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocViewDetails:(DBTEAMLOGPaperDocViewDetails *)paperDocViewDetails;

///
/// Initializes union class with tag state of "paper_folder_deleted_details".
///
/// Description of the "paper_folder_deleted_details" tag state: Paper folder
/// archived.
///
/// @param paperFolderDeletedDetails Paper folder archived.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperFolderDeletedDetails:(DBTEAMLOGPaperFolderDeletedDetails *)paperFolderDeletedDetails;

///
/// Initializes union class with tag state of "paper_folder_followed_details".
///
/// Description of the "paper_folder_followed_details" tag state: Followed a
/// Paper folder.
///
/// @param paperFolderFollowedDetails Followed a Paper folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperFolderFollowedDetails:(DBTEAMLOGPaperFolderFollowedDetails *)paperFolderFollowedDetails;

///
/// Initializes union class with tag state of
/// "paper_folder_team_invite_details".
///
/// Description of the "paper_folder_team_invite_details" tag state: Paper
/// folder shared with team member.
///
/// @param paperFolderTeamInviteDetails Paper folder shared with team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperFolderTeamInviteDetails:
    (DBTEAMLOGPaperFolderTeamInviteDetails *)paperFolderTeamInviteDetails;

///
/// Initializes union class with tag state of "password_change_details".
///
/// Description of the "password_change_details" tag state: Changed password.
///
/// @param passwordChangeDetails Changed password.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordChangeDetails:(DBTEAMLOGPasswordChangeDetails *)passwordChangeDetails;

///
/// Initializes union class with tag state of "password_reset_details".
///
/// Description of the "password_reset_details" tag state: Reset password.
///
/// @param passwordResetDetails Reset password.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordResetDetails:(DBTEAMLOGPasswordResetDetails *)passwordResetDetails;

///
/// Initializes union class with tag state of "password_reset_all_details".
///
/// Description of the "password_reset_all_details" tag state: Reset all team
/// member passwords.
///
/// @param passwordResetAllDetails Reset all team member passwords.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordResetAllDetails:(DBTEAMLOGPasswordResetAllDetails *)passwordResetAllDetails;

///
/// Initializes union class with tag state of
/// "emm_create_exceptions_report_details".
///
/// Description of the "emm_create_exceptions_report_details" tag state: EMM
/// excluded users report created.
///
/// @param emmCreateExceptionsReportDetails EMM excluded users report created.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmCreateExceptionsReportDetails:
    (DBTEAMLOGEmmCreateExceptionsReportDetails *)emmCreateExceptionsReportDetails;

///
/// Initializes union class with tag state of "emm_create_usage_report_details".
///
/// Description of the "emm_create_usage_report_details" tag state: EMM mobile
/// app usage report created.
///
/// @param emmCreateUsageReportDetails EMM mobile app usage report created.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmCreateUsageReportDetails:(DBTEAMLOGEmmCreateUsageReportDetails *)emmCreateUsageReportDetails;

///
/// Initializes union class with tag state of
/// "smart_sync_create_admin_privilege_report_details".
///
/// Description of the "smart_sync_create_admin_privilege_report_details" tag
/// state: Smart Sync non-admin devices report created.
///
/// @param smartSyncCreateAdminPrivilegeReportDetails Smart Sync non-admin
/// devices report created.
///
/// @return An initialized instance.
///
- (instancetype)initWithSmartSyncCreateAdminPrivilegeReportDetails:
    (DBTEAMLOGSmartSyncCreateAdminPrivilegeReportDetails *)smartSyncCreateAdminPrivilegeReportDetails;

///
/// Initializes union class with tag state of
/// "team_activity_create_report_details".
///
/// Description of the "team_activity_create_report_details" tag state: Created
/// a team activity report.
///
/// @param teamActivityCreateReportDetails Created a team activity report.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamActivityCreateReportDetails:
    (DBTEAMLOGTeamActivityCreateReportDetails *)teamActivityCreateReportDetails;

///
/// Initializes union class with tag state of "collection_share_details".
///
/// Description of the "collection_share_details" tag state: Shared an album.
///
/// @param collectionShareDetails Shared an album.
///
/// @return An initialized instance.
///
- (instancetype)initWithCollectionShareDetails:(DBTEAMLOGCollectionShareDetails *)collectionShareDetails;

///
/// Initializes union class with tag state of "file_add_comment_details".
///
/// Description of the "file_add_comment_details" tag state: Added a file
/// comment.
///
/// @param fileAddCommentDetails Added a file comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileAddCommentDetails:(DBTEAMLOGFileAddCommentDetails *)fileAddCommentDetails;

///
/// Initializes union class with tag state of "file_like_comment_details".
///
/// Description of the "file_like_comment_details" tag state: Liked a file
/// comment.
///
/// @param fileLikeCommentDetails Liked a file comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileLikeCommentDetails:(DBTEAMLOGFileLikeCommentDetails *)fileLikeCommentDetails;

///
/// Initializes union class with tag state of "file_unlike_comment_details".
///
/// Description of the "file_unlike_comment_details" tag state: Unliked a file
/// comment.
///
/// @param fileUnlikeCommentDetails Unliked a file comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileUnlikeCommentDetails:(DBTEAMLOGFileUnlikeCommentDetails *)fileUnlikeCommentDetails;

///
/// Initializes union class with tag state of "note_acl_invite_only_details".
///
/// Description of the "note_acl_invite_only_details" tag state: Changed a Paper
/// document to be invite-only.
///
/// @param noteAclInviteOnlyDetails Changed a Paper document to be invite-only.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteAclInviteOnlyDetails:(DBTEAMLOGNoteAclInviteOnlyDetails *)noteAclInviteOnlyDetails;

///
/// Initializes union class with tag state of "note_acl_link_details".
///
/// Description of the "note_acl_link_details" tag state: Changed a Paper
/// document to be link accessible.
///
/// @param noteAclLinkDetails Changed a Paper document to be link accessible.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteAclLinkDetails:(DBTEAMLOGNoteAclLinkDetails *)noteAclLinkDetails;

///
/// Initializes union class with tag state of "note_acl_team_link_details".
///
/// Description of the "note_acl_team_link_details" tag state: Changed a Paper
/// document to be link accessible for the team.
///
/// @param noteAclTeamLinkDetails Changed a Paper document to be link accessible
/// for the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteAclTeamLinkDetails:(DBTEAMLOGNoteAclTeamLinkDetails *)noteAclTeamLinkDetails;

///
/// Initializes union class with tag state of "note_shared_details".
///
/// Description of the "note_shared_details" tag state: Shared a Paper doc.
///
/// @param noteSharedDetails Shared a Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteSharedDetails:(DBTEAMLOGNoteSharedDetails *)noteSharedDetails;

///
/// Initializes union class with tag state of "note_share_receive_details".
///
/// Description of the "note_share_receive_details" tag state: Shared Paper
/// document received.
///
/// @param noteShareReceiveDetails Shared Paper document received.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteShareReceiveDetails:(DBTEAMLOGNoteShareReceiveDetails *)noteShareReceiveDetails;

///
/// Initializes union class with tag state of "open_note_shared_details".
///
/// Description of the "open_note_shared_details" tag state: Opened a shared
/// Paper doc.
///
/// @param openNoteSharedDetails Opened a shared Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithOpenNoteSharedDetails:(DBTEAMLOGOpenNoteSharedDetails *)openNoteSharedDetails;

///
/// Initializes union class with tag state of "sf_add_group_details".
///
/// Description of the "sf_add_group_details" tag state: Added the team to a
/// shared folder.
///
/// @param sfAddGroupDetails Added the team to a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfAddGroupDetails:(DBTEAMLOGSfAddGroupDetails *)sfAddGroupDetails;

///
/// Initializes union class with tag state of
/// "sf_allow_non_members_to_view_shared_links_details".
///
/// Description of the "sf_allow_non_members_to_view_shared_links_details" tag
/// state: Allowed non collaborators to view links to files in a shared folder.
///
/// @param sfAllowNonMembersToViewSharedLinksDetails Allowed non collaborators
/// to view links to files in a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfAllowNonMembersToViewSharedLinksDetails:
    (DBTEAMLOGSfAllowNonMembersToViewSharedLinksDetails *)sfAllowNonMembersToViewSharedLinksDetails;

///
/// Initializes union class with tag state of "sf_invite_group_details".
///
/// Description of the "sf_invite_group_details" tag state: Invited a group to a
/// shared folder.
///
/// @param sfInviteGroupDetails Invited a group to a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfInviteGroupDetails:(DBTEAMLOGSfInviteGroupDetails *)sfInviteGroupDetails;

///
/// Initializes union class with tag state of "sf_nest_details".
///
/// Description of the "sf_nest_details" tag state: Changed parent of shared
/// folder.
///
/// @param sfNestDetails Changed parent of shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfNestDetails:(DBTEAMLOGSfNestDetails *)sfNestDetails;

///
/// Initializes union class with tag state of "sf_team_decline_details".
///
/// Description of the "sf_team_decline_details" tag state: Declined a team
/// member's invitation to a shared folder.
///
/// @param sfTeamDeclineDetails Declined a team member's invitation to a shared
/// folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamDeclineDetails:(DBTEAMLOGSfTeamDeclineDetails *)sfTeamDeclineDetails;

///
/// Initializes union class with tag state of "sf_team_grant_access_details".
///
/// Description of the "sf_team_grant_access_details" tag state: Granted access
/// to a shared folder.
///
/// @param sfTeamGrantAccessDetails Granted access to a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamGrantAccessDetails:(DBTEAMLOGSfTeamGrantAccessDetails *)sfTeamGrantAccessDetails;

///
/// Initializes union class with tag state of "sf_team_invite_details".
///
/// Description of the "sf_team_invite_details" tag state: Invited team members
/// to a shared folder.
///
/// @param sfTeamInviteDetails Invited team members to a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamInviteDetails:(DBTEAMLOGSfTeamInviteDetails *)sfTeamInviteDetails;

///
/// Initializes union class with tag state of
/// "sf_team_invite_change_role_details".
///
/// Description of the "sf_team_invite_change_role_details" tag state: Changed a
/// team member's role in a shared folder.
///
/// @param sfTeamInviteChangeRoleDetails Changed a team member's role in a
/// shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamInviteChangeRoleDetails:
    (DBTEAMLOGSfTeamInviteChangeRoleDetails *)sfTeamInviteChangeRoleDetails;

///
/// Initializes union class with tag state of "sf_team_join_details".
///
/// Description of the "sf_team_join_details" tag state: Joined a team member's
/// shared folder.
///
/// @param sfTeamJoinDetails Joined a team member's shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamJoinDetails:(DBTEAMLOGSfTeamJoinDetails *)sfTeamJoinDetails;

///
/// Initializes union class with tag state of
/// "sf_team_join_from_oob_link_details".
///
/// Description of the "sf_team_join_from_oob_link_details" tag state: Joined a
/// team member's shared folder from a link.
///
/// @param sfTeamJoinFromOobLinkDetails Joined a team member's shared folder
/// from a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamJoinFromOobLinkDetails:
    (DBTEAMLOGSfTeamJoinFromOobLinkDetails *)sfTeamJoinFromOobLinkDetails;

///
/// Initializes union class with tag state of "sf_team_uninvite_details".
///
/// Description of the "sf_team_uninvite_details" tag state: Unshared a folder
/// with a team member.
///
/// @param sfTeamUninviteDetails Unshared a folder with a team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamUninviteDetails:(DBTEAMLOGSfTeamUninviteDetails *)sfTeamUninviteDetails;

///
/// Initializes union class with tag state of
/// "shared_content_add_invitees_details".
///
/// Description of the "shared_content_add_invitees_details" tag state: Sent an
/// email invitation to the membership of a shared file or folder.
///
/// @param sharedContentAddInviteesDetails Sent an email invitation to the
/// membership of a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentAddInviteesDetails:
    (DBTEAMLOGSharedContentAddInviteesDetails *)sharedContentAddInviteesDetails;

///
/// Initializes union class with tag state of
/// "shared_content_add_link_expiry_details".
///
/// Description of the "shared_content_add_link_expiry_details" tag state: Added
/// an expiry to the link for the shared file or folder.
///
/// @param sharedContentAddLinkExpiryDetails Added an expiry to the link for the
/// shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentAddLinkExpiryDetails:
    (DBTEAMLOGSharedContentAddLinkExpiryDetails *)sharedContentAddLinkExpiryDetails;

///
/// Initializes union class with tag state of
/// "shared_content_add_link_password_details".
///
/// Description of the "shared_content_add_link_password_details" tag state:
/// Added a password to the link for the shared file or folder.
///
/// @param sharedContentAddLinkPasswordDetails Added a password to the link for
/// the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentAddLinkPasswordDetails:
    (DBTEAMLOGSharedContentAddLinkPasswordDetails *)sharedContentAddLinkPasswordDetails;

///
/// Initializes union class with tag state of
/// "shared_content_add_member_details".
///
/// Description of the "shared_content_add_member_details" tag state: Added
/// users and/or groups to the membership of a shared file or folder.
///
/// @param sharedContentAddMemberDetails Added users and/or groups to the
/// membership of a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentAddMemberDetails:
    (DBTEAMLOGSharedContentAddMemberDetails *)sharedContentAddMemberDetails;

///
/// Initializes union class with tag state of
/// "shared_content_change_downloads_policy_details".
///
/// Description of the "shared_content_change_downloads_policy_details" tag
/// state: Changed whether members can download the shared file or folder.
///
/// @param sharedContentChangeDownloadsPolicyDetails Changed whether members can
/// download the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeDownloadsPolicyDetails:
    (DBTEAMLOGSharedContentChangeDownloadsPolicyDetails *)sharedContentChangeDownloadsPolicyDetails;

///
/// Initializes union class with tag state of
/// "shared_content_change_invitee_role_details".
///
/// Description of the "shared_content_change_invitee_role_details" tag state:
/// Changed the access type of an invitee to a shared file or folder before the
/// invitation was claimed.
///
/// @param sharedContentChangeInviteeRoleDetails Changed the access type of an
/// invitee to a shared file or folder before the invitation was claimed.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeInviteeRoleDetails:
    (DBTEAMLOGSharedContentChangeInviteeRoleDetails *)sharedContentChangeInviteeRoleDetails;

///
/// Initializes union class with tag state of
/// "shared_content_change_link_audience_details".
///
/// Description of the "shared_content_change_link_audience_details" tag state:
/// Changed the audience of the link for a shared file or folder.
///
/// @param sharedContentChangeLinkAudienceDetails Changed the audience of the
/// link for a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeLinkAudienceDetails:
    (DBTEAMLOGSharedContentChangeLinkAudienceDetails *)sharedContentChangeLinkAudienceDetails;

///
/// Initializes union class with tag state of
/// "shared_content_change_link_expiry_details".
///
/// Description of the "shared_content_change_link_expiry_details" tag state:
/// Changed the expiry of the link for the shared file or folder.
///
/// @param sharedContentChangeLinkExpiryDetails Changed the expiry of the link
/// for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeLinkExpiryDetails:
    (DBTEAMLOGSharedContentChangeLinkExpiryDetails *)sharedContentChangeLinkExpiryDetails;

///
/// Initializes union class with tag state of
/// "shared_content_change_link_password_details".
///
/// Description of the "shared_content_change_link_password_details" tag state:
/// Changed the password on the link for the shared file or folder.
///
/// @param sharedContentChangeLinkPasswordDetails Changed the password on the
/// link for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeLinkPasswordDetails:
    (DBTEAMLOGSharedContentChangeLinkPasswordDetails *)sharedContentChangeLinkPasswordDetails;

///
/// Initializes union class with tag state of
/// "shared_content_change_member_role_details".
///
/// Description of the "shared_content_change_member_role_details" tag state:
/// Changed the access type of a shared file or folder member.
///
/// @param sharedContentChangeMemberRoleDetails Changed the access type of a
/// shared file or folder member.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeMemberRoleDetails:
    (DBTEAMLOGSharedContentChangeMemberRoleDetails *)sharedContentChangeMemberRoleDetails;

///
/// Initializes union class with tag state of
/// "shared_content_change_viewer_info_policy_details".
///
/// Description of the "shared_content_change_viewer_info_policy_details" tag
/// state: Changed whether members can see who viewed the shared file or folder.
///
/// @param sharedContentChangeViewerInfoPolicyDetails Changed whether members
/// can see who viewed the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeViewerInfoPolicyDetails:
    (DBTEAMLOGSharedContentChangeViewerInfoPolicyDetails *)sharedContentChangeViewerInfoPolicyDetails;

///
/// Initializes union class with tag state of
/// "shared_content_claim_invitation_details".
///
/// Description of the "shared_content_claim_invitation_details" tag state:
/// Claimed membership to a team member's shared folder.
///
/// @param sharedContentClaimInvitationDetails Claimed membership to a team
/// member's shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentClaimInvitationDetails:
    (DBTEAMLOGSharedContentClaimInvitationDetails *)sharedContentClaimInvitationDetails;

///
/// Initializes union class with tag state of "shared_content_copy_details".
///
/// Description of the "shared_content_copy_details" tag state: Copied the
/// shared file or folder to own Dropbox.
///
/// @param sharedContentCopyDetails Copied the shared file or folder to own
/// Dropbox.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentCopyDetails:(DBTEAMLOGSharedContentCopyDetails *)sharedContentCopyDetails;

///
/// Initializes union class with tag state of "shared_content_download_details".
///
/// Description of the "shared_content_download_details" tag state: Downloaded
/// the shared file or folder.
///
/// @param sharedContentDownloadDetails Downloaded the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentDownloadDetails:
    (DBTEAMLOGSharedContentDownloadDetails *)sharedContentDownloadDetails;

///
/// Initializes union class with tag state of
/// "shared_content_relinquish_membership_details".
///
/// Description of the "shared_content_relinquish_membership_details" tag state:
/// Left the membership of a shared file or folder.
///
/// @param sharedContentRelinquishMembershipDetails Left the membership of a
/// shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRelinquishMembershipDetails:
    (DBTEAMLOGSharedContentRelinquishMembershipDetails *)sharedContentRelinquishMembershipDetails;

///
/// Initializes union class with tag state of
/// "shared_content_remove_invitee_details".
///
/// Description of the "shared_content_remove_invitee_details" tag state:
/// Removed an invitee from the membership of a shared file or folder before it
/// was claimed.
///
/// @param sharedContentRemoveInviteeDetails Removed an invitee from the
/// membership of a shared file or folder before it was claimed.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRemoveInviteeDetails:
    (DBTEAMLOGSharedContentRemoveInviteeDetails *)sharedContentRemoveInviteeDetails;

///
/// Initializes union class with tag state of
/// "shared_content_remove_link_expiry_details".
///
/// Description of the "shared_content_remove_link_expiry_details" tag state:
/// Removed the expiry of the link for the shared file or folder.
///
/// @param sharedContentRemoveLinkExpiryDetails Removed the expiry of the link
/// for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRemoveLinkExpiryDetails:
    (DBTEAMLOGSharedContentRemoveLinkExpiryDetails *)sharedContentRemoveLinkExpiryDetails;

///
/// Initializes union class with tag state of
/// "shared_content_remove_link_password_details".
///
/// Description of the "shared_content_remove_link_password_details" tag state:
/// Removed the password on the link for the shared file or folder.
///
/// @param sharedContentRemoveLinkPasswordDetails Removed the password on the
/// link for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRemoveLinkPasswordDetails:
    (DBTEAMLOGSharedContentRemoveLinkPasswordDetails *)sharedContentRemoveLinkPasswordDetails;

///
/// Initializes union class with tag state of
/// "shared_content_remove_member_details".
///
/// Description of the "shared_content_remove_member_details" tag state: Removed
/// a user or a group from the membership of a shared file or folder.
///
/// @param sharedContentRemoveMemberDetails Removed a user or a group from the
/// membership of a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRemoveMemberDetails:
    (DBTEAMLOGSharedContentRemoveMemberDetails *)sharedContentRemoveMemberDetails;

///
/// Initializes union class with tag state of
/// "shared_content_request_access_details".
///
/// Description of the "shared_content_request_access_details" tag state:
/// Requested to be on the membership of a shared file or folder.
///
/// @param sharedContentRequestAccessDetails Requested to be on the membership
/// of a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRequestAccessDetails:
    (DBTEAMLOGSharedContentRequestAccessDetails *)sharedContentRequestAccessDetails;

///
/// Initializes union class with tag state of "shared_content_unshare_details".
///
/// Description of the "shared_content_unshare_details" tag state: Unshared a
/// shared file or folder by clearing its membership and turning off its link.
///
/// @param sharedContentUnshareDetails Unshared a shared file or folder by
/// clearing its membership and turning off its link.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentUnshareDetails:(DBTEAMLOGSharedContentUnshareDetails *)sharedContentUnshareDetails;

///
/// Initializes union class with tag state of "shared_content_view_details".
///
/// Description of the "shared_content_view_details" tag state: Previewed the
/// shared file or folder.
///
/// @param sharedContentViewDetails Previewed the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentViewDetails:(DBTEAMLOGSharedContentViewDetails *)sharedContentViewDetails;

///
/// Initializes union class with tag state of
/// "shared_folder_change_confidentiality_details".
///
/// Description of the "shared_folder_change_confidentiality_details" tag state:
/// Set or unset the confidential flag on a shared folder.
///
/// @param sharedFolderChangeConfidentialityDetails Set or unset the
/// confidential flag on a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderChangeConfidentialityDetails:
    (DBTEAMLOGSharedFolderChangeConfidentialityDetails *)sharedFolderChangeConfidentialityDetails;

///
/// Initializes union class with tag state of
/// "shared_folder_change_link_policy_details".
///
/// Description of the "shared_folder_change_link_policy_details" tag state:
/// Changed who can access the shared folder via a link.
///
/// @param sharedFolderChangeLinkPolicyDetails Changed who can access the shared
/// folder via a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderChangeLinkPolicyDetails:
    (DBTEAMLOGSharedFolderChangeLinkPolicyDetails *)sharedFolderChangeLinkPolicyDetails;

///
/// Initializes union class with tag state of
/// "shared_folder_change_member_management_policy_details".
///
/// Description of the "shared_folder_change_member_management_policy_details"
/// tag state: Changed who can manage the membership of a shared folder.
///
/// @param sharedFolderChangeMemberManagementPolicyDetails Changed who can
/// manage the membership of a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderChangeMemberManagementPolicyDetails:
    (DBTEAMLOGSharedFolderChangeMemberManagementPolicyDetails *)sharedFolderChangeMemberManagementPolicyDetails;

///
/// Initializes union class with tag state of
/// "shared_folder_change_member_policy_details".
///
/// Description of the "shared_folder_change_member_policy_details" tag state:
/// Changed who can become a member of the shared folder.
///
/// @param sharedFolderChangeMemberPolicyDetails Changed who can become a member
/// of the shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderChangeMemberPolicyDetails:
    (DBTEAMLOGSharedFolderChangeMemberPolicyDetails *)sharedFolderChangeMemberPolicyDetails;

///
/// Initializes union class with tag state of "shared_folder_create_details".
///
/// Description of the "shared_folder_create_details" tag state: Created a
/// shared folder.
///
/// @param sharedFolderCreateDetails Created a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderCreateDetails:(DBTEAMLOGSharedFolderCreateDetails *)sharedFolderCreateDetails;

///
/// Initializes union class with tag state of "shared_folder_mount_details".
///
/// Description of the "shared_folder_mount_details" tag state: Added a shared
/// folder to own Dropbox.
///
/// @param sharedFolderMountDetails Added a shared folder to own Dropbox.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderMountDetails:(DBTEAMLOGSharedFolderMountDetails *)sharedFolderMountDetails;

///
/// Initializes union class with tag state of
/// "shared_folder_transfer_ownership_details".
///
/// Description of the "shared_folder_transfer_ownership_details" tag state:
/// Transferred the ownership of a shared folder to another member.
///
/// @param sharedFolderTransferOwnershipDetails Transferred the ownership of a
/// shared folder to another member.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderTransferOwnershipDetails:
    (DBTEAMLOGSharedFolderTransferOwnershipDetails *)sharedFolderTransferOwnershipDetails;

///
/// Initializes union class with tag state of "shared_folder_unmount_details".
///
/// Description of the "shared_folder_unmount_details" tag state: Deleted a
/// shared folder from Dropbox.
///
/// @param sharedFolderUnmountDetails Deleted a shared folder from Dropbox.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderUnmountDetails:(DBTEAMLOGSharedFolderUnmountDetails *)sharedFolderUnmountDetails;

///
/// Initializes union class with tag state of "shared_note_opened_details".
///
/// Description of the "shared_note_opened_details" tag state: Shared Paper
/// document was opened.
///
/// @param sharedNoteOpenedDetails Shared Paper document was opened.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedNoteOpenedDetails:(DBTEAMLOGSharedNoteOpenedDetails *)sharedNoteOpenedDetails;

///
/// Initializes union class with tag state of "shmodel_app_create_details".
///
/// Description of the "shmodel_app_create_details" tag state: Created a link to
/// a file using an app.
///
/// @param shmodelAppCreateDetails Created a link to a file using an app.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelAppCreateDetails:(DBTEAMLOGShmodelAppCreateDetails *)shmodelAppCreateDetails;

///
/// Initializes union class with tag state of "shmodel_create_details".
///
/// Description of the "shmodel_create_details" tag state: Created a new link.
///
/// @param shmodelCreateDetails Created a new link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelCreateDetails:(DBTEAMLOGShmodelCreateDetails *)shmodelCreateDetails;

///
/// Initializes union class with tag state of "shmodel_disable_details".
///
/// Description of the "shmodel_disable_details" tag state: Removed a link.
///
/// @param shmodelDisableDetails Removed a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelDisableDetails:(DBTEAMLOGShmodelDisableDetails *)shmodelDisableDetails;

///
/// Initializes union class with tag state of "shmodel_fb_share_details".
///
/// Description of the "shmodel_fb_share_details" tag state: Shared a link with
/// Facebook users.
///
/// @param shmodelFbShareDetails Shared a link with Facebook users.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelFbShareDetails:(DBTEAMLOGShmodelFbShareDetails *)shmodelFbShareDetails;

///
/// Initializes union class with tag state of "shmodel_group_share_details".
///
/// Description of the "shmodel_group_share_details" tag state: Shared a link
/// with a group.
///
/// @param shmodelGroupShareDetails Shared a link with a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelGroupShareDetails:(DBTEAMLOGShmodelGroupShareDetails *)shmodelGroupShareDetails;

///
/// Initializes union class with tag state of
/// "shmodel_remove_expiration_details".
///
/// Description of the "shmodel_remove_expiration_details" tag state: Removed
/// the expiration date from a link.
///
/// @param shmodelRemoveExpirationDetails Removed the expiration date from a
/// link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelRemoveExpirationDetails:
    (DBTEAMLOGShmodelRemoveExpirationDetails *)shmodelRemoveExpirationDetails;

///
/// Initializes union class with tag state of "shmodel_set_expiration_details".
///
/// Description of the "shmodel_set_expiration_details" tag state: Added an
/// expiration date to a link.
///
/// @param shmodelSetExpirationDetails Added an expiration date to a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelSetExpirationDetails:(DBTEAMLOGShmodelSetExpirationDetails *)shmodelSetExpirationDetails;

///
/// Initializes union class with tag state of "shmodel_team_copy_details".
///
/// Description of the "shmodel_team_copy_details" tag state: Added a team
/// member's file/folder to their Dropbox from a link.
///
/// @param shmodelTeamCopyDetails Added a team member's file/folder to their
/// Dropbox from a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelTeamCopyDetails:(DBTEAMLOGShmodelTeamCopyDetails *)shmodelTeamCopyDetails;

///
/// Initializes union class with tag state of "shmodel_team_download_details".
///
/// Description of the "shmodel_team_download_details" tag state: Downloaded a
/// team member's file/folder from a link.
///
/// @param shmodelTeamDownloadDetails Downloaded a team member's file/folder
/// from a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelTeamDownloadDetails:(DBTEAMLOGShmodelTeamDownloadDetails *)shmodelTeamDownloadDetails;

///
/// Initializes union class with tag state of "shmodel_team_share_details".
///
/// Description of the "shmodel_team_share_details" tag state: Shared a link
/// with team members.
///
/// @param shmodelTeamShareDetails Shared a link with team members.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelTeamShareDetails:(DBTEAMLOGShmodelTeamShareDetails *)shmodelTeamShareDetails;

///
/// Initializes union class with tag state of "shmodel_team_view_details".
///
/// Description of the "shmodel_team_view_details" tag state: Opened a team
/// member's link.
///
/// @param shmodelTeamViewDetails Opened a team member's link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelTeamViewDetails:(DBTEAMLOGShmodelTeamViewDetails *)shmodelTeamViewDetails;

///
/// Initializes union class with tag state of
/// "shmodel_visibility_password_details".
///
/// Description of the "shmodel_visibility_password_details" tag state:
/// Password-protected a link.
///
/// @param shmodelVisibilityPasswordDetails Password-protected a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelVisibilityPasswordDetails:
    (DBTEAMLOGShmodelVisibilityPasswordDetails *)shmodelVisibilityPasswordDetails;

///
/// Initializes union class with tag state of
/// "shmodel_visibility_public_details".
///
/// Description of the "shmodel_visibility_public_details" tag state: Made a
/// file/folder visible to anyone with the link.
///
/// @param shmodelVisibilityPublicDetails Made a file/folder visible to anyone
/// with the link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelVisibilityPublicDetails:
    (DBTEAMLOGShmodelVisibilityPublicDetails *)shmodelVisibilityPublicDetails;

///
/// Initializes union class with tag state of
/// "shmodel_visibility_team_only_details".
///
/// Description of the "shmodel_visibility_team_only_details" tag state: Made a
/// file/folder visible only to team members with the link.
///
/// @param shmodelVisibilityTeamOnlyDetails Made a file/folder visible only to
/// team members with the link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelVisibilityTeamOnlyDetails:
    (DBTEAMLOGShmodelVisibilityTeamOnlyDetails *)shmodelVisibilityTeamOnlyDetails;

///
/// Initializes union class with tag state of "remove_logout_url_details".
///
/// Description of the "remove_logout_url_details" tag state: Removed single
/// sign-on logout URL.
///
/// @param removeLogoutUrlDetails Removed single sign-on logout URL.
///
/// @return An initialized instance.
///
- (instancetype)initWithRemoveLogoutUrlDetails:(DBTEAMLOGRemoveLogoutUrlDetails *)removeLogoutUrlDetails;

///
/// Initializes union class with tag state of "remove_sso_url_details".
///
/// Description of the "remove_sso_url_details" tag state: Changed the sign-out
/// URL for SSO.
///
/// @param removeSsoUrlDetails Changed the sign-out URL for SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithRemoveSsoUrlDetails:(DBTEAMLOGRemoveSsoUrlDetails *)removeSsoUrlDetails;

///
/// Initializes union class with tag state of "sso_change_cert_details".
///
/// Description of the "sso_change_cert_details" tag state: Changed the X.509
/// certificate for SSO.
///
/// @param ssoChangeCertDetails Changed the X.509 certificate for SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangeCertDetails:(DBTEAMLOGSsoChangeCertDetails *)ssoChangeCertDetails;

///
/// Initializes union class with tag state of "sso_change_login_url_details".
///
/// Description of the "sso_change_login_url_details" tag state: Changed the
/// sign-in URL for SSO.
///
/// @param ssoChangeLoginUrlDetails Changed the sign-in URL for SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangeLoginUrlDetails:(DBTEAMLOGSsoChangeLoginUrlDetails *)ssoChangeLoginUrlDetails;

///
/// Initializes union class with tag state of "sso_change_logout_url_details".
///
/// Description of the "sso_change_logout_url_details" tag state: Changed the
/// sign-out URL for SSO.
///
/// @param ssoChangeLogoutUrlDetails Changed the sign-out URL for SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangeLogoutUrlDetails:(DBTEAMLOGSsoChangeLogoutUrlDetails *)ssoChangeLogoutUrlDetails;

///
/// Initializes union class with tag state of
/// "sso_change_saml_identity_mode_details".
///
/// Description of the "sso_change_saml_identity_mode_details" tag state:
/// Changed the SAML identity mode for SSO.
///
/// @param ssoChangeSamlIdentityModeDetails Changed the SAML identity mode for
/// SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangeSamlIdentityModeDetails:
    (DBTEAMLOGSsoChangeSamlIdentityModeDetails *)ssoChangeSamlIdentityModeDetails;

///
/// Initializes union class with tag state of
/// "team_folder_change_status_details".
///
/// Description of the "team_folder_change_status_details" tag state: Changed
/// the archival status of a team folder.
///
/// @param teamFolderChangeStatusDetails Changed the archival status of a team
/// folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderChangeStatusDetails:
    (DBTEAMLOGTeamFolderChangeStatusDetails *)teamFolderChangeStatusDetails;

///
/// Initializes union class with tag state of "team_folder_create_details".
///
/// Description of the "team_folder_create_details" tag state: Created a new
/// team folder in active status.
///
/// @param teamFolderCreateDetails Created a new team folder in active status.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderCreateDetails:(DBTEAMLOGTeamFolderCreateDetails *)teamFolderCreateDetails;

///
/// Initializes union class with tag state of "team_folder_downgrade_details".
///
/// Description of the "team_folder_downgrade_details" tag state: Downgraded a
/// team folder to a regular shared folder.
///
/// @param teamFolderDowngradeDetails Downgraded a team folder to a regular
/// shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderDowngradeDetails:(DBTEAMLOGTeamFolderDowngradeDetails *)teamFolderDowngradeDetails;

///
/// Initializes union class with tag state of
/// "team_folder_permanently_delete_details".
///
/// Description of the "team_folder_permanently_delete_details" tag state:
/// Permanently deleted an archived team folder.
///
/// @param teamFolderPermanentlyDeleteDetails Permanently deleted an archived
/// team folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderPermanentlyDeleteDetails:
    (DBTEAMLOGTeamFolderPermanentlyDeleteDetails *)teamFolderPermanentlyDeleteDetails;

///
/// Initializes union class with tag state of "team_folder_rename_details".
///
/// Description of the "team_folder_rename_details" tag state: Renamed an active
/// or archived team folder.
///
/// @param teamFolderRenameDetails Renamed an active or archived team folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderRenameDetails:(DBTEAMLOGTeamFolderRenameDetails *)teamFolderRenameDetails;

///
/// Initializes union class with tag state of
/// "account_capture_change_policy_details".
///
/// Description of the "account_capture_change_policy_details" tag state:
/// Changed the account capture policy on a domain belonging to the team.
///
/// @param accountCaptureChangePolicyDetails Changed the account capture policy
/// on a domain belonging to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAccountCaptureChangePolicyDetails:
    (DBTEAMLOGAccountCaptureChangePolicyDetails *)accountCaptureChangePolicyDetails;

///
/// Initializes union class with tag state of "allow_download_disabled_details".
///
/// Description of the "allow_download_disabled_details" tag state: Disabled
/// allow downloads.
///
/// @param allowDownloadDisabledDetails Disabled allow downloads.
///
/// @return An initialized instance.
///
- (instancetype)initWithAllowDownloadDisabledDetails:
    (DBTEAMLOGAllowDownloadDisabledDetails *)allowDownloadDisabledDetails;

///
/// Initializes union class with tag state of "allow_download_enabled_details".
///
/// Description of the "allow_download_enabled_details" tag state: Enabled allow
/// downloads.
///
/// @param allowDownloadEnabledDetails Enabled allow downloads.
///
/// @return An initialized instance.
///
- (instancetype)initWithAllowDownloadEnabledDetails:(DBTEAMLOGAllowDownloadEnabledDetails *)allowDownloadEnabledDetails;

///
/// Initializes union class with tag state of
/// "data_placement_restriction_change_policy_details".
///
/// Description of the "data_placement_restriction_change_policy_details" tag
/// state: Set a restriction policy regarding the location of data centers where
/// team data resides.
///
/// @param dataPlacementRestrictionChangePolicyDetails Set a restriction policy
/// regarding the location of data centers where team data resides.
///
/// @return An initialized instance.
///
- (instancetype)initWithDataPlacementRestrictionChangePolicyDetails:
    (DBTEAMLOGDataPlacementRestrictionChangePolicyDetails *)dataPlacementRestrictionChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "data_placement_restriction_satisfy_policy_details".
///
/// Description of the "data_placement_restriction_satisfy_policy_details" tag
/// state: Satisfied a previously set restriction policy regarding the location
/// of data centers where team data resides (i.e. all data have been migrated
/// according to the restriction placed).
///
/// @param dataPlacementRestrictionSatisfyPolicyDetails Satisfied a previously
/// set restriction policy regarding the location of data centers where team
/// data resides (i.e. all data have been migrated according to the restriction
/// placed).
///
/// @return An initialized instance.
///
- (instancetype)initWithDataPlacementRestrictionSatisfyPolicyDetails:
    (DBTEAMLOGDataPlacementRestrictionSatisfyPolicyDetails *)dataPlacementRestrictionSatisfyPolicyDetails;

///
/// Initializes union class with tag state of
/// "device_approvals_change_desktop_policy_details".
///
/// Description of the "device_approvals_change_desktop_policy_details" tag
/// state: Set or removed a limit on the number of computers each team member
/// can link to their work Dropbox account.
///
/// @param deviceApprovalsChangeDesktopPolicyDetails Set or removed a limit on
/// the number of computers each team member can link to their work Dropbox
/// account.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceApprovalsChangeDesktopPolicyDetails:
    (DBTEAMLOGDeviceApprovalsChangeDesktopPolicyDetails *)deviceApprovalsChangeDesktopPolicyDetails;

///
/// Initializes union class with tag state of
/// "device_approvals_change_mobile_policy_details".
///
/// Description of the "device_approvals_change_mobile_policy_details" tag
/// state: Set or removed a limit on the number of mobiles devices each team
/// member can link to their work Dropbox account.
///
/// @param deviceApprovalsChangeMobilePolicyDetails Set or removed a limit on
/// the number of mobiles devices each team member can link to their work
/// Dropbox account.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceApprovalsChangeMobilePolicyDetails:
    (DBTEAMLOGDeviceApprovalsChangeMobilePolicyDetails *)deviceApprovalsChangeMobilePolicyDetails;

///
/// Initializes union class with tag state of
/// "device_approvals_change_overage_action_details".
///
/// Description of the "device_approvals_change_overage_action_details" tag
/// state: Changed the action taken when a team member is already over the
/// limits (e.g when they join the team, an admin lowers limits, etc.).
///
/// @param deviceApprovalsChangeOverageActionDetails Changed the action taken
/// when a team member is already over the limits (e.g when they join the team,
/// an admin lowers limits, etc.).
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceApprovalsChangeOverageActionDetails:
    (DBTEAMLOGDeviceApprovalsChangeOverageActionDetails *)deviceApprovalsChangeOverageActionDetails;

///
/// Initializes union class with tag state of
/// "device_approvals_change_unlink_action_details".
///
/// Description of the "device_approvals_change_unlink_action_details" tag
/// state: Changed the action taken with respect to approval limits when a team
/// member unlinks an approved device.
///
/// @param deviceApprovalsChangeUnlinkActionDetails Changed the action taken
/// with respect to approval limits when a team member unlinks an approved
/// device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceApprovalsChangeUnlinkActionDetails:
    (DBTEAMLOGDeviceApprovalsChangeUnlinkActionDetails *)deviceApprovalsChangeUnlinkActionDetails;

///
/// Initializes union class with tag state of "emm_add_exception_details".
///
/// Description of the "emm_add_exception_details" tag state: Added an exception
/// for one or more team members to optionally use the regular Dropbox app when
/// EMM is enabled.
///
/// @param emmAddExceptionDetails Added an exception for one or more team
/// members to optionally use the regular Dropbox app when EMM is enabled.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmAddExceptionDetails:(DBTEAMLOGEmmAddExceptionDetails *)emmAddExceptionDetails;

///
/// Initializes union class with tag state of "emm_change_policy_details".
///
/// Description of the "emm_change_policy_details" tag state: Enabled or
/// disabled enterprise mobility management for team members.
///
/// @param emmChangePolicyDetails Enabled or disabled enterprise mobility
/// management for team members.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmChangePolicyDetails:(DBTEAMLOGEmmChangePolicyDetails *)emmChangePolicyDetails;

///
/// Initializes union class with tag state of "emm_remove_exception_details".
///
/// Description of the "emm_remove_exception_details" tag state: Removed an
/// exception for one or more team members to optionally use the regular Dropbox
/// app when EMM is enabled.
///
/// @param emmRemoveExceptionDetails Removed an exception for one or more team
/// members to optionally use the regular Dropbox app when EMM is enabled.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmRemoveExceptionDetails:(DBTEAMLOGEmmRemoveExceptionDetails *)emmRemoveExceptionDetails;

///
/// Initializes union class with tag state of
/// "extended_version_history_change_policy_details".
///
/// Description of the "extended_version_history_change_policy_details" tag
/// state: Accepted or opted out of extended version history.
///
/// @param extendedVersionHistoryChangePolicyDetails Accepted or opted out of
/// extended version history.
///
/// @return An initialized instance.
///
- (instancetype)initWithExtendedVersionHistoryChangePolicyDetails:
    (DBTEAMLOGExtendedVersionHistoryChangePolicyDetails *)extendedVersionHistoryChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "file_comments_change_policy_details".
///
/// Description of the "file_comments_change_policy_details" tag state: Enabled
/// or disabled commenting on team files.
///
/// @param fileCommentsChangePolicyDetails Enabled or disabled commenting on
/// team files.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileCommentsChangePolicyDetails:
    (DBTEAMLOGFileCommentsChangePolicyDetails *)fileCommentsChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "file_requests_change_policy_details".
///
/// Description of the "file_requests_change_policy_details" tag state: Enabled
/// or disabled file requests.
///
/// @param fileRequestsChangePolicyDetails Enabled or disabled file requests.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestsChangePolicyDetails:
    (DBTEAMLOGFileRequestsChangePolicyDetails *)fileRequestsChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "file_requests_emails_enabled_details".
///
/// Description of the "file_requests_emails_enabled_details" tag state: Enabled
/// file request emails for everyone.
///
/// @param fileRequestsEmailsEnabledDetails Enabled file request emails for
/// everyone.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestsEmailsEnabledDetails:
    (DBTEAMLOGFileRequestsEmailsEnabledDetails *)fileRequestsEmailsEnabledDetails;

///
/// Initializes union class with tag state of
/// "file_requests_emails_restricted_to_team_only_details".
///
/// Description of the "file_requests_emails_restricted_to_team_only_details"
/// tag state: Allowed file request emails for the team.
///
/// @param fileRequestsEmailsRestrictedToTeamOnlyDetails Allowed file request
/// emails for the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestsEmailsRestrictedToTeamOnlyDetails:
    (DBTEAMLOGFileRequestsEmailsRestrictedToTeamOnlyDetails *)fileRequestsEmailsRestrictedToTeamOnlyDetails;

///
/// Initializes union class with tag state of
/// "google_sso_change_policy_details".
///
/// Description of the "google_sso_change_policy_details" tag state: Enabled or
/// disabled Google single sign-on for the team.
///
/// @param googleSsoChangePolicyDetails Enabled or disabled Google single
/// sign-on for the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithGoogleSsoChangePolicyDetails:
    (DBTEAMLOGGoogleSsoChangePolicyDetails *)googleSsoChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "group_user_management_change_policy_details".
///
/// Description of the "group_user_management_change_policy_details" tag state:
/// Changed who can create groups.
///
/// @param groupUserManagementChangePolicyDetails Changed who can create groups.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupUserManagementChangePolicyDetails:
    (DBTEAMLOGGroupUserManagementChangePolicyDetails *)groupUserManagementChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "member_requests_change_policy_details".
///
/// Description of the "member_requests_change_policy_details" tag state:
/// Changed whether users can find the team when not invited.
///
/// @param memberRequestsChangePolicyDetails Changed whether users can find the
/// team when not invited.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberRequestsChangePolicyDetails:
    (DBTEAMLOGMemberRequestsChangePolicyDetails *)memberRequestsChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "member_space_limits_add_exception_details".
///
/// Description of the "member_space_limits_add_exception_details" tag state:
/// Added an exception for one or more team members to bypass space limits
/// imposed by policy.
///
/// @param memberSpaceLimitsAddExceptionDetails Added an exception for one or
/// more team members to bypass space limits imposed by policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSpaceLimitsAddExceptionDetails:
    (DBTEAMLOGMemberSpaceLimitsAddExceptionDetails *)memberSpaceLimitsAddExceptionDetails;

///
/// Initializes union class with tag state of
/// "member_space_limits_change_policy_details".
///
/// Description of the "member_space_limits_change_policy_details" tag state:
/// Changed the storage limits applied to team members by policy.
///
/// @param memberSpaceLimitsChangePolicyDetails Changed the storage limits
/// applied to team members by policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSpaceLimitsChangePolicyDetails:
    (DBTEAMLOGMemberSpaceLimitsChangePolicyDetails *)memberSpaceLimitsChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "member_space_limits_remove_exception_details".
///
/// Description of the "member_space_limits_remove_exception_details" tag state:
/// Removed an exception for one or more team members to bypass space limits
/// imposed by policy.
///
/// @param memberSpaceLimitsRemoveExceptionDetails Removed an exception for one
/// or more team members to bypass space limits imposed by policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSpaceLimitsRemoveExceptionDetails:
    (DBTEAMLOGMemberSpaceLimitsRemoveExceptionDetails *)memberSpaceLimitsRemoveExceptionDetails;

///
/// Initializes union class with tag state of
/// "member_suggestions_change_policy_details".
///
/// Description of the "member_suggestions_change_policy_details" tag state:
/// Enabled or disabled the option for team members to suggest new members to
/// add to the team.
///
/// @param memberSuggestionsChangePolicyDetails Enabled or disabled the option
/// for team members to suggest new members to add to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSuggestionsChangePolicyDetails:
    (DBTEAMLOGMemberSuggestionsChangePolicyDetails *)memberSuggestionsChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "microsoft_office_addin_change_policy_details".
///
/// Description of the "microsoft_office_addin_change_policy_details" tag state:
/// Enabled or disabled the Microsoft Office add-in, which lets team members
/// save files to Dropbox directly from Microsoft Office.
///
/// @param microsoftOfficeAddinChangePolicyDetails Enabled or disabled the
/// Microsoft Office add-in, which lets team members save files to Dropbox
/// directly from Microsoft Office.
///
/// @return An initialized instance.
///
- (instancetype)initWithMicrosoftOfficeAddinChangePolicyDetails:
    (DBTEAMLOGMicrosoftOfficeAddinChangePolicyDetails *)microsoftOfficeAddinChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "network_control_change_policy_details".
///
/// Description of the "network_control_change_policy_details" tag state:
/// Enabled or disabled network control.
///
/// @param networkControlChangePolicyDetails Enabled or disabled network
/// control.
///
/// @return An initialized instance.
///
- (instancetype)initWithNetworkControlChangePolicyDetails:
    (DBTEAMLOGNetworkControlChangePolicyDetails *)networkControlChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "paper_change_deployment_policy_details".
///
/// Description of the "paper_change_deployment_policy_details" tag state:
/// Changed whether Dropbox Paper, when enabled, is deployed to all teams or to
/// specific members of the team.
///
/// @param paperChangeDeploymentPolicyDetails Changed whether Dropbox Paper,
/// when enabled, is deployed to all teams or to specific members of the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperChangeDeploymentPolicyDetails:
    (DBTEAMLOGPaperChangeDeploymentPolicyDetails *)paperChangeDeploymentPolicyDetails;

///
/// Initializes union class with tag state of
/// "paper_change_member_policy_details".
///
/// Description of the "paper_change_member_policy_details" tag state: Changed
/// whether team members can share Paper documents externally (i.e. outside the
/// team), and if so, whether they should be accessible only by team members or
/// anyone by default.
///
/// @param paperChangeMemberPolicyDetails Changed whether team members can share
/// Paper documents externally (i.e. outside the team), and if so, whether they
/// should be accessible only by team members or anyone by default.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperChangeMemberPolicyDetails:
    (DBTEAMLOGPaperChangeMemberPolicyDetails *)paperChangeMemberPolicyDetails;

///
/// Initializes union class with tag state of "paper_change_policy_details".
///
/// Description of the "paper_change_policy_details" tag state: Enabled or
/// disabled Dropbox Paper for the team.
///
/// @param paperChangePolicyDetails Enabled or disabled Dropbox Paper for the
/// team.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperChangePolicyDetails:(DBTEAMLOGPaperChangePolicyDetails *)paperChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "permanent_delete_change_policy_details".
///
/// Description of the "permanent_delete_change_policy_details" tag state:
/// Enabled or disabled the ability of team members to permanently delete
/// content.
///
/// @param permanentDeleteChangePolicyDetails Enabled or disabled the ability of
/// team members to permanently delete content.
///
/// @return An initialized instance.
///
- (instancetype)initWithPermanentDeleteChangePolicyDetails:
    (DBTEAMLOGPermanentDeleteChangePolicyDetails *)permanentDeleteChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "sharing_change_folder_join_policy_details".
///
/// Description of the "sharing_change_folder_join_policy_details" tag state:
/// Changed whether team members can join shared folders owned externally (i.e.
/// outside the team).
///
/// @param sharingChangeFolderJoinPolicyDetails Changed whether team members can
/// join shared folders owned externally (i.e. outside the team).
///
/// @return An initialized instance.
///
- (instancetype)initWithSharingChangeFolderJoinPolicyDetails:
    (DBTEAMLOGSharingChangeFolderJoinPolicyDetails *)sharingChangeFolderJoinPolicyDetails;

///
/// Initializes union class with tag state of
/// "sharing_change_link_policy_details".
///
/// Description of the "sharing_change_link_policy_details" tag state: Changed
/// whether team members can share links externally (i.e. outside the team), and
/// if so, whether links should be accessible only by team members or anyone by
/// default.
///
/// @param sharingChangeLinkPolicyDetails Changed whether team members can share
/// links externally (i.e. outside the team), and if so, whether links should be
/// accessible only by team members or anyone by default.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharingChangeLinkPolicyDetails:
    (DBTEAMLOGSharingChangeLinkPolicyDetails *)sharingChangeLinkPolicyDetails;

///
/// Initializes union class with tag state of
/// "sharing_change_member_policy_details".
///
/// Description of the "sharing_change_member_policy_details" tag state: Changed
/// whether team members can share files and folders externally (i.e. outside
/// the team).
///
/// @param sharingChangeMemberPolicyDetails Changed whether team members can
/// share files and folders externally (i.e. outside the team).
///
/// @return An initialized instance.
///
- (instancetype)initWithSharingChangeMemberPolicyDetails:
    (DBTEAMLOGSharingChangeMemberPolicyDetails *)sharingChangeMemberPolicyDetails;

///
/// Initializes union class with tag state of
/// "smart_sync_change_policy_details".
///
/// Description of the "smart_sync_change_policy_details" tag state: Changed the
/// default Smart Sync policy for team members.
///
/// @param smartSyncChangePolicyDetails Changed the default Smart Sync policy
/// for team members.
///
/// @return An initialized instance.
///
- (instancetype)initWithSmartSyncChangePolicyDetails:
    (DBTEAMLOGSmartSyncChangePolicyDetails *)smartSyncChangePolicyDetails;

///
/// Initializes union class with tag state of "sso_change_policy_details".
///
/// Description of the "sso_change_policy_details" tag state: Change the single
/// sign-on policy for the team.
///
/// @param ssoChangePolicyDetails Change the single sign-on policy for the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangePolicyDetails:(DBTEAMLOGSsoChangePolicyDetails *)ssoChangePolicyDetails;

///
/// Initializes union class with tag state of "tfa_change_policy_details".
///
/// Description of the "tfa_change_policy_details" tag state: Change two-step
/// verification policy for the team.
///
/// @param tfaChangePolicyDetails Change two-step verification policy for the
/// team.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaChangePolicyDetails:(DBTEAMLOGTfaChangePolicyDetails *)tfaChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "two_account_change_policy_details".
///
/// Description of the "two_account_change_policy_details" tag state: Enabled or
/// disabled the option for team members to link a personal Dropbox account in
/// addition to their work account to the same computer.
///
/// @param twoAccountChangePolicyDetails Enabled or disabled the option for team
/// members to link a personal Dropbox account in addition to their work account
/// to the same computer.
///
/// @return An initialized instance.
///
- (instancetype)initWithTwoAccountChangePolicyDetails:
    (DBTEAMLOGTwoAccountChangePolicyDetails *)twoAccountChangePolicyDetails;

///
/// Initializes union class with tag state of
/// "web_sessions_change_fixed_length_policy_details".
///
/// Description of the "web_sessions_change_fixed_length_policy_details" tag
/// state: Changed how long team members can stay signed in to Dropbox on the
/// web.
///
/// @param webSessionsChangeFixedLengthPolicyDetails Changed how long team
/// members can stay signed in to Dropbox on the web.
///
/// @return An initialized instance.
///
- (instancetype)initWithWebSessionsChangeFixedLengthPolicyDetails:
    (DBTEAMLOGWebSessionsChangeFixedLengthPolicyDetails *)webSessionsChangeFixedLengthPolicyDetails;

///
/// Initializes union class with tag state of
/// "web_sessions_change_idle_length_policy_details".
///
/// Description of the "web_sessions_change_idle_length_policy_details" tag
/// state: Changed how long team members can be idle while signed in to Dropbox
/// on the web.
///
/// @param webSessionsChangeIdleLengthPolicyDetails Changed how long team
/// members can be idle while signed in to Dropbox on the web.
///
/// @return An initialized instance.
///
- (instancetype)initWithWebSessionsChangeIdleLengthPolicyDetails:
    (DBTEAMLOGWebSessionsChangeIdleLengthPolicyDetails *)webSessionsChangeIdleLengthPolicyDetails;

///
/// Initializes union class with tag state of "team_profile_add_logo_details".
///
/// Description of the "team_profile_add_logo_details" tag state: Added a team
/// logo to be displayed on shared link headers.
///
/// @param teamProfileAddLogoDetails Added a team logo to be displayed on shared
/// link headers.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamProfileAddLogoDetails:(DBTEAMLOGTeamProfileAddLogoDetails *)teamProfileAddLogoDetails;

///
/// Initializes union class with tag state of
/// "team_profile_change_logo_details".
///
/// Description of the "team_profile_change_logo_details" tag state: Changed the
/// team logo to be displayed on shared link headers.
///
/// @param teamProfileChangeLogoDetails Changed the team logo to be displayed on
/// shared link headers.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamProfileChangeLogoDetails:
    (DBTEAMLOGTeamProfileChangeLogoDetails *)teamProfileChangeLogoDetails;

///
/// Initializes union class with tag state of
/// "team_profile_change_name_details".
///
/// Description of the "team_profile_change_name_details" tag state: Changed the
/// team name.
///
/// @param teamProfileChangeNameDetails Changed the team name.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamProfileChangeNameDetails:
    (DBTEAMLOGTeamProfileChangeNameDetails *)teamProfileChangeNameDetails;

///
/// Initializes union class with tag state of
/// "team_profile_remove_logo_details".
///
/// Description of the "team_profile_remove_logo_details" tag state: Removed the
/// team logo to be displayed on shared link headers.
///
/// @param teamProfileRemoveLogoDetails Removed the team logo to be displayed on
/// shared link headers.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamProfileRemoveLogoDetails:
    (DBTEAMLOGTeamProfileRemoveLogoDetails *)teamProfileRemoveLogoDetails;

///
/// Initializes union class with tag state of "tfa_add_backup_phone_details".
///
/// Description of the "tfa_add_backup_phone_details" tag state: Added a backup
/// phone for two-step verification.
///
/// @param tfaAddBackupPhoneDetails Added a backup phone for two-step
/// verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaAddBackupPhoneDetails:(DBTEAMLOGTfaAddBackupPhoneDetails *)tfaAddBackupPhoneDetails;

///
/// Initializes union class with tag state of "tfa_add_security_key_details".
///
/// Description of the "tfa_add_security_key_details" tag state: Added a
/// security key for two-step verification.
///
/// @param tfaAddSecurityKeyDetails Added a security key for two-step
/// verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaAddSecurityKeyDetails:(DBTEAMLOGTfaAddSecurityKeyDetails *)tfaAddSecurityKeyDetails;

///
/// Initializes union class with tag state of "tfa_change_backup_phone_details".
///
/// Description of the "tfa_change_backup_phone_details" tag state: Changed the
/// backup phone for two-step verification.
///
/// @param tfaChangeBackupPhoneDetails Changed the backup phone for two-step
/// verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaChangeBackupPhoneDetails:(DBTEAMLOGTfaChangeBackupPhoneDetails *)tfaChangeBackupPhoneDetails;

///
/// Initializes union class with tag state of "tfa_change_status_details".
///
/// Description of the "tfa_change_status_details" tag state: Enabled, disabled
/// or changed the configuration for two-step verification.
///
/// @param tfaChangeStatusDetails Enabled, disabled or changed the configuration
/// for two-step verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaChangeStatusDetails:(DBTEAMLOGTfaChangeStatusDetails *)tfaChangeStatusDetails;

///
/// Initializes union class with tag state of "tfa_remove_backup_phone_details".
///
/// Description of the "tfa_remove_backup_phone_details" tag state: Removed the
/// backup phone for two-step verification.
///
/// @param tfaRemoveBackupPhoneDetails Removed the backup phone for two-step
/// verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaRemoveBackupPhoneDetails:(DBTEAMLOGTfaRemoveBackupPhoneDetails *)tfaRemoveBackupPhoneDetails;

///
/// Initializes union class with tag state of "tfa_remove_security_key_details".
///
/// Description of the "tfa_remove_security_key_details" tag state: Removed a
/// security key for two-step verification.
///
/// @param tfaRemoveSecurityKeyDetails Removed a security key for two-step
/// verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaRemoveSecurityKeyDetails:(DBTEAMLOGTfaRemoveSecurityKeyDetails *)tfaRemoveSecurityKeyDetails;

///
/// Initializes union class with tag state of "tfa_reset_details".
///
/// Description of the "tfa_reset_details" tag state: Reset two-step
/// verification for team member.
///
/// @param tfaResetDetails Reset two-step verification for team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaResetDetails:(DBTEAMLOGTfaResetDetails *)tfaResetDetails;

///
/// Initializes union class with tag state of "missing_details".
///
/// Description of the "missing_details" tag state: Hints that this event was
/// returned with missing details due to an internal error.
///
/// @param missingDetails Hints that this event was returned with missing
/// details due to an internal error.
///
/// @return An initialized instance.
///
- (instancetype)initWithMissingDetails:(DBTEAMLOGMissingDetails *)missingDetails;

///
/// Initializes union class with tag state of "other".
///
/// @return An initialized instance.
///
- (instancetype)initWithOther;

- (instancetype)init NS_UNAVAILABLE;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value
/// "member_change_membership_type_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberChangeMembershipTypeDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_change_membership_type_details".
///
- (BOOL)isMemberChangeMembershipTypeDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_permanently_delete_account_contents_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberPermanentlyDeleteAccountContentsDetails` property, otherwise a
/// runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_permanently_delete_account_contents_details".
///
- (BOOL)isMemberPermanentlyDeleteAccountContentsDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_space_limits_change_status_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberSpaceLimitsChangeStatusDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_space_limits_change_status_details".
///
- (BOOL)isMemberSpaceLimitsChangeStatusDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_transfer_account_contents_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberTransferAccountContentsDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_transfer_account_contents_details".
///
- (BOOL)isMemberTransferAccountContentsDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_enabled_users_group_addition_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperEnabledUsersGroupAdditionDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_enabled_users_group_addition_details".
///
- (BOOL)isPaperEnabledUsersGroupAdditionDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_enabled_users_group_removal_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperEnabledUsersGroupRemovalDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_enabled_users_group_removal_details".
///
- (BOOL)isPaperEnabledUsersGroupRemovalDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_external_view_allow_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperExternalViewAllowDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_external_view_allow_details".
///
- (BOOL)isPaperExternalViewAllowDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_external_view_default_team_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperExternalViewDefaultTeamDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_external_view_default_team_details".
///
- (BOOL)isPaperExternalViewDefaultTeamDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_external_view_forbid_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperExternalViewForbidDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_external_view_forbid_details".
///
- (BOOL)isPaperExternalViewForbidDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_external_invite_warn_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfExternalInviteWarnDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_external_invite_warn_details".
///
- (BOOL)isSfExternalInviteWarnDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_merge_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamMergeDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "team_merge_details".
///
- (BOOL)isTeamMergeDetails;

///
/// Retrieves whether the union's current tag state has value
/// "app_link_team_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `appLinkTeamDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "app_link_team_details".
///
- (BOOL)isAppLinkTeamDetails;

///
/// Retrieves whether the union's current tag state has value
/// "app_link_user_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `appLinkUserDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "app_link_user_details".
///
- (BOOL)isAppLinkUserDetails;

///
/// Retrieves whether the union's current tag state has value
/// "app_unlink_team_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `appUnlinkTeamDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "app_unlink_team_details".
///
- (BOOL)isAppUnlinkTeamDetails;

///
/// Retrieves whether the union's current tag state has value
/// "app_unlink_user_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `appUnlinkUserDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "app_unlink_user_details".
///
- (BOOL)isAppUnlinkUserDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_change_ip_desktop_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceChangeIpDesktopDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_change_ip_desktop_details".
///
- (BOOL)isDeviceChangeIpDesktopDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_change_ip_mobile_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceChangeIpMobileDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_change_ip_mobile_details".
///
- (BOOL)isDeviceChangeIpMobileDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_change_ip_web_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceChangeIpWebDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "device_change_ip_web_details".
///
- (BOOL)isDeviceChangeIpWebDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_delete_on_unlink_fail_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceDeleteOnUnlinkFailDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_delete_on_unlink_fail_details".
///
- (BOOL)isDeviceDeleteOnUnlinkFailDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_delete_on_unlink_success_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceDeleteOnUnlinkSuccessDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_delete_on_unlink_success_details".
///
- (BOOL)isDeviceDeleteOnUnlinkSuccessDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_link_fail_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceLinkFailDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "device_link_fail_details".
///
- (BOOL)isDeviceLinkFailDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_link_success_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceLinkSuccessDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "device_link_success_details".
///
- (BOOL)isDeviceLinkSuccessDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_management_disabled_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceManagementDisabledDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_management_disabled_details".
///
- (BOOL)isDeviceManagementDisabledDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_management_enabled_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceManagementEnabledDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_management_enabled_details".
///
- (BOOL)isDeviceManagementEnabledDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_unlink_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceUnlinkDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "device_unlink_details".
///
- (BOOL)isDeviceUnlinkDetails;

///
/// Retrieves whether the union's current tag state has value
/// "emm_refresh_auth_token_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `emmRefreshAuthTokenDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "emm_refresh_auth_token_details".
///
- (BOOL)isEmmRefreshAuthTokenDetails;

///
/// Retrieves whether the union's current tag state has value
/// "account_capture_change_availability_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `accountCaptureChangeAvailabilityDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "account_capture_change_availability_details".
///
- (BOOL)isAccountCaptureChangeAvailabilityDetails;

///
/// Retrieves whether the union's current tag state has value
/// "account_capture_migrate_account_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `accountCaptureMigrateAccountDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "account_capture_migrate_account_details".
///
- (BOOL)isAccountCaptureMigrateAccountDetails;

///
/// Retrieves whether the union's current tag state has value
/// "account_capture_relinquish_account_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `accountCaptureRelinquishAccountDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "account_capture_relinquish_account_details".
///
- (BOOL)isAccountCaptureRelinquishAccountDetails;

///
/// Retrieves whether the union's current tag state has value
/// "disabled_domain_invites_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `disabledDomainInvitesDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "disabled_domain_invites_details".
///
- (BOOL)isDisabledDomainInvitesDetails;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_approve_request_to_join_team_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `domainInvitesApproveRequestToJoinTeamDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "domain_invites_approve_request_to_join_team_details".
///
- (BOOL)isDomainInvitesApproveRequestToJoinTeamDetails;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_decline_request_to_join_team_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `domainInvitesDeclineRequestToJoinTeamDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "domain_invites_decline_request_to_join_team_details".
///
- (BOOL)isDomainInvitesDeclineRequestToJoinTeamDetails;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_email_existing_users_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `domainInvitesEmailExistingUsersDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "domain_invites_email_existing_users_details".
///
- (BOOL)isDomainInvitesEmailExistingUsersDetails;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_request_to_join_team_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `domainInvitesRequestToJoinTeamDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "domain_invites_request_to_join_team_details".
///
- (BOOL)isDomainInvitesRequestToJoinTeamDetails;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_set_invite_new_user_pref_to_no_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `domainInvitesSetInviteNewUserPrefToNoDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "domain_invites_set_invite_new_user_pref_to_no_details".
///
- (BOOL)isDomainInvitesSetInviteNewUserPrefToNoDetails;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_set_invite_new_user_pref_to_yes_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `domainInvitesSetInviteNewUserPrefToYesDetails` property, otherwise a
/// runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "domain_invites_set_invite_new_user_pref_to_yes_details".
///
- (BOOL)isDomainInvitesSetInviteNewUserPrefToYesDetails;

///
/// Retrieves whether the union's current tag state has value
/// "domain_verification_add_domain_fail_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `domainVerificationAddDomainFailDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "domain_verification_add_domain_fail_details".
///
- (BOOL)isDomainVerificationAddDomainFailDetails;

///
/// Retrieves whether the union's current tag state has value
/// "domain_verification_add_domain_success_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `domainVerificationAddDomainSuccessDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "domain_verification_add_domain_success_details".
///
- (BOOL)isDomainVerificationAddDomainSuccessDetails;

///
/// Retrieves whether the union's current tag state has value
/// "domain_verification_remove_domain_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `domainVerificationRemoveDomainDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "domain_verification_remove_domain_details".
///
- (BOOL)isDomainVerificationRemoveDomainDetails;

///
/// Retrieves whether the union's current tag state has value
/// "enabled_domain_invites_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `enabledDomainInvitesDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "enabled_domain_invites_details".
///
- (BOOL)isEnabledDomainInvitesDetails;

///
/// Retrieves whether the union's current tag state has value
/// "create_folder_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `createFolderDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "create_folder_details".
///
- (BOOL)isCreateFolderDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_add_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileAddDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "file_add_details".
///
- (BOOL)isFileAddDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_copy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileCopyDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "file_copy_details".
///
- (BOOL)isFileCopyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_delete_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileDeleteDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_delete_details".
///
- (BOOL)isFileDeleteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_download_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileDownloadDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "file_download_details".
///
- (BOOL)isFileDownloadDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_edit_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileEditDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "file_edit_details".
///
- (BOOL)isFileEditDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_get_copy_reference_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileGetCopyReferenceDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_get_copy_reference_details".
///
- (BOOL)isFileGetCopyReferenceDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_move_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileMoveDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "file_move_details".
///
- (BOOL)isFileMoveDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_permanently_delete_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `filePermanentlyDeleteDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_permanently_delete_details".
///
- (BOOL)isFilePermanentlyDeleteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_preview_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `filePreviewDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_preview_details".
///
- (BOOL)isFilePreviewDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_rename_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRenameDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_rename_details".
///
- (BOOL)isFileRenameDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_restore_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRestoreDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_restore_details".
///
- (BOOL)isFileRestoreDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_revert_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRevertDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_revert_details".
///
- (BOOL)isFileRevertDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_rollback_changes_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRollbackChangesDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "file_rollback_changes_details".
///
- (BOOL)isFileRollbackChangesDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_save_copy_reference_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileSaveCopyReferenceDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_save_copy_reference_details".
///
- (BOOL)isFileSaveCopyReferenceDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_add_deadline_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestAddDeadlineDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_request_add_deadline_details".
///
- (BOOL)isFileRequestAddDeadlineDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_change_folder_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestChangeFolderDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_request_change_folder_details".
///
- (BOOL)isFileRequestChangeFolderDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_change_title_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestChangeTitleDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_request_change_title_details".
///
- (BOOL)isFileRequestChangeTitleDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_close_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestCloseDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "file_request_close_details".
///
- (BOOL)isFileRequestCloseDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_create_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestCreateDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "file_request_create_details".
///
- (BOOL)isFileRequestCreateDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_receive_file_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestReceiveFileDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_request_receive_file_details".
///
- (BOOL)isFileRequestReceiveFileDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_remove_deadline_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestRemoveDeadlineDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_request_remove_deadline_details".
///
- (BOOL)isFileRequestRemoveDeadlineDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_send_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestSendDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "file_request_send_details".
///
- (BOOL)isFileRequestSendDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_add_external_id_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupAddExternalIdDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "group_add_external_id_details".
///
- (BOOL)isGroupAddExternalIdDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_add_member_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupAddMemberDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "group_add_member_details".
///
- (BOOL)isGroupAddMemberDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_change_external_id_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupChangeExternalIdDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_change_external_id_details".
///
- (BOOL)isGroupChangeExternalIdDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_change_management_type_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupChangeManagementTypeDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_change_management_type_details".
///
- (BOOL)isGroupChangeManagementTypeDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_change_member_role_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupChangeMemberRoleDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_change_member_role_details".
///
- (BOOL)isGroupChangeMemberRoleDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_create_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupCreateDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_create_details".
///
- (BOOL)isGroupCreateDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_delete_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupDeleteDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_delete_details".
///
- (BOOL)isGroupDeleteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_description_updated_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupDescriptionUpdatedDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_description_updated_details".
///
- (BOOL)isGroupDescriptionUpdatedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_join_policy_updated_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupJoinPolicyUpdatedDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_join_policy_updated_details".
///
- (BOOL)isGroupJoinPolicyUpdatedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_moved_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupMovedDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_moved_details".
///
- (BOOL)isGroupMovedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_remove_external_id_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupRemoveExternalIdDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_remove_external_id_details".
///
- (BOOL)isGroupRemoveExternalIdDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_remove_member_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupRemoveMemberDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "group_remove_member_details".
///
- (BOOL)isGroupRemoveMemberDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_rename_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupRenameDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_rename_details".
///
- (BOOL)isGroupRenameDetails;

///
/// Retrieves whether the union's current tag state has value
/// "emm_login_success_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `emmLoginSuccessDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "emm_login_success_details".
///
- (BOOL)isEmmLoginSuccessDetails;

///
/// Retrieves whether the union's current tag state has value "logout_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `logoutDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "logout_details".
///
- (BOOL)isLogoutDetails;

///
/// Retrieves whether the union's current tag state has value
/// "password_login_fail_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `passwordLoginFailDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "password_login_fail_details".
///
- (BOOL)isPasswordLoginFailDetails;

///
/// Retrieves whether the union's current tag state has value
/// "password_login_success_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `passwordLoginSuccessDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "password_login_success_details".
///
- (BOOL)isPasswordLoginSuccessDetails;

///
/// Retrieves whether the union's current tag state has value
/// "reseller_support_session_end_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `resellerSupportSessionEndDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "reseller_support_session_end_details".
///
- (BOOL)isResellerSupportSessionEndDetails;

///
/// Retrieves whether the union's current tag state has value
/// "reseller_support_session_start_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `resellerSupportSessionStartDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "reseller_support_session_start_details".
///
- (BOOL)isResellerSupportSessionStartDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sign_in_as_session_end_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `signInAsSessionEndDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sign_in_as_session_end_details".
///
- (BOOL)isSignInAsSessionEndDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sign_in_as_session_start_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `signInAsSessionStartDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "sign_in_as_session_start_details".
///
- (BOOL)isSignInAsSessionStartDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sso_login_fail_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `ssoLoginFailDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sso_login_fail_details".
///
- (BOOL)isSsoLoginFailDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_add_name_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberAddNameDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "member_add_name_details".
///
- (BOOL)isMemberAddNameDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_change_email_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberChangeEmailDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "member_change_email_details".
///
- (BOOL)isMemberChangeEmailDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_change_name_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberChangeNameDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "member_change_name_details".
///
- (BOOL)isMemberChangeNameDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_change_role_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberChangeRoleDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "member_change_role_details".
///
- (BOOL)isMemberChangeRoleDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_invite_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberInviteDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "member_invite_details".
///
- (BOOL)isMemberInviteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_join_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberJoinDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_join_details".
///
- (BOOL)isMemberJoinDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_leave_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberLeaveDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_leave_details".
///
- (BOOL)isMemberLeaveDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_recover_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberRecoverDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "member_recover_details".
///
- (BOOL)isMemberRecoverDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_suggest_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberSuggestDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "member_suggest_details".
///
- (BOOL)isMemberSuggestDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_suspend_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberSuspendDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "member_suspend_details".
///
- (BOOL)isMemberSuspendDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_unsuspend_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberUnsuspendDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "member_unsuspend_details".
///
- (BOOL)isMemberUnsuspendDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_add_member_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentAddMemberDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_add_member_details".
///
- (BOOL)isPaperContentAddMemberDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_add_to_folder_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentAddToFolderDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_add_to_folder_details".
///
- (BOOL)isPaperContentAddToFolderDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_archive_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentArchiveDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_archive_details".
///
- (BOOL)isPaperContentArchiveDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_change_subscription_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentChangeSubscriptionDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_change_subscription_details".
///
- (BOOL)isPaperContentChangeSubscriptionDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_create_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentCreateDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_create_details".
///
- (BOOL)isPaperContentCreateDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_permanently_delete_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentPermanentlyDeleteDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_permanently_delete_details".
///
- (BOOL)isPaperContentPermanentlyDeleteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_remove_from_folder_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentRemoveFromFolderDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_remove_from_folder_details".
///
- (BOOL)isPaperContentRemoveFromFolderDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_remove_member_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentRemoveMemberDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_remove_member_details".
///
- (BOOL)isPaperContentRemoveMemberDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_rename_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentRenameDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_rename_details".
///
- (BOOL)isPaperContentRenameDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_restore_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperContentRestoreDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_content_restore_details".
///
- (BOOL)isPaperContentRestoreDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_add_comment_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocAddCommentDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_add_comment_details".
///
- (BOOL)isPaperDocAddCommentDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_change_member_role_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocChangeMemberRoleDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_change_member_role_details".
///
- (BOOL)isPaperDocChangeMemberRoleDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_change_sharing_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocChangeSharingPolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_change_sharing_policy_details".
///
- (BOOL)isPaperDocChangeSharingPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_deleted_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocDeletedDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_deleted_details".
///
- (BOOL)isPaperDocDeletedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_delete_comment_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocDeleteCommentDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_delete_comment_details".
///
- (BOOL)isPaperDocDeleteCommentDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_download_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocDownloadDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_download_details".
///
- (BOOL)isPaperDocDownloadDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_edit_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocEditDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_edit_details".
///
- (BOOL)isPaperDocEditDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_edit_comment_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocEditCommentDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_edit_comment_details".
///
- (BOOL)isPaperDocEditCommentDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_followed_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocFollowedDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_followed_details".
///
- (BOOL)isPaperDocFollowedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_mention_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocMentionDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_mention_details".
///
- (BOOL)isPaperDocMentionDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_request_access_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocRequestAccessDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_request_access_details".
///
- (BOOL)isPaperDocRequestAccessDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_resolve_comment_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocResolveCommentDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_resolve_comment_details".
///
- (BOOL)isPaperDocResolveCommentDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_revert_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocRevertDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_revert_details".
///
- (BOOL)isPaperDocRevertDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_slack_share_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocSlackShareDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_slack_share_details".
///
- (BOOL)isPaperDocSlackShareDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_team_invite_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocTeamInviteDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_team_invite_details".
///
- (BOOL)isPaperDocTeamInviteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_unresolve_comment_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocUnresolveCommentDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_unresolve_comment_details".
///
- (BOOL)isPaperDocUnresolveCommentDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_view_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperDocViewDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_doc_view_details".
///
- (BOOL)isPaperDocViewDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_folder_deleted_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperFolderDeletedDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_folder_deleted_details".
///
- (BOOL)isPaperFolderDeletedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_folder_followed_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperFolderFollowedDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_folder_followed_details".
///
- (BOOL)isPaperFolderFollowedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_folder_team_invite_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperFolderTeamInviteDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_folder_team_invite_details".
///
- (BOOL)isPaperFolderTeamInviteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "password_change_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `passwordChangeDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "password_change_details".
///
- (BOOL)isPasswordChangeDetails;

///
/// Retrieves whether the union's current tag state has value
/// "password_reset_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `passwordResetDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "password_reset_details".
///
- (BOOL)isPasswordResetDetails;

///
/// Retrieves whether the union's current tag state has value
/// "password_reset_all_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `passwordResetAllDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "password_reset_all_details".
///
- (BOOL)isPasswordResetAllDetails;

///
/// Retrieves whether the union's current tag state has value
/// "emm_create_exceptions_report_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `emmCreateExceptionsReportDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "emm_create_exceptions_report_details".
///
- (BOOL)isEmmCreateExceptionsReportDetails;

///
/// Retrieves whether the union's current tag state has value
/// "emm_create_usage_report_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `emmCreateUsageReportDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "emm_create_usage_report_details".
///
- (BOOL)isEmmCreateUsageReportDetails;

///
/// Retrieves whether the union's current tag state has value
/// "smart_sync_create_admin_privilege_report_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `smartSyncCreateAdminPrivilegeReportDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "smart_sync_create_admin_privilege_report_details".
///
- (BOOL)isSmartSyncCreateAdminPrivilegeReportDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_activity_create_report_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamActivityCreateReportDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "team_activity_create_report_details".
///
- (BOOL)isTeamActivityCreateReportDetails;

///
/// Retrieves whether the union's current tag state has value
/// "collection_share_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `collectionShareDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "collection_share_details".
///
- (BOOL)isCollectionShareDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_add_comment_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileAddCommentDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "file_add_comment_details".
///
- (BOOL)isFileAddCommentDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_like_comment_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileLikeCommentDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "file_like_comment_details".
///
- (BOOL)isFileLikeCommentDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_unlike_comment_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileUnlikeCommentDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "file_unlike_comment_details".
///
- (BOOL)isFileUnlikeCommentDetails;

///
/// Retrieves whether the union's current tag state has value
/// "note_acl_invite_only_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `noteAclInviteOnlyDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "note_acl_invite_only_details".
///
- (BOOL)isNoteAclInviteOnlyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "note_acl_link_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `noteAclLinkDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "note_acl_link_details".
///
- (BOOL)isNoteAclLinkDetails;

///
/// Retrieves whether the union's current tag state has value
/// "note_acl_team_link_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `noteAclTeamLinkDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "note_acl_team_link_details".
///
- (BOOL)isNoteAclTeamLinkDetails;

///
/// Retrieves whether the union's current tag state has value
/// "note_shared_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `noteSharedDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "note_shared_details".
///
- (BOOL)isNoteSharedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "note_share_receive_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `noteShareReceiveDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "note_share_receive_details".
///
- (BOOL)isNoteShareReceiveDetails;

///
/// Retrieves whether the union's current tag state has value
/// "open_note_shared_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `openNoteSharedDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "open_note_shared_details".
///
- (BOOL)isOpenNoteSharedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_add_group_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfAddGroupDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_add_group_details".
///
- (BOOL)isSfAddGroupDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_allow_non_members_to_view_shared_links_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfAllowNonMembersToViewSharedLinksDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_allow_non_members_to_view_shared_links_details".
///
- (BOOL)isSfAllowNonMembersToViewSharedLinksDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_invite_group_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfInviteGroupDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_invite_group_details".
///
- (BOOL)isSfInviteGroupDetails;

///
/// Retrieves whether the union's current tag state has value "sf_nest_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfNestDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "sf_nest_details".
///
- (BOOL)isSfNestDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_decline_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfTeamDeclineDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_team_decline_details".
///
- (BOOL)isSfTeamDeclineDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_grant_access_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfTeamGrantAccessDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_team_grant_access_details".
///
- (BOOL)isSfTeamGrantAccessDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_invite_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfTeamInviteDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_team_invite_details".
///
- (BOOL)isSfTeamInviteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_invite_change_role_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfTeamInviteChangeRoleDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_team_invite_change_role_details".
///
- (BOOL)isSfTeamInviteChangeRoleDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_join_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfTeamJoinDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_team_join_details".
///
- (BOOL)isSfTeamJoinDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_join_from_oob_link_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfTeamJoinFromOobLinkDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_team_join_from_oob_link_details".
///
- (BOOL)isSfTeamJoinFromOobLinkDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_uninvite_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sfTeamUninviteDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sf_team_uninvite_details".
///
- (BOOL)isSfTeamUninviteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_add_invitees_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentAddInviteesDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_add_invitees_details".
///
- (BOOL)isSharedContentAddInviteesDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_add_link_expiry_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentAddLinkExpiryDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_add_link_expiry_details".
///
- (BOOL)isSharedContentAddLinkExpiryDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_add_link_password_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentAddLinkPasswordDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_add_link_password_details".
///
- (BOOL)isSharedContentAddLinkPasswordDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_add_member_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentAddMemberDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_add_member_details".
///
- (BOOL)isSharedContentAddMemberDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_downloads_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentChangeDownloadsPolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_downloads_policy_details".
///
- (BOOL)isSharedContentChangeDownloadsPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_invitee_role_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentChangeInviteeRoleDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_invitee_role_details".
///
- (BOOL)isSharedContentChangeInviteeRoleDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_link_audience_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentChangeLinkAudienceDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_link_audience_details".
///
- (BOOL)isSharedContentChangeLinkAudienceDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_link_expiry_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentChangeLinkExpiryDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_link_expiry_details".
///
- (BOOL)isSharedContentChangeLinkExpiryDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_link_password_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentChangeLinkPasswordDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_link_password_details".
///
- (BOOL)isSharedContentChangeLinkPasswordDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_member_role_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentChangeMemberRoleDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_member_role_details".
///
- (BOOL)isSharedContentChangeMemberRoleDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_viewer_info_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentChangeViewerInfoPolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_viewer_info_policy_details".
///
- (BOOL)isSharedContentChangeViewerInfoPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_claim_invitation_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentClaimInvitationDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_claim_invitation_details".
///
- (BOOL)isSharedContentClaimInvitationDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_copy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentCopyDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_copy_details".
///
- (BOOL)isSharedContentCopyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_download_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentDownloadDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_download_details".
///
- (BOOL)isSharedContentDownloadDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_relinquish_membership_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentRelinquishMembershipDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_relinquish_membership_details".
///
- (BOOL)isSharedContentRelinquishMembershipDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_remove_invitee_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentRemoveInviteeDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_remove_invitee_details".
///
- (BOOL)isSharedContentRemoveInviteeDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_remove_link_expiry_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentRemoveLinkExpiryDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_remove_link_expiry_details".
///
- (BOOL)isSharedContentRemoveLinkExpiryDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_remove_link_password_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentRemoveLinkPasswordDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_remove_link_password_details".
///
- (BOOL)isSharedContentRemoveLinkPasswordDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_remove_member_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentRemoveMemberDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_remove_member_details".
///
- (BOOL)isSharedContentRemoveMemberDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_request_access_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentRequestAccessDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_request_access_details".
///
- (BOOL)isSharedContentRequestAccessDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_unshare_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentUnshareDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_unshare_details".
///
- (BOOL)isSharedContentUnshareDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_view_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedContentViewDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_content_view_details".
///
- (BOOL)isSharedContentViewDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_change_confidentiality_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedFolderChangeConfidentialityDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_folder_change_confidentiality_details".
///
- (BOOL)isSharedFolderChangeConfidentialityDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_change_link_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedFolderChangeLinkPolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_folder_change_link_policy_details".
///
- (BOOL)isSharedFolderChangeLinkPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_change_member_management_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedFolderChangeMemberManagementPolicyDetails` property, otherwise a
/// runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_folder_change_member_management_policy_details".
///
- (BOOL)isSharedFolderChangeMemberManagementPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_change_member_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedFolderChangeMemberPolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_folder_change_member_policy_details".
///
- (BOOL)isSharedFolderChangeMemberPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_create_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedFolderCreateDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_folder_create_details".
///
- (BOOL)isSharedFolderCreateDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_mount_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedFolderMountDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_folder_mount_details".
///
- (BOOL)isSharedFolderMountDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_transfer_ownership_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedFolderTransferOwnershipDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_folder_transfer_ownership_details".
///
- (BOOL)isSharedFolderTransferOwnershipDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_unmount_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedFolderUnmountDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_folder_unmount_details".
///
- (BOOL)isSharedFolderUnmountDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shared_note_opened_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharedNoteOpenedDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shared_note_opened_details".
///
- (BOOL)isSharedNoteOpenedDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_app_create_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelAppCreateDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_app_create_details".
///
- (BOOL)isShmodelAppCreateDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_create_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelCreateDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_create_details".
///
- (BOOL)isShmodelCreateDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_disable_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelDisableDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_disable_details".
///
- (BOOL)isShmodelDisableDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_fb_share_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelFbShareDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_fb_share_details".
///
- (BOOL)isShmodelFbShareDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_group_share_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelGroupShareDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_group_share_details".
///
- (BOOL)isShmodelGroupShareDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_remove_expiration_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelRemoveExpirationDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_remove_expiration_details".
///
- (BOOL)isShmodelRemoveExpirationDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_set_expiration_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelSetExpirationDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_set_expiration_details".
///
- (BOOL)isShmodelSetExpirationDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_team_copy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelTeamCopyDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_team_copy_details".
///
- (BOOL)isShmodelTeamCopyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_team_download_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelTeamDownloadDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_team_download_details".
///
- (BOOL)isShmodelTeamDownloadDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_team_share_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelTeamShareDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_team_share_details".
///
- (BOOL)isShmodelTeamShareDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_team_view_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelTeamViewDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_team_view_details".
///
- (BOOL)isShmodelTeamViewDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_visibility_password_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelVisibilityPasswordDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_visibility_password_details".
///
- (BOOL)isShmodelVisibilityPasswordDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_visibility_public_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelVisibilityPublicDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_visibility_public_details".
///
- (BOOL)isShmodelVisibilityPublicDetails;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_visibility_team_only_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `shmodelVisibilityTeamOnlyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "shmodel_visibility_team_only_details".
///
- (BOOL)isShmodelVisibilityTeamOnlyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "remove_logout_url_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `removeLogoutUrlDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "remove_logout_url_details".
///
- (BOOL)isRemoveLogoutUrlDetails;

///
/// Retrieves whether the union's current tag state has value
/// "remove_sso_url_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `removeSsoUrlDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "remove_sso_url_details".
///
- (BOOL)isRemoveSsoUrlDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sso_change_cert_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `ssoChangeCertDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sso_change_cert_details".
///
- (BOOL)isSsoChangeCertDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sso_change_login_url_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `ssoChangeLoginUrlDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sso_change_login_url_details".
///
- (BOOL)isSsoChangeLoginUrlDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sso_change_logout_url_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `ssoChangeLogoutUrlDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sso_change_logout_url_details".
///
- (BOOL)isSsoChangeLogoutUrlDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sso_change_saml_identity_mode_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `ssoChangeSamlIdentityModeDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "sso_change_saml_identity_mode_details".
///
- (BOOL)isSsoChangeSamlIdentityModeDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_change_status_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamFolderChangeStatusDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "team_folder_change_status_details".
///
- (BOOL)isTeamFolderChangeStatusDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_create_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamFolderCreateDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "team_folder_create_details".
///
- (BOOL)isTeamFolderCreateDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_downgrade_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamFolderDowngradeDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "team_folder_downgrade_details".
///
- (BOOL)isTeamFolderDowngradeDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_permanently_delete_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamFolderPermanentlyDeleteDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "team_folder_permanently_delete_details".
///
- (BOOL)isTeamFolderPermanentlyDeleteDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_rename_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamFolderRenameDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "team_folder_rename_details".
///
- (BOOL)isTeamFolderRenameDetails;

///
/// Retrieves whether the union's current tag state has value
/// "account_capture_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `accountCaptureChangePolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "account_capture_change_policy_details".
///
- (BOOL)isAccountCaptureChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "allow_download_disabled_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `allowDownloadDisabledDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "allow_download_disabled_details".
///
- (BOOL)isAllowDownloadDisabledDetails;

///
/// Retrieves whether the union's current tag state has value
/// "allow_download_enabled_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `allowDownloadEnabledDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "allow_download_enabled_details".
///
- (BOOL)isAllowDownloadEnabledDetails;

///
/// Retrieves whether the union's current tag state has value
/// "data_placement_restriction_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `dataPlacementRestrictionChangePolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "data_placement_restriction_change_policy_details".
///
- (BOOL)isDataPlacementRestrictionChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "data_placement_restriction_satisfy_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `dataPlacementRestrictionSatisfyPolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "data_placement_restriction_satisfy_policy_details".
///
- (BOOL)isDataPlacementRestrictionSatisfyPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_approvals_change_desktop_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceApprovalsChangeDesktopPolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_approvals_change_desktop_policy_details".
///
- (BOOL)isDeviceApprovalsChangeDesktopPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_approvals_change_mobile_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceApprovalsChangeMobilePolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_approvals_change_mobile_policy_details".
///
- (BOOL)isDeviceApprovalsChangeMobilePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_approvals_change_overage_action_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceApprovalsChangeOverageActionDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_approvals_change_overage_action_details".
///
- (BOOL)isDeviceApprovalsChangeOverageActionDetails;

///
/// Retrieves whether the union's current tag state has value
/// "device_approvals_change_unlink_action_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `deviceApprovalsChangeUnlinkActionDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "device_approvals_change_unlink_action_details".
///
- (BOOL)isDeviceApprovalsChangeUnlinkActionDetails;

///
/// Retrieves whether the union's current tag state has value
/// "emm_add_exception_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `emmAddExceptionDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "emm_add_exception_details".
///
- (BOOL)isEmmAddExceptionDetails;

///
/// Retrieves whether the union's current tag state has value
/// "emm_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `emmChangePolicyDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "emm_change_policy_details".
///
- (BOOL)isEmmChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "emm_remove_exception_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `emmRemoveExceptionDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "emm_remove_exception_details".
///
- (BOOL)isEmmRemoveExceptionDetails;

///
/// Retrieves whether the union's current tag state has value
/// "extended_version_history_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `extendedVersionHistoryChangePolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "extended_version_history_change_policy_details".
///
- (BOOL)isExtendedVersionHistoryChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_comments_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileCommentsChangePolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_comments_change_policy_details".
///
- (BOOL)isFileCommentsChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_requests_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestsChangePolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_requests_change_policy_details".
///
- (BOOL)isFileRequestsChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_requests_emails_enabled_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestsEmailsEnabledDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_requests_emails_enabled_details".
///
- (BOOL)isFileRequestsEmailsEnabledDetails;

///
/// Retrieves whether the union's current tag state has value
/// "file_requests_emails_restricted_to_team_only_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `fileRequestsEmailsRestrictedToTeamOnlyDetails` property, otherwise a
/// runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "file_requests_emails_restricted_to_team_only_details".
///
- (BOOL)isFileRequestsEmailsRestrictedToTeamOnlyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "google_sso_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `googleSsoChangePolicyDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "google_sso_change_policy_details".
///
- (BOOL)isGoogleSsoChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "group_user_management_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `groupUserManagementChangePolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "group_user_management_change_policy_details".
///
- (BOOL)isGroupUserManagementChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_requests_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberRequestsChangePolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_requests_change_policy_details".
///
- (BOOL)isMemberRequestsChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_space_limits_add_exception_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberSpaceLimitsAddExceptionDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_space_limits_add_exception_details".
///
- (BOOL)isMemberSpaceLimitsAddExceptionDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_space_limits_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberSpaceLimitsChangePolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_space_limits_change_policy_details".
///
- (BOOL)isMemberSpaceLimitsChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_space_limits_remove_exception_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberSpaceLimitsRemoveExceptionDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_space_limits_remove_exception_details".
///
- (BOOL)isMemberSpaceLimitsRemoveExceptionDetails;

///
/// Retrieves whether the union's current tag state has value
/// "member_suggestions_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `memberSuggestionsChangePolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "member_suggestions_change_policy_details".
///
- (BOOL)isMemberSuggestionsChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "microsoft_office_addin_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `microsoftOfficeAddinChangePolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "microsoft_office_addin_change_policy_details".
///
- (BOOL)isMicrosoftOfficeAddinChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "network_control_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `networkControlChangePolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "network_control_change_policy_details".
///
- (BOOL)isNetworkControlChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_change_deployment_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperChangeDeploymentPolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_change_deployment_policy_details".
///
- (BOOL)isPaperChangeDeploymentPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_change_member_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperChangeMemberPolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_change_member_policy_details".
///
- (BOOL)isPaperChangeMemberPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "paper_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `paperChangePolicyDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "paper_change_policy_details".
///
- (BOOL)isPaperChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "permanent_delete_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `permanentDeleteChangePolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "permanent_delete_change_policy_details".
///
- (BOOL)isPermanentDeleteChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sharing_change_folder_join_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharingChangeFolderJoinPolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "sharing_change_folder_join_policy_details".
///
- (BOOL)isSharingChangeFolderJoinPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sharing_change_link_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharingChangeLinkPolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "sharing_change_link_policy_details".
///
- (BOOL)isSharingChangeLinkPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sharing_change_member_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `sharingChangeMemberPolicyDetails` property, otherwise a runtime exception
/// will be thrown.
///
/// @return Whether the union's current tag state has value
/// "sharing_change_member_policy_details".
///
- (BOOL)isSharingChangeMemberPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "smart_sync_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `smartSyncChangePolicyDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "smart_sync_change_policy_details".
///
- (BOOL)isSmartSyncChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "sso_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `ssoChangePolicyDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "sso_change_policy_details".
///
- (BOOL)isSsoChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `tfaChangePolicyDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "tfa_change_policy_details".
///
- (BOOL)isTfaChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "two_account_change_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `twoAccountChangePolicyDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "two_account_change_policy_details".
///
- (BOOL)isTwoAccountChangePolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "web_sessions_change_fixed_length_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `webSessionsChangeFixedLengthPolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "web_sessions_change_fixed_length_policy_details".
///
- (BOOL)isWebSessionsChangeFixedLengthPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "web_sessions_change_idle_length_policy_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `webSessionsChangeIdleLengthPolicyDetails` property, otherwise a runtime
/// exception will be thrown.
///
/// @return Whether the union's current tag state has value
/// "web_sessions_change_idle_length_policy_details".
///
- (BOOL)isWebSessionsChangeIdleLengthPolicyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_profile_add_logo_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamProfileAddLogoDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "team_profile_add_logo_details".
///
- (BOOL)isTeamProfileAddLogoDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_profile_change_logo_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamProfileChangeLogoDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "team_profile_change_logo_details".
///
- (BOOL)isTeamProfileChangeLogoDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_profile_change_name_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamProfileChangeNameDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "team_profile_change_name_details".
///
- (BOOL)isTeamProfileChangeNameDetails;

///
/// Retrieves whether the union's current tag state has value
/// "team_profile_remove_logo_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `teamProfileRemoveLogoDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "team_profile_remove_logo_details".
///
- (BOOL)isTeamProfileRemoveLogoDetails;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_add_backup_phone_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `tfaAddBackupPhoneDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "tfa_add_backup_phone_details".
///
- (BOOL)isTfaAddBackupPhoneDetails;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_add_security_key_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `tfaAddSecurityKeyDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "tfa_add_security_key_details".
///
- (BOOL)isTfaAddSecurityKeyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_change_backup_phone_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `tfaChangeBackupPhoneDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "tfa_change_backup_phone_details".
///
- (BOOL)isTfaChangeBackupPhoneDetails;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_change_status_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `tfaChangeStatusDetails` property, otherwise a runtime exception will be
/// thrown.
///
/// @return Whether the union's current tag state has value
/// "tfa_change_status_details".
///
- (BOOL)isTfaChangeStatusDetails;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_remove_backup_phone_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `tfaRemoveBackupPhoneDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "tfa_remove_backup_phone_details".
///
- (BOOL)isTfaRemoveBackupPhoneDetails;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_remove_security_key_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `tfaRemoveSecurityKeyDetails` property, otherwise a runtime exception will
/// be thrown.
///
/// @return Whether the union's current tag state has value
/// "tfa_remove_security_key_details".
///
- (BOOL)isTfaRemoveSecurityKeyDetails;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_reset_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `tfaResetDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "tfa_reset_details".
///
- (BOOL)isTfaResetDetails;

///
/// Retrieves whether the union's current tag state has value "missing_details".
///
/// @note Call this method and ensure it returns true before accessing the
/// `missingDetails` property, otherwise a runtime exception will be thrown.
///
/// @return Whether the union's current tag state has value "missing_details".
///
- (BOOL)isMissingDetails;

///
/// Retrieves whether the union's current tag state has value "other".
///
/// @return Whether the union's current tag state has value "other".
///
- (BOOL)isOther;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString *)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `DBTEAMLOGEventDetails` union.
///
@interface DBTEAMLOGEventDetailsSerializer : NSObject

///
/// Serializes `DBTEAMLOGEventDetails` instances.
///
/// @param instance An instance of the `DBTEAMLOGEventDetails` API object.
///
/// @return A json-compatible dictionary representation of the
/// `DBTEAMLOGEventDetails` API object.
///
+ (NSDictionary *)serialize:(DBTEAMLOGEventDetails *)instance;

///
/// Deserializes `DBTEAMLOGEventDetails` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBTEAMLOGEventDetails` API object.
///
/// @return An instantiation of the `DBTEAMLOGEventDetails` object.
///
+ (DBTEAMLOGEventDetails *)deserialize:(NSDictionary *)dict;

@end

NS_ASSUME_NONNULL_END
