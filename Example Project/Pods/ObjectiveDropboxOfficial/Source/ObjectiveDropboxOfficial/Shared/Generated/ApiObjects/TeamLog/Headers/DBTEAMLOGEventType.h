///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBSerializableProtocol.h"

@class DBTEAMLOGEventType;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - API Object

///
/// The `EventType` union.
///
/// The type of the event.
///
/// This class implements the `DBSerializable` protocol (serialize and
/// deserialize instance methods), which is required for all Obj-C SDK API route
/// objects.
///
@interface DBTEAMLOGEventType : NSObject <DBSerializable, NSCopying>

#pragma mark - Instance fields

/// The `DBTEAMLOGEventTypeTag` enum type represents the possible tag states
/// with which the `DBTEAMLOGEventType` union can exist.
typedef NS_ENUM(NSInteger, DBTEAMLOGEventTypeTag) {
  /// Changed the membership type (limited vs full) for team member.
  DBTEAMLOGEventTypeMemberChangeMembershipType,

  /// Permanently deleted contents of a removed team member account.
  DBTEAMLOGEventTypeMemberPermanentlyDeleteAccountContents,

  /// Changed the status with respect to whether the team member is under or
  /// over storage quota specified by policy.
  DBTEAMLOGEventTypeMemberSpaceLimitsChangeStatus,

  /// Transferred contents of a removed team member account to another member.
  DBTEAMLOGEventTypeMemberTransferAccountContents,

  /// Users added to Paper enabled users list.
  DBTEAMLOGEventTypePaperEnabledUsersGroupAddition,

  /// Users removed from Paper enabled users list.
  DBTEAMLOGEventTypePaperEnabledUsersGroupRemoval,

  /// Paper external sharing policy changed: anyone. This event is deprecated
  /// and will not be logged going forward as the associated product
  /// functionality no longer exists.
  DBTEAMLOGEventTypePaperExternalViewAllow,

  /// Paper external sharing policy changed: default team. This event is
  /// deprecated and will not be logged going forward as the associated
  /// product functionality no longer exists.
  DBTEAMLOGEventTypePaperExternalViewDefaultTeam,

  /// Paper external sharing policy changed: team-only. This event is
  /// deprecated and will not be logged going forward as the associated
  /// product functionality no longer exists.
  DBTEAMLOGEventTypePaperExternalViewForbid,

  /// Admin settings: team members see a warning before sharing folders
  /// outside the team (DEPRECATED FEATURE). This event is deprecated and will
  /// not be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypeSfExternalInviteWarn,

  /// Merged the team into another team.
  DBTEAMLOGEventTypeTeamMerge,

  /// Linked an app for team.
  DBTEAMLOGEventTypeAppLinkTeam,

  /// Linked an app for team member.
  DBTEAMLOGEventTypeAppLinkUser,

  /// Unlinked an app for team.
  DBTEAMLOGEventTypeAppUnlinkTeam,

  /// Unlinked an app for team member.
  DBTEAMLOGEventTypeAppUnlinkUser,

  /// IP address associated with active desktop session changed.
  DBTEAMLOGEventTypeDeviceChangeIpDesktop,

  /// IP address associated with active mobile session changed.
  DBTEAMLOGEventTypeDeviceChangeIpMobile,

  /// IP address associated with active Web session changed.
  DBTEAMLOGEventTypeDeviceChangeIpWeb,

  /// Failed to delete all files from an unlinked device.
  DBTEAMLOGEventTypeDeviceDeleteOnUnlinkFail,

  /// Deleted all files from an unlinked device.
  DBTEAMLOGEventTypeDeviceDeleteOnUnlinkSuccess,

  /// Failed to link a device.
  DBTEAMLOGEventTypeDeviceLinkFail,

  /// Linked a device.
  DBTEAMLOGEventTypeDeviceLinkSuccess,

  /// Disable Device Management. This event is deprecated and will not be
  /// logged going forward as the associated product functionality no longer
  /// exists.
  DBTEAMLOGEventTypeDeviceManagementDisabled,

  /// Enable Device Management. This event is deprecated and will not be
  /// logged going forward as the associated product functionality no longer
  /// exists.
  DBTEAMLOGEventTypeDeviceManagementEnabled,

  /// Disconnected a device.
  DBTEAMLOGEventTypeDeviceUnlink,

  /// Refreshed the auth token used for setting up enterprise mobility
  /// management.
  DBTEAMLOGEventTypeEmmRefreshAuthToken,

  /// Granted or revoked the option to enable account capture on domains
  /// belonging to the team.
  DBTEAMLOGEventTypeAccountCaptureChangeAvailability,

  /// Account captured user migrated their account to the team.
  DBTEAMLOGEventTypeAccountCaptureMigrateAccount,

  /// Account captured user relinquished their account by changing the email
  /// address associated with it.
  DBTEAMLOGEventTypeAccountCaptureRelinquishAccount,

  /// Disabled domain invites. This event is deprecated and will not be logged
  /// going forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypeDisabledDomainInvites,

  /// Approved a member's request to join the team.
  DBTEAMLOGEventTypeDomainInvitesApproveRequestToJoinTeam,

  /// Declined a user's request to join the team.
  DBTEAMLOGEventTypeDomainInvitesDeclineRequestToJoinTeam,

  /// Sent domain invites to existing domain accounts.
  DBTEAMLOGEventTypeDomainInvitesEmailExistingUsers,

  /// Asked to join the team.
  DBTEAMLOGEventTypeDomainInvitesRequestToJoinTeam,

  /// Turned off u201cAutomatically invite new usersu201d. This event is
  /// deprecated and will not be logged going forward as the associated
  /// product functionality no longer exists.
  DBTEAMLOGEventTypeDomainInvitesSetInviteNewUserPrefToNo,

  /// Turned on u201cAutomatically invite new usersu201d. This event is
  /// deprecated and will not be logged going forward as the associated
  /// product functionality no longer exists.
  DBTEAMLOGEventTypeDomainInvitesSetInviteNewUserPrefToYes,

  /// Failed to verify a domain belonging to the team.
  DBTEAMLOGEventTypeDomainVerificationAddDomainFail,

  /// Verified a domain belonging to the team.
  DBTEAMLOGEventTypeDomainVerificationAddDomainSuccess,

  /// Removed a domain from the list of verified domains belonging to the
  /// team.
  DBTEAMLOGEventTypeDomainVerificationRemoveDomain,

  /// Enabled domain invites. This event is deprecated and will not be logged
  /// going forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypeEnabledDomainInvites,

  /// Created folders. This event is deprecated and will not be logged going
  /// forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypeCreateFolder,

  /// Added files and/or folders.
  DBTEAMLOGEventTypeFileAdd,

  /// Copied files and/or folders.
  DBTEAMLOGEventTypeFileCopy,

  /// Deleted files and/or folders.
  DBTEAMLOGEventTypeFileDelete,

  /// Downloaded files and/or folders.
  DBTEAMLOGEventTypeFileDownload,

  /// Edited files.
  DBTEAMLOGEventTypeFileEdit,

  /// Create a copy reference to a file or folder.
  DBTEAMLOGEventTypeFileGetCopyReference,

  /// Moved files and/or folders.
  DBTEAMLOGEventTypeFileMove,

  /// Permanently deleted files and/or folders.
  DBTEAMLOGEventTypeFilePermanentlyDelete,

  /// Previewed files and/or folders.
  DBTEAMLOGEventTypeFilePreview,

  /// Renamed files and/or folders.
  DBTEAMLOGEventTypeFileRename,

  /// Restored deleted files and/or folders.
  DBTEAMLOGEventTypeFileRestore,

  /// Reverted files to a previous version.
  DBTEAMLOGEventTypeFileRevert,

  /// Rolled back file change location changes.
  DBTEAMLOGEventTypeFileRollbackChanges,

  /// Save a file or folder using a copy reference.
  DBTEAMLOGEventTypeFileSaveCopyReference,

  /// Added a deadline to a file request.
  DBTEAMLOGEventTypeFileRequestAddDeadline,

  /// Changed the file request folder.
  DBTEAMLOGEventTypeFileRequestChangeFolder,

  /// Change the file request title.
  DBTEAMLOGEventTypeFileRequestChangeTitle,

  /// Closed a file request.
  DBTEAMLOGEventTypeFileRequestClose,

  /// Created a file request.
  DBTEAMLOGEventTypeFileRequestCreate,

  /// Received files for a file request.
  DBTEAMLOGEventTypeFileRequestReceiveFile,

  /// Removed the file request deadline.
  DBTEAMLOGEventTypeFileRequestRemoveDeadline,

  /// Sent file request to users via email.
  DBTEAMLOGEventTypeFileRequestSend,

  /// Added an external ID for group.
  DBTEAMLOGEventTypeGroupAddExternalId,

  /// Added team members to a group.
  DBTEAMLOGEventTypeGroupAddMember,

  /// Changed the external ID for group.
  DBTEAMLOGEventTypeGroupChangeExternalId,

  /// Changed group management type.
  DBTEAMLOGEventTypeGroupChangeManagementType,

  /// Changed the manager permissions belonging to a group member.
  DBTEAMLOGEventTypeGroupChangeMemberRole,

  /// Created a group.
  DBTEAMLOGEventTypeGroupCreate,

  /// Deleted a group.
  DBTEAMLOGEventTypeGroupDelete,

  /// Updated a group.
  DBTEAMLOGEventTypeGroupDescriptionUpdated,

  /// Updated a group join policy.
  DBTEAMLOGEventTypeGroupJoinPolicyUpdated,

  /// Moved a group. This event is deprecated and will not be logged going
  /// forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypeGroupMoved,

  /// Removed the external ID for group.
  DBTEAMLOGEventTypeGroupRemoveExternalId,

  /// Removed team members from a group.
  DBTEAMLOGEventTypeGroupRemoveMember,

  /// Renamed a group.
  DBTEAMLOGEventTypeGroupRename,

  /// Signed in using the Dropbox EMM app.
  DBTEAMLOGEventTypeEmmLoginSuccess,

  /// Signed out.
  DBTEAMLOGEventTypeLogout,

  /// Failed to sign in using a password.
  DBTEAMLOGEventTypePasswordLoginFail,

  /// Signed in using a password.
  DBTEAMLOGEventTypePasswordLoginSuccess,

  /// Ended reseller support session.
  DBTEAMLOGEventTypeResellerSupportSessionEnd,

  /// Started reseller support session.
  DBTEAMLOGEventTypeResellerSupportSessionStart,

  /// Ended admin sign-in-as session.
  DBTEAMLOGEventTypeSignInAsSessionEnd,

  /// Started admin sign-in-as session.
  DBTEAMLOGEventTypeSignInAsSessionStart,

  /// Failed to sign in using SSO.
  DBTEAMLOGEventTypeSsoLoginFail,

  /// Set team member name when joining team.
  DBTEAMLOGEventTypeMemberAddName,

  /// Changed team member email address.
  DBTEAMLOGEventTypeMemberChangeEmail,

  /// Changed team member name.
  DBTEAMLOGEventTypeMemberChangeName,

  /// Change the admin permissions belonging to team member.
  DBTEAMLOGEventTypeMemberChangeRole,

  /// Invited a user to join the team.
  DBTEAMLOGEventTypeMemberInvite,

  /// Joined the team.
  DBTEAMLOGEventTypeMemberJoin,

  /// Removed a team member.
  DBTEAMLOGEventTypeMemberLeave,

  /// Recovered a removed member.
  DBTEAMLOGEventTypeMemberRecover,

  /// Suggested a new team member to be added to the team.
  DBTEAMLOGEventTypeMemberSuggest,

  /// Suspended a team member.
  DBTEAMLOGEventTypeMemberSuspend,

  /// Unsuspended a team member.
  DBTEAMLOGEventTypeMemberUnsuspend,

  /// Added users to the membership of a Paper doc or folder.
  DBTEAMLOGEventTypePaperContentAddMember,

  /// Added Paper doc or folder to a folder.
  DBTEAMLOGEventTypePaperContentAddToFolder,

  /// Archived Paper doc or folder.
  DBTEAMLOGEventTypePaperContentArchive,

  /// Followed or unfollowed a Paper doc or folder.
  DBTEAMLOGEventTypePaperContentChangeSubscription,

  /// Created a Paper doc or folder.
  DBTEAMLOGEventTypePaperContentCreate,

  /// Permanently deleted a Paper doc or folder.
  DBTEAMLOGEventTypePaperContentPermanentlyDelete,

  /// Removed Paper doc or folder from a folder.
  DBTEAMLOGEventTypePaperContentRemoveFromFolder,

  /// Removed a user from the membership of a Paper doc or folder.
  DBTEAMLOGEventTypePaperContentRemoveMember,

  /// Renamed Paper doc or folder.
  DBTEAMLOGEventTypePaperContentRename,

  /// Restored an archived Paper doc or folder.
  DBTEAMLOGEventTypePaperContentRestore,

  /// Added a Paper doc comment.
  DBTEAMLOGEventTypePaperDocAddComment,

  /// Changed the access type of a Paper doc member.
  DBTEAMLOGEventTypePaperDocChangeMemberRole,

  /// Changed the sharing policy for Paper doc.
  DBTEAMLOGEventTypePaperDocChangeSharingPolicy,

  /// Paper doc archived. This event is deprecated and will not be logged
  /// going forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypePaperDocDeleted,

  /// Deleted a Paper doc comment.
  DBTEAMLOGEventTypePaperDocDeleteComment,

  /// Downloaded a Paper doc in a particular output format.
  DBTEAMLOGEventTypePaperDocDownload,

  /// Edited a Paper doc.
  DBTEAMLOGEventTypePaperDocEdit,

  /// Edited a Paper doc comment.
  DBTEAMLOGEventTypePaperDocEditComment,

  /// Followed a Paper doc. This event is replaced by
  /// paper_content_change_subscription and will not be logged going forward.
  DBTEAMLOGEventTypePaperDocFollowed,

  /// Mentioned a member in a Paper doc.
  DBTEAMLOGEventTypePaperDocMention,

  /// Requested to be a member on a Paper doc.
  DBTEAMLOGEventTypePaperDocRequestAccess,

  /// Paper doc comment resolved.
  DBTEAMLOGEventTypePaperDocResolveComment,

  /// Restored a Paper doc to previous revision.
  DBTEAMLOGEventTypePaperDocRevert,

  /// Paper doc link shared via slack.
  DBTEAMLOGEventTypePaperDocSlackShare,

  /// Paper doc shared with team member. This event is deprecated and will not
  /// be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypePaperDocTeamInvite,

  /// Unresolved a Paper doc comment.
  DBTEAMLOGEventTypePaperDocUnresolveComment,

  /// Viewed Paper doc.
  DBTEAMLOGEventTypePaperDocView,

  /// Paper folder archived. This event is deprecated and will not be logged
  /// going forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypePaperFolderDeleted,

  /// Followed a Paper folder. This event is replaced by
  /// paper_content_change_subscription and will not be logged going forward.
  DBTEAMLOGEventTypePaperFolderFollowed,

  /// Paper folder shared with team member. This event is deprecated and will
  /// not be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypePaperFolderTeamInvite,

  /// Changed password.
  DBTEAMLOGEventTypePasswordChange,

  /// Reset password.
  DBTEAMLOGEventTypePasswordReset,

  /// Reset all team member passwords.
  DBTEAMLOGEventTypePasswordResetAll,

  /// EMM excluded users report created.
  DBTEAMLOGEventTypeEmmCreateExceptionsReport,

  /// EMM mobile app usage report created.
  DBTEAMLOGEventTypeEmmCreateUsageReport,

  /// Smart Sync non-admin devices report created.
  DBTEAMLOGEventTypeSmartSyncCreateAdminPrivilegeReport,

  /// Created a team activity report.
  DBTEAMLOGEventTypeTeamActivityCreateReport,

  /// Shared an album.
  DBTEAMLOGEventTypeCollectionShare,

  /// Added a file comment.
  DBTEAMLOGEventTypeFileAddComment,

  /// Liked a file comment. This event is deprecated and will not be logged
  /// going forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypeFileLikeComment,

  /// Unliked a file comment. This event is deprecated and will not be logged
  /// going forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypeFileUnlikeComment,

  /// Changed a Paper document to be invite-only. This event is deprecated and
  /// will not be logged going forward as the associated product functionality
  /// no longer exists.
  DBTEAMLOGEventTypeNoteAclInviteOnly,

  /// Changed a Paper document to be link accessible. This event is deprecated
  /// and will not be logged going forward as the associated product
  /// functionality no longer exists.
  DBTEAMLOGEventTypeNoteAclLink,

  /// Changed a Paper document to be link accessible for the team. This event
  /// is deprecated and will not be logged going forward as the associated
  /// product functionality no longer exists.
  DBTEAMLOGEventTypeNoteAclTeamLink,

  /// Shared a Paper doc. This event is deprecated and will not be logged
  /// going forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypeNoteShared,

  /// Shared Paper document received. This event is deprecated and will not be
  /// logged going forward as the associated product functionality no longer
  /// exists.
  DBTEAMLOGEventTypeNoteShareReceive,

  /// Opened a shared Paper doc. This event is deprecated and will not be
  /// logged going forward as the associated product functionality no longer
  /// exists.
  DBTEAMLOGEventTypeOpenNoteShared,

  /// Added the team to a shared folder.
  DBTEAMLOGEventTypeSfAddGroup,

  /// Allowed non collaborators to view links to files in a shared folder.
  /// This event is deprecated and will not be logged going forward as the
  /// associated product functionality no longer exists.
  DBTEAMLOGEventTypeSfAllowNonMembersToViewSharedLinks,

  /// Invited a group to a shared folder. This event is deprecated and will
  /// not be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypeSfInviteGroup,

  /// Changed parent of shared folder.
  DBTEAMLOGEventTypeSfNest,

  /// Declined a team member's invitation to a shared folder.
  DBTEAMLOGEventTypeSfTeamDecline,

  /// Granted access to a shared folder. This event is deprecated and will not
  /// be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypeSfTeamGrantAccess,

  /// Invited team members to a shared folder. This event is deprecated and
  /// will not be logged going forward as the associated product functionality
  /// no longer exists.
  DBTEAMLOGEventTypeSfTeamInvite,

  /// Changed a team member's role in a shared folder. This event is
  /// deprecated and will not be logged going forward as the associated
  /// product functionality no longer exists.
  DBTEAMLOGEventTypeSfTeamInviteChangeRole,

  /// Joined a team member's shared folder. This event is deprecated and will
  /// not be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypeSfTeamJoin,

  /// Joined a team member's shared folder from a link. This event is
  /// deprecated and will not be logged going forward as the associated
  /// product functionality no longer exists.
  DBTEAMLOGEventTypeSfTeamJoinFromOobLink,

  /// Unshared a folder with a team member. This event is deprecated and will
  /// not be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypeSfTeamUninvite,

  /// Sent an email invitation to the membership of a shared file or folder.
  DBTEAMLOGEventTypeSharedContentAddInvitees,

  /// Added an expiry to the link for the shared file or folder.
  DBTEAMLOGEventTypeSharedContentAddLinkExpiry,

  /// Added a password to the link for the shared file or folder.
  DBTEAMLOGEventTypeSharedContentAddLinkPassword,

  /// Added users and/or groups to the membership of a shared file or folder.
  DBTEAMLOGEventTypeSharedContentAddMember,

  /// Changed whether members can download the shared file or folder.
  DBTEAMLOGEventTypeSharedContentChangeDownloadsPolicy,

  /// Changed the access type of an invitee to a shared file or folder before
  /// the invitation was claimed.
  DBTEAMLOGEventTypeSharedContentChangeInviteeRole,

  /// Changed the audience of the link for a shared file or folder.
  DBTEAMLOGEventTypeSharedContentChangeLinkAudience,

  /// Changed the expiry of the link for the shared file or folder.
  DBTEAMLOGEventTypeSharedContentChangeLinkExpiry,

  /// Changed the password on the link for the shared file or folder.
  DBTEAMLOGEventTypeSharedContentChangeLinkPassword,

  /// Changed the access type of a shared file or folder member.
  DBTEAMLOGEventTypeSharedContentChangeMemberRole,

  /// Changed whether members can see who viewed the shared file or folder.
  DBTEAMLOGEventTypeSharedContentChangeViewerInfoPolicy,

  /// Claimed membership to a team member's shared folder.
  DBTEAMLOGEventTypeSharedContentClaimInvitation,

  /// Copied the shared file or folder to own Dropbox.
  DBTEAMLOGEventTypeSharedContentCopy,

  /// Downloaded the shared file or folder.
  DBTEAMLOGEventTypeSharedContentDownload,

  /// Left the membership of a shared file or folder.
  DBTEAMLOGEventTypeSharedContentRelinquishMembership,

  /// Removed an invitee from the membership of a shared file or folder before
  /// it was claimed.
  DBTEAMLOGEventTypeSharedContentRemoveInvitee,

  /// Removed the expiry of the link for the shared file or folder.
  DBTEAMLOGEventTypeSharedContentRemoveLinkExpiry,

  /// Removed the password on the link for the shared file or folder.
  DBTEAMLOGEventTypeSharedContentRemoveLinkPassword,

  /// Removed a user or a group from the membership of a shared file or
  /// folder.
  DBTEAMLOGEventTypeSharedContentRemoveMember,

  /// Requested to be on the membership of a shared file or folder.
  DBTEAMLOGEventTypeSharedContentRequestAccess,

  /// Unshared a shared file or folder by clearing its membership and turning
  /// off its link.
  DBTEAMLOGEventTypeSharedContentUnshare,

  /// Previewed the shared file or folder.
  DBTEAMLOGEventTypeSharedContentView,

  /// Set or unset the confidential flag on a shared folder.
  DBTEAMLOGEventTypeSharedFolderChangeConfidentiality,

  /// Changed who can access the shared folder via a link.
  DBTEAMLOGEventTypeSharedFolderChangeLinkPolicy,

  /// Changed who can manage the membership of a shared folder.
  DBTEAMLOGEventTypeSharedFolderChangeMemberManagementPolicy,

  /// Changed who can become a member of the shared folder.
  DBTEAMLOGEventTypeSharedFolderChangeMemberPolicy,

  /// Created a shared folder.
  DBTEAMLOGEventTypeSharedFolderCreate,

  /// Added a shared folder to own Dropbox.
  DBTEAMLOGEventTypeSharedFolderMount,

  /// Transferred the ownership of a shared folder to another member.
  DBTEAMLOGEventTypeSharedFolderTransferOwnership,

  /// Deleted a shared folder from Dropbox.
  DBTEAMLOGEventTypeSharedFolderUnmount,

  /// Shared Paper document was opened. This event is deprecated and will not
  /// be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypeSharedNoteOpened,

  /// Created a link to a file using an app.
  DBTEAMLOGEventTypeShmodelAppCreate,

  /// Created a new link.
  DBTEAMLOGEventTypeShmodelCreate,

  /// Removed a link.
  DBTEAMLOGEventTypeShmodelDisable,

  /// Shared a link with Facebook users.
  DBTEAMLOGEventTypeShmodelFbShare,

  /// Shared a link with a group. This event is deprecated and will not be
  /// logged going forward as the associated product functionality no longer
  /// exists.
  DBTEAMLOGEventTypeShmodelGroupShare,

  /// Removed the expiration date from a link.
  DBTEAMLOGEventTypeShmodelRemoveExpiration,

  /// Added an expiration date to a link.
  DBTEAMLOGEventTypeShmodelSetExpiration,

  /// Added a team member's file/folder to their Dropbox from a link.
  DBTEAMLOGEventTypeShmodelTeamCopy,

  /// Downloaded a team member's file/folder from a link.
  DBTEAMLOGEventTypeShmodelTeamDownload,

  /// Shared a link with team members.
  DBTEAMLOGEventTypeShmodelTeamShare,

  /// Opened a team member's link.
  DBTEAMLOGEventTypeShmodelTeamView,

  /// Password-protected a link.
  DBTEAMLOGEventTypeShmodelVisibilityPassword,

  /// Made a file/folder visible to anyone with the link.
  DBTEAMLOGEventTypeShmodelVisibilityPublic,

  /// Made a file/folder visible only to team members with the link.
  DBTEAMLOGEventTypeShmodelVisibilityTeamOnly,

  /// Removed single sign-on logout URL. This event is deprecated and will not
  /// be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypeRemoveLogoutUrl,

  /// Changed the sign-out URL for SSO. This event is deprecated and will not
  /// be logged going forward as the associated product functionality no
  /// longer exists.
  DBTEAMLOGEventTypeRemoveSsoUrl,

  /// Changed the X.509 certificate for SSO.
  DBTEAMLOGEventTypeSsoChangeCert,

  /// Changed the sign-in URL for SSO.
  DBTEAMLOGEventTypeSsoChangeLoginUrl,

  /// Changed the sign-out URL for SSO.
  DBTEAMLOGEventTypeSsoChangeLogoutUrl,

  /// Changed the SAML identity mode for SSO.
  DBTEAMLOGEventTypeSsoChangeSamlIdentityMode,

  /// Changed the archival status of a team folder.
  DBTEAMLOGEventTypeTeamFolderChangeStatus,

  /// Created a new team folder in active status.
  DBTEAMLOGEventTypeTeamFolderCreate,

  /// Downgraded a team folder to a regular shared folder.
  DBTEAMLOGEventTypeTeamFolderDowngrade,

  /// Permanently deleted an archived team folder.
  DBTEAMLOGEventTypeTeamFolderPermanentlyDelete,

  /// Renamed an active or archived team folder.
  DBTEAMLOGEventTypeTeamFolderRename,

  /// Changed the account capture policy on a domain belonging to the team.
  DBTEAMLOGEventTypeAccountCaptureChangePolicy,

  /// Disabled allow downloads. This event is deprecated and will not be
  /// logged going forward as the associated product functionality no longer
  /// exists.
  DBTEAMLOGEventTypeAllowDownloadDisabled,

  /// Enabled allow downloads. This event is deprecated and will not be logged
  /// going forward as the associated product functionality no longer exists.
  DBTEAMLOGEventTypeAllowDownloadEnabled,

  /// Set a restriction policy regarding the location of data centers where
  /// team data resides.
  DBTEAMLOGEventTypeDataPlacementRestrictionChangePolicy,

  /// Satisfied a previously set restriction policy regarding the location of
  /// data centers where team data resides (i.e. all data have been migrated
  /// according to the restriction placed).
  DBTEAMLOGEventTypeDataPlacementRestrictionSatisfyPolicy,

  /// Set or removed a limit on the number of computers each team member can
  /// link to their work Dropbox account.
  DBTEAMLOGEventTypeDeviceApprovalsChangeDesktopPolicy,

  /// Set or removed a limit on the number of mobiles devices each team member
  /// can link to their work Dropbox account.
  DBTEAMLOGEventTypeDeviceApprovalsChangeMobilePolicy,

  /// Changed the action taken when a team member is already over the limits
  /// (e.g when they join the team, an admin lowers limits, etc.).
  DBTEAMLOGEventTypeDeviceApprovalsChangeOverageAction,

  /// Changed the action taken with respect to approval limits when a team
  /// member unlinks an approved device.
  DBTEAMLOGEventTypeDeviceApprovalsChangeUnlinkAction,

  /// Added an exception for one or more team members to optionally use the
  /// regular Dropbox app when EMM is enabled.
  DBTEAMLOGEventTypeEmmAddException,

  /// Enabled or disabled enterprise mobility management for team members.
  DBTEAMLOGEventTypeEmmChangePolicy,

  /// Removed an exception for one or more team members to optionally use the
  /// regular Dropbox app when EMM is enabled.
  DBTEAMLOGEventTypeEmmRemoveException,

  /// Accepted or opted out of extended version history.
  DBTEAMLOGEventTypeExtendedVersionHistoryChangePolicy,

  /// Enabled or disabled commenting on team files.
  DBTEAMLOGEventTypeFileCommentsChangePolicy,

  /// Enabled or disabled file requests.
  DBTEAMLOGEventTypeFileRequestsChangePolicy,

  /// Enabled file request emails for everyone. This event is deprecated and
  /// will not be logged going forward as the associated product functionality
  /// no longer exists.
  DBTEAMLOGEventTypeFileRequestsEmailsEnabled,

  /// Allowed file request emails for the team. This event is deprecated and
  /// will not be logged going forward as the associated product functionality
  /// no longer exists.
  DBTEAMLOGEventTypeFileRequestsEmailsRestrictedToTeamOnly,

  /// Enabled or disabled Google single sign-on for the team.
  DBTEAMLOGEventTypeGoogleSsoChangePolicy,

  /// Changed who can create groups.
  DBTEAMLOGEventTypeGroupUserManagementChangePolicy,

  /// Changed whether users can find the team when not invited.
  DBTEAMLOGEventTypeMemberRequestsChangePolicy,

  /// Added an exception for one or more team members to bypass space limits
  /// imposed by policy.
  DBTEAMLOGEventTypeMemberSpaceLimitsAddException,

  /// Changed the storage limits applied to team members by policy.
  DBTEAMLOGEventTypeMemberSpaceLimitsChangePolicy,

  /// Removed an exception for one or more team members to bypass space limits
  /// imposed by policy.
  DBTEAMLOGEventTypeMemberSpaceLimitsRemoveException,

  /// Enabled or disabled the option for team members to suggest new members
  /// to add to the team.
  DBTEAMLOGEventTypeMemberSuggestionsChangePolicy,

  /// Enabled or disabled the Microsoft Office add-in, which lets team members
  /// save files to Dropbox directly from Microsoft Office.
  DBTEAMLOGEventTypeMicrosoftOfficeAddinChangePolicy,

  /// Enabled or disabled network control.
  DBTEAMLOGEventTypeNetworkControlChangePolicy,

  /// Changed whether Dropbox Paper, when enabled, is deployed to all teams or
  /// to specific members of the team.
  DBTEAMLOGEventTypePaperChangeDeploymentPolicy,

  /// Changed whether team members can share Paper documents externally (i.e.
  /// outside the team), and if so, whether they should be accessible only by
  /// team members or anyone by default.
  DBTEAMLOGEventTypePaperChangeMemberPolicy,

  /// Enabled or disabled Dropbox Paper for the team.
  DBTEAMLOGEventTypePaperChangePolicy,

  /// Enabled or disabled the ability of team members to permanently delete
  /// content.
  DBTEAMLOGEventTypePermanentDeleteChangePolicy,

  /// Changed whether team members can join shared folders owned externally
  /// (i.e. outside the team).
  DBTEAMLOGEventTypeSharingChangeFolderJoinPolicy,

  /// Changed whether team members can share links externally (i.e. outside
  /// the team), and if so, whether links should be accessible only by team
  /// members or anyone by default.
  DBTEAMLOGEventTypeSharingChangeLinkPolicy,

  /// Changed whether team members can share files and folders externally
  /// (i.e. outside the team).
  DBTEAMLOGEventTypeSharingChangeMemberPolicy,

  /// Changed the default Smart Sync policy for team members.
  DBTEAMLOGEventTypeSmartSyncChangePolicy,

  /// Change the single sign-on policy for the team.
  DBTEAMLOGEventTypeSsoChangePolicy,

  /// Change two-step verification policy for the team.
  DBTEAMLOGEventTypeTfaChangePolicy,

  /// Enabled or disabled the option for team members to link a personal
  /// Dropbox account in addition to their work account to the same computer.
  DBTEAMLOGEventTypeTwoAccountChangePolicy,

  /// Changed how long team members can stay signed in to Dropbox on the web.
  DBTEAMLOGEventTypeWebSessionsChangeFixedLengthPolicy,

  /// Changed how long team members can be idle while signed in to Dropbox on
  /// the web.
  DBTEAMLOGEventTypeWebSessionsChangeIdleLengthPolicy,

  /// Added a team logo to be displayed on shared link headers.
  DBTEAMLOGEventTypeTeamProfileAddLogo,

  /// Changed the team logo to be displayed on shared link headers.
  DBTEAMLOGEventTypeTeamProfileChangeLogo,

  /// Changed the team name.
  DBTEAMLOGEventTypeTeamProfileChangeName,

  /// Removed the team logo to be displayed on shared link headers.
  DBTEAMLOGEventTypeTeamProfileRemoveLogo,

  /// Added a backup phone for two-step verification.
  DBTEAMLOGEventTypeTfaAddBackupPhone,

  /// Added a security key for two-step verification.
  DBTEAMLOGEventTypeTfaAddSecurityKey,

  /// Changed the backup phone for two-step verification.
  DBTEAMLOGEventTypeTfaChangeBackupPhone,

  /// Enabled, disabled or changed the configuration for two-step
  /// verification.
  DBTEAMLOGEventTypeTfaChangeStatus,

  /// Removed the backup phone for two-step verification.
  DBTEAMLOGEventTypeTfaRemoveBackupPhone,

  /// Removed a security key for two-step verification.
  DBTEAMLOGEventTypeTfaRemoveSecurityKey,

  /// Reset two-step verification for team member.
  DBTEAMLOGEventTypeTfaReset,

  /// (no description).
  DBTEAMLOGEventTypeOther,

};

/// Represents the union's current tag state.
@property (nonatomic, readonly) DBTEAMLOGEventTypeTag tag;

#pragma mark - Constructors

///
/// Initializes union class with tag state of "member_change_membership_type".
///
/// Description of the "member_change_membership_type" tag state: Changed the
/// membership type (limited vs full) for team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberChangeMembershipType;

///
/// Initializes union class with tag state of
/// "member_permanently_delete_account_contents".
///
/// Description of the "member_permanently_delete_account_contents" tag state:
/// Permanently deleted contents of a removed team member account.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberPermanentlyDeleteAccountContents;

///
/// Initializes union class with tag state of
/// "member_space_limits_change_status".
///
/// Description of the "member_space_limits_change_status" tag state: Changed
/// the status with respect to whether the team member is under or over storage
/// quota specified by policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSpaceLimitsChangeStatus;

///
/// Initializes union class with tag state of
/// "member_transfer_account_contents".
///
/// Description of the "member_transfer_account_contents" tag state: Transferred
/// contents of a removed team member account to another member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberTransferAccountContents;

///
/// Initializes union class with tag state of
/// "paper_enabled_users_group_addition".
///
/// Description of the "paper_enabled_users_group_addition" tag state: Users
/// added to Paper enabled users list.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperEnabledUsersGroupAddition;

///
/// Initializes union class with tag state of
/// "paper_enabled_users_group_removal".
///
/// Description of the "paper_enabled_users_group_removal" tag state: Users
/// removed from Paper enabled users list.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperEnabledUsersGroupRemoval;

///
/// Initializes union class with tag state of "paper_external_view_allow".
///
/// Description of the "paper_external_view_allow" tag state: Paper external
/// sharing policy changed: anyone. This event is deprecated and will not be
/// logged going forward as the associated product functionality no longer
/// exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperExternalViewAllow;

///
/// Initializes union class with tag state of
/// "paper_external_view_default_team".
///
/// Description of the "paper_external_view_default_team" tag state: Paper
/// external sharing policy changed: default team. This event is deprecated and
/// will not be logged going forward as the associated product functionality no
/// longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperExternalViewDefaultTeam;

///
/// Initializes union class with tag state of "paper_external_view_forbid".
///
/// Description of the "paper_external_view_forbid" tag state: Paper external
/// sharing policy changed: team-only. This event is deprecated and will not be
/// logged going forward as the associated product functionality no longer
/// exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperExternalViewForbid;

///
/// Initializes union class with tag state of "sf_external_invite_warn".
///
/// Description of the "sf_external_invite_warn" tag state: Admin settings: team
/// members see a warning before sharing folders outside the team (DEPRECATED
/// FEATURE). This event is deprecated and will not be logged going forward as
/// the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfExternalInviteWarn;

///
/// Initializes union class with tag state of "team_merge".
///
/// Description of the "team_merge" tag state: Merged the team into another
/// team.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamMerge;

///
/// Initializes union class with tag state of "app_link_team".
///
/// Description of the "app_link_team" tag state: Linked an app for team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAppLinkTeam;

///
/// Initializes union class with tag state of "app_link_user".
///
/// Description of the "app_link_user" tag state: Linked an app for team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithAppLinkUser;

///
/// Initializes union class with tag state of "app_unlink_team".
///
/// Description of the "app_unlink_team" tag state: Unlinked an app for team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAppUnlinkTeam;

///
/// Initializes union class with tag state of "app_unlink_user".
///
/// Description of the "app_unlink_user" tag state: Unlinked an app for team
/// member.
///
/// @return An initialized instance.
///
- (instancetype)initWithAppUnlinkUser;

///
/// Initializes union class with tag state of "device_change_ip_desktop".
///
/// Description of the "device_change_ip_desktop" tag state: IP address
/// associated with active desktop session changed.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceChangeIpDesktop;

///
/// Initializes union class with tag state of "device_change_ip_mobile".
///
/// Description of the "device_change_ip_mobile" tag state: IP address
/// associated with active mobile session changed.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceChangeIpMobile;

///
/// Initializes union class with tag state of "device_change_ip_web".
///
/// Description of the "device_change_ip_web" tag state: IP address associated
/// with active Web session changed.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceChangeIpWeb;

///
/// Initializes union class with tag state of "device_delete_on_unlink_fail".
///
/// Description of the "device_delete_on_unlink_fail" tag state: Failed to
/// delete all files from an unlinked device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceDeleteOnUnlinkFail;

///
/// Initializes union class with tag state of "device_delete_on_unlink_success".
///
/// Description of the "device_delete_on_unlink_success" tag state: Deleted all
/// files from an unlinked device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceDeleteOnUnlinkSuccess;

///
/// Initializes union class with tag state of "device_link_fail".
///
/// Description of the "device_link_fail" tag state: Failed to link a device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceLinkFail;

///
/// Initializes union class with tag state of "device_link_success".
///
/// Description of the "device_link_success" tag state: Linked a device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceLinkSuccess;

///
/// Initializes union class with tag state of "device_management_disabled".
///
/// Description of the "device_management_disabled" tag state: Disable Device
/// Management. This event is deprecated and will not be logged going forward as
/// the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceManagementDisabled;

///
/// Initializes union class with tag state of "device_management_enabled".
///
/// Description of the "device_management_enabled" tag state: Enable Device
/// Management. This event is deprecated and will not be logged going forward as
/// the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceManagementEnabled;

///
/// Initializes union class with tag state of "device_unlink".
///
/// Description of the "device_unlink" tag state: Disconnected a device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceUnlink;

///
/// Initializes union class with tag state of "emm_refresh_auth_token".
///
/// Description of the "emm_refresh_auth_token" tag state: Refreshed the auth
/// token used for setting up enterprise mobility management.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmRefreshAuthToken;

///
/// Initializes union class with tag state of
/// "account_capture_change_availability".
///
/// Description of the "account_capture_change_availability" tag state: Granted
/// or revoked the option to enable account capture on domains belonging to the
/// team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAccountCaptureChangeAvailability;

///
/// Initializes union class with tag state of "account_capture_migrate_account".
///
/// Description of the "account_capture_migrate_account" tag state: Account
/// captured user migrated their account to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAccountCaptureMigrateAccount;

///
/// Initializes union class with tag state of
/// "account_capture_relinquish_account".
///
/// Description of the "account_capture_relinquish_account" tag state: Account
/// captured user relinquished their account by changing the email address
/// associated with it.
///
/// @return An initialized instance.
///
- (instancetype)initWithAccountCaptureRelinquishAccount;

///
/// Initializes union class with tag state of "disabled_domain_invites".
///
/// Description of the "disabled_domain_invites" tag state: Disabled domain
/// invites. This event is deprecated and will not be logged going forward as
/// the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithDisabledDomainInvites;

///
/// Initializes union class with tag state of
/// "domain_invites_approve_request_to_join_team".
///
/// Description of the "domain_invites_approve_request_to_join_team" tag state:
/// Approved a member's request to join the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesApproveRequestToJoinTeam;

///
/// Initializes union class with tag state of
/// "domain_invites_decline_request_to_join_team".
///
/// Description of the "domain_invites_decline_request_to_join_team" tag state:
/// Declined a user's request to join the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesDeclineRequestToJoinTeam;

///
/// Initializes union class with tag state of
/// "domain_invites_email_existing_users".
///
/// Description of the "domain_invites_email_existing_users" tag state: Sent
/// domain invites to existing domain accounts.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesEmailExistingUsers;

///
/// Initializes union class with tag state of
/// "domain_invites_request_to_join_team".
///
/// Description of the "domain_invites_request_to_join_team" tag state: Asked to
/// join the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesRequestToJoinTeam;

///
/// Initializes union class with tag state of
/// "domain_invites_set_invite_new_user_pref_to_no".
///
/// Description of the "domain_invites_set_invite_new_user_pref_to_no" tag
/// state: Turned off u201cAutomatically invite new usersu201d. This event is
/// deprecated and will not be logged going forward as the associated product
/// functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesSetInviteNewUserPrefToNo;

///
/// Initializes union class with tag state of
/// "domain_invites_set_invite_new_user_pref_to_yes".
///
/// Description of the "domain_invites_set_invite_new_user_pref_to_yes" tag
/// state: Turned on u201cAutomatically invite new usersu201d. This event is
/// deprecated and will not be logged going forward as the associated product
/// functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainInvitesSetInviteNewUserPrefToYes;

///
/// Initializes union class with tag state of
/// "domain_verification_add_domain_fail".
///
/// Description of the "domain_verification_add_domain_fail" tag state: Failed
/// to verify a domain belonging to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainVerificationAddDomainFail;

///
/// Initializes union class with tag state of
/// "domain_verification_add_domain_success".
///
/// Description of the "domain_verification_add_domain_success" tag state:
/// Verified a domain belonging to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainVerificationAddDomainSuccess;

///
/// Initializes union class with tag state of
/// "domain_verification_remove_domain".
///
/// Description of the "domain_verification_remove_domain" tag state: Removed a
/// domain from the list of verified domains belonging to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithDomainVerificationRemoveDomain;

///
/// Initializes union class with tag state of "enabled_domain_invites".
///
/// Description of the "enabled_domain_invites" tag state: Enabled domain
/// invites. This event is deprecated and will not be logged going forward as
/// the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithEnabledDomainInvites;

///
/// Initializes union class with tag state of "create_folder".
///
/// Description of the "create_folder" tag state: Created folders. This event is
/// deprecated and will not be logged going forward as the associated product
/// functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithCreateFolder;

///
/// Initializes union class with tag state of "file_add".
///
/// Description of the "file_add" tag state: Added files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileAdd;

///
/// Initializes union class with tag state of "file_copy".
///
/// Description of the "file_copy" tag state: Copied files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileCopy;

///
/// Initializes union class with tag state of "file_delete".
///
/// Description of the "file_delete" tag state: Deleted files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileDelete;

///
/// Initializes union class with tag state of "file_download".
///
/// Description of the "file_download" tag state: Downloaded files and/or
/// folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileDownload;

///
/// Initializes union class with tag state of "file_edit".
///
/// Description of the "file_edit" tag state: Edited files.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileEdit;

///
/// Initializes union class with tag state of "file_get_copy_reference".
///
/// Description of the "file_get_copy_reference" tag state: Create a copy
/// reference to a file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileGetCopyReference;

///
/// Initializes union class with tag state of "file_move".
///
/// Description of the "file_move" tag state: Moved files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileMove;

///
/// Initializes union class with tag state of "file_permanently_delete".
///
/// Description of the "file_permanently_delete" tag state: Permanently deleted
/// files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFilePermanentlyDelete;

///
/// Initializes union class with tag state of "file_preview".
///
/// Description of the "file_preview" tag state: Previewed files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFilePreview;

///
/// Initializes union class with tag state of "file_rename".
///
/// Description of the "file_rename" tag state: Renamed files and/or folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRename;

///
/// Initializes union class with tag state of "file_restore".
///
/// Description of the "file_restore" tag state: Restored deleted files and/or
/// folders.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRestore;

///
/// Initializes union class with tag state of "file_revert".
///
/// Description of the "file_revert" tag state: Reverted files to a previous
/// version.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRevert;

///
/// Initializes union class with tag state of "file_rollback_changes".
///
/// Description of the "file_rollback_changes" tag state: Rolled back file
/// change location changes.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRollbackChanges;

///
/// Initializes union class with tag state of "file_save_copy_reference".
///
/// Description of the "file_save_copy_reference" tag state: Save a file or
/// folder using a copy reference.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileSaveCopyReference;

///
/// Initializes union class with tag state of "file_request_add_deadline".
///
/// Description of the "file_request_add_deadline" tag state: Added a deadline
/// to a file request.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestAddDeadline;

///
/// Initializes union class with tag state of "file_request_change_folder".
///
/// Description of the "file_request_change_folder" tag state: Changed the file
/// request folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestChangeFolder;

///
/// Initializes union class with tag state of "file_request_change_title".
///
/// Description of the "file_request_change_title" tag state: Change the file
/// request title.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestChangeTitle;

///
/// Initializes union class with tag state of "file_request_close".
///
/// Description of the "file_request_close" tag state: Closed a file request.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestClose;

///
/// Initializes union class with tag state of "file_request_create".
///
/// Description of the "file_request_create" tag state: Created a file request.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestCreate;

///
/// Initializes union class with tag state of "file_request_receive_file".
///
/// Description of the "file_request_receive_file" tag state: Received files for
/// a file request.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestReceiveFile;

///
/// Initializes union class with tag state of "file_request_remove_deadline".
///
/// Description of the "file_request_remove_deadline" tag state: Removed the
/// file request deadline.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestRemoveDeadline;

///
/// Initializes union class with tag state of "file_request_send".
///
/// Description of the "file_request_send" tag state: Sent file request to users
/// via email.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestSend;

///
/// Initializes union class with tag state of "group_add_external_id".
///
/// Description of the "group_add_external_id" tag state: Added an external ID
/// for group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupAddExternalId;

///
/// Initializes union class with tag state of "group_add_member".
///
/// Description of the "group_add_member" tag state: Added team members to a
/// group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupAddMember;

///
/// Initializes union class with tag state of "group_change_external_id".
///
/// Description of the "group_change_external_id" tag state: Changed the
/// external ID for group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupChangeExternalId;

///
/// Initializes union class with tag state of "group_change_management_type".
///
/// Description of the "group_change_management_type" tag state: Changed group
/// management type.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupChangeManagementType;

///
/// Initializes union class with tag state of "group_change_member_role".
///
/// Description of the "group_change_member_role" tag state: Changed the manager
/// permissions belonging to a group member.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupChangeMemberRole;

///
/// Initializes union class with tag state of "group_create".
///
/// Description of the "group_create" tag state: Created a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupCreate;

///
/// Initializes union class with tag state of "group_delete".
///
/// Description of the "group_delete" tag state: Deleted a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupDelete;

///
/// Initializes union class with tag state of "group_description_updated".
///
/// Description of the "group_description_updated" tag state: Updated a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupDescriptionUpdated;

///
/// Initializes union class with tag state of "group_join_policy_updated".
///
/// Description of the "group_join_policy_updated" tag state: Updated a group
/// join policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupJoinPolicyUpdated;

///
/// Initializes union class with tag state of "group_moved".
///
/// Description of the "group_moved" tag state: Moved a group. This event is
/// deprecated and will not be logged going forward as the associated product
/// functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupMoved;

///
/// Initializes union class with tag state of "group_remove_external_id".
///
/// Description of the "group_remove_external_id" tag state: Removed the
/// external ID for group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupRemoveExternalId;

///
/// Initializes union class with tag state of "group_remove_member".
///
/// Description of the "group_remove_member" tag state: Removed team members
/// from a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupRemoveMember;

///
/// Initializes union class with tag state of "group_rename".
///
/// Description of the "group_rename" tag state: Renamed a group.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupRename;

///
/// Initializes union class with tag state of "emm_login_success".
///
/// Description of the "emm_login_success" tag state: Signed in using the
/// Dropbox EMM app.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmLoginSuccess;

///
/// Initializes union class with tag state of "logout".
///
/// Description of the "logout" tag state: Signed out.
///
/// @return An initialized instance.
///
- (instancetype)initWithLogout;

///
/// Initializes union class with tag state of "password_login_fail".
///
/// Description of the "password_login_fail" tag state: Failed to sign in using
/// a password.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordLoginFail;

///
/// Initializes union class with tag state of "password_login_success".
///
/// Description of the "password_login_success" tag state: Signed in using a
/// password.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordLoginSuccess;

///
/// Initializes union class with tag state of "reseller_support_session_end".
///
/// Description of the "reseller_support_session_end" tag state: Ended reseller
/// support session.
///
/// @return An initialized instance.
///
- (instancetype)initWithResellerSupportSessionEnd;

///
/// Initializes union class with tag state of "reseller_support_session_start".
///
/// Description of the "reseller_support_session_start" tag state: Started
/// reseller support session.
///
/// @return An initialized instance.
///
- (instancetype)initWithResellerSupportSessionStart;

///
/// Initializes union class with tag state of "sign_in_as_session_end".
///
/// Description of the "sign_in_as_session_end" tag state: Ended admin
/// sign-in-as session.
///
/// @return An initialized instance.
///
- (instancetype)initWithSignInAsSessionEnd;

///
/// Initializes union class with tag state of "sign_in_as_session_start".
///
/// Description of the "sign_in_as_session_start" tag state: Started admin
/// sign-in-as session.
///
/// @return An initialized instance.
///
- (instancetype)initWithSignInAsSessionStart;

///
/// Initializes union class with tag state of "sso_login_fail".
///
/// Description of the "sso_login_fail" tag state: Failed to sign in using SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoLoginFail;

///
/// Initializes union class with tag state of "member_add_name".
///
/// Description of the "member_add_name" tag state: Set team member name when
/// joining team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberAddName;

///
/// Initializes union class with tag state of "member_change_email".
///
/// Description of the "member_change_email" tag state: Changed team member
/// email address.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberChangeEmail;

///
/// Initializes union class with tag state of "member_change_name".
///
/// Description of the "member_change_name" tag state: Changed team member name.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberChangeName;

///
/// Initializes union class with tag state of "member_change_role".
///
/// Description of the "member_change_role" tag state: Change the admin
/// permissions belonging to team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberChangeRole;

///
/// Initializes union class with tag state of "member_invite".
///
/// Description of the "member_invite" tag state: Invited a user to join the
/// team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberInvite;

///
/// Initializes union class with tag state of "member_join".
///
/// Description of the "member_join" tag state: Joined the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberJoin;

///
/// Initializes union class with tag state of "member_leave".
///
/// Description of the "member_leave" tag state: Removed a team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberLeave;

///
/// Initializes union class with tag state of "member_recover".
///
/// Description of the "member_recover" tag state: Recovered a removed member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberRecover;

///
/// Initializes union class with tag state of "member_suggest".
///
/// Description of the "member_suggest" tag state: Suggested a new team member
/// to be added to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSuggest;

///
/// Initializes union class with tag state of "member_suspend".
///
/// Description of the "member_suspend" tag state: Suspended a team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSuspend;

///
/// Initializes union class with tag state of "member_unsuspend".
///
/// Description of the "member_unsuspend" tag state: Unsuspended a team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberUnsuspend;

///
/// Initializes union class with tag state of "paper_content_add_member".
///
/// Description of the "paper_content_add_member" tag state: Added users to the
/// membership of a Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentAddMember;

///
/// Initializes union class with tag state of "paper_content_add_to_folder".
///
/// Description of the "paper_content_add_to_folder" tag state: Added Paper doc
/// or folder to a folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentAddToFolder;

///
/// Initializes union class with tag state of "paper_content_archive".
///
/// Description of the "paper_content_archive" tag state: Archived Paper doc or
/// folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentArchive;

///
/// Initializes union class with tag state of
/// "paper_content_change_subscription".
///
/// Description of the "paper_content_change_subscription" tag state: Followed
/// or unfollowed a Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentChangeSubscription;

///
/// Initializes union class with tag state of "paper_content_create".
///
/// Description of the "paper_content_create" tag state: Created a Paper doc or
/// folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentCreate;

///
/// Initializes union class with tag state of
/// "paper_content_permanently_delete".
///
/// Description of the "paper_content_permanently_delete" tag state: Permanently
/// deleted a Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentPermanentlyDelete;

///
/// Initializes union class with tag state of
/// "paper_content_remove_from_folder".
///
/// Description of the "paper_content_remove_from_folder" tag state: Removed
/// Paper doc or folder from a folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentRemoveFromFolder;

///
/// Initializes union class with tag state of "paper_content_remove_member".
///
/// Description of the "paper_content_remove_member" tag state: Removed a user
/// from the membership of a Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentRemoveMember;

///
/// Initializes union class with tag state of "paper_content_rename".
///
/// Description of the "paper_content_rename" tag state: Renamed Paper doc or
/// folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentRename;

///
/// Initializes union class with tag state of "paper_content_restore".
///
/// Description of the "paper_content_restore" tag state: Restored an archived
/// Paper doc or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperContentRestore;

///
/// Initializes union class with tag state of "paper_doc_add_comment".
///
/// Description of the "paper_doc_add_comment" tag state: Added a Paper doc
/// comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocAddComment;

///
/// Initializes union class with tag state of "paper_doc_change_member_role".
///
/// Description of the "paper_doc_change_member_role" tag state: Changed the
/// access type of a Paper doc member.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocChangeMemberRole;

///
/// Initializes union class with tag state of "paper_doc_change_sharing_policy".
///
/// Description of the "paper_doc_change_sharing_policy" tag state: Changed the
/// sharing policy for Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocChangeSharingPolicy;

///
/// Initializes union class with tag state of "paper_doc_deleted".
///
/// Description of the "paper_doc_deleted" tag state: Paper doc archived. This
/// event is deprecated and will not be logged going forward as the associated
/// product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocDeleted;

///
/// Initializes union class with tag state of "paper_doc_delete_comment".
///
/// Description of the "paper_doc_delete_comment" tag state: Deleted a Paper doc
/// comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocDeleteComment;

///
/// Initializes union class with tag state of "paper_doc_download".
///
/// Description of the "paper_doc_download" tag state: Downloaded a Paper doc in
/// a particular output format.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocDownload;

///
/// Initializes union class with tag state of "paper_doc_edit".
///
/// Description of the "paper_doc_edit" tag state: Edited a Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocEdit;

///
/// Initializes union class with tag state of "paper_doc_edit_comment".
///
/// Description of the "paper_doc_edit_comment" tag state: Edited a Paper doc
/// comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocEditComment;

///
/// Initializes union class with tag state of "paper_doc_followed".
///
/// Description of the "paper_doc_followed" tag state: Followed a Paper doc.
/// This event is replaced by paper_content_change_subscription and will not be
/// logged going forward.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocFollowed;

///
/// Initializes union class with tag state of "paper_doc_mention".
///
/// Description of the "paper_doc_mention" tag state: Mentioned a member in a
/// Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocMention;

///
/// Initializes union class with tag state of "paper_doc_request_access".
///
/// Description of the "paper_doc_request_access" tag state: Requested to be a
/// member on a Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocRequestAccess;

///
/// Initializes union class with tag state of "paper_doc_resolve_comment".
///
/// Description of the "paper_doc_resolve_comment" tag state: Paper doc comment
/// resolved.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocResolveComment;

///
/// Initializes union class with tag state of "paper_doc_revert".
///
/// Description of the "paper_doc_revert" tag state: Restored a Paper doc to
/// previous revision.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocRevert;

///
/// Initializes union class with tag state of "paper_doc_slack_share".
///
/// Description of the "paper_doc_slack_share" tag state: Paper doc link shared
/// via slack.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocSlackShare;

///
/// Initializes union class with tag state of "paper_doc_team_invite".
///
/// Description of the "paper_doc_team_invite" tag state: Paper doc shared with
/// team member. This event is deprecated and will not be logged going forward
/// as the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocTeamInvite;

///
/// Initializes union class with tag state of "paper_doc_unresolve_comment".
///
/// Description of the "paper_doc_unresolve_comment" tag state: Unresolved a
/// Paper doc comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocUnresolveComment;

///
/// Initializes union class with tag state of "paper_doc_view".
///
/// Description of the "paper_doc_view" tag state: Viewed Paper doc.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperDocView;

///
/// Initializes union class with tag state of "paper_folder_deleted".
///
/// Description of the "paper_folder_deleted" tag state: Paper folder archived.
/// This event is deprecated and will not be logged going forward as the
/// associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperFolderDeleted;

///
/// Initializes union class with tag state of "paper_folder_followed".
///
/// Description of the "paper_folder_followed" tag state: Followed a Paper
/// folder. This event is replaced by paper_content_change_subscription and will
/// not be logged going forward.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperFolderFollowed;

///
/// Initializes union class with tag state of "paper_folder_team_invite".
///
/// Description of the "paper_folder_team_invite" tag state: Paper folder shared
/// with team member. This event is deprecated and will not be logged going
/// forward as the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperFolderTeamInvite;

///
/// Initializes union class with tag state of "password_change".
///
/// Description of the "password_change" tag state: Changed password.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordChange;

///
/// Initializes union class with tag state of "password_reset".
///
/// Description of the "password_reset" tag state: Reset password.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordReset;

///
/// Initializes union class with tag state of "password_reset_all".
///
/// Description of the "password_reset_all" tag state: Reset all team member
/// passwords.
///
/// @return An initialized instance.
///
- (instancetype)initWithPasswordResetAll;

///
/// Initializes union class with tag state of "emm_create_exceptions_report".
///
/// Description of the "emm_create_exceptions_report" tag state: EMM excluded
/// users report created.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmCreateExceptionsReport;

///
/// Initializes union class with tag state of "emm_create_usage_report".
///
/// Description of the "emm_create_usage_report" tag state: EMM mobile app usage
/// report created.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmCreateUsageReport;

///
/// Initializes union class with tag state of
/// "smart_sync_create_admin_privilege_report".
///
/// Description of the "smart_sync_create_admin_privilege_report" tag state:
/// Smart Sync non-admin devices report created.
///
/// @return An initialized instance.
///
- (instancetype)initWithSmartSyncCreateAdminPrivilegeReport;

///
/// Initializes union class with tag state of "team_activity_create_report".
///
/// Description of the "team_activity_create_report" tag state: Created a team
/// activity report.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamActivityCreateReport;

///
/// Initializes union class with tag state of "collection_share".
///
/// Description of the "collection_share" tag state: Shared an album.
///
/// @return An initialized instance.
///
- (instancetype)initWithCollectionShare;

///
/// Initializes union class with tag state of "file_add_comment".
///
/// Description of the "file_add_comment" tag state: Added a file comment.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileAddComment;

///
/// Initializes union class with tag state of "file_like_comment".
///
/// Description of the "file_like_comment" tag state: Liked a file comment. This
/// event is deprecated and will not be logged going forward as the associated
/// product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileLikeComment;

///
/// Initializes union class with tag state of "file_unlike_comment".
///
/// Description of the "file_unlike_comment" tag state: Unliked a file comment.
/// This event is deprecated and will not be logged going forward as the
/// associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileUnlikeComment;

///
/// Initializes union class with tag state of "note_acl_invite_only".
///
/// Description of the "note_acl_invite_only" tag state: Changed a Paper
/// document to be invite-only. This event is deprecated and will not be logged
/// going forward as the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteAclInviteOnly;

///
/// Initializes union class with tag state of "note_acl_link".
///
/// Description of the "note_acl_link" tag state: Changed a Paper document to be
/// link accessible. This event is deprecated and will not be logged going
/// forward as the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteAclLink;

///
/// Initializes union class with tag state of "note_acl_team_link".
///
/// Description of the "note_acl_team_link" tag state: Changed a Paper document
/// to be link accessible for the team. This event is deprecated and will not be
/// logged going forward as the associated product functionality no longer
/// exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteAclTeamLink;

///
/// Initializes union class with tag state of "note_shared".
///
/// Description of the "note_shared" tag state: Shared a Paper doc. This event
/// is deprecated and will not be logged going forward as the associated product
/// functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteShared;

///
/// Initializes union class with tag state of "note_share_receive".
///
/// Description of the "note_share_receive" tag state: Shared Paper document
/// received. This event is deprecated and will not be logged going forward as
/// the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithNoteShareReceive;

///
/// Initializes union class with tag state of "open_note_shared".
///
/// Description of the "open_note_shared" tag state: Opened a shared Paper doc.
/// This event is deprecated and will not be logged going forward as the
/// associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithOpenNoteShared;

///
/// Initializes union class with tag state of "sf_add_group".
///
/// Description of the "sf_add_group" tag state: Added the team to a shared
/// folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfAddGroup;

///
/// Initializes union class with tag state of
/// "sf_allow_non_members_to_view_shared_links".
///
/// Description of the "sf_allow_non_members_to_view_shared_links" tag state:
/// Allowed non collaborators to view links to files in a shared folder. This
/// event is deprecated and will not be logged going forward as the associated
/// product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfAllowNonMembersToViewSharedLinks;

///
/// Initializes union class with tag state of "sf_invite_group".
///
/// Description of the "sf_invite_group" tag state: Invited a group to a shared
/// folder. This event is deprecated and will not be logged going forward as the
/// associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfInviteGroup;

///
/// Initializes union class with tag state of "sf_nest".
///
/// Description of the "sf_nest" tag state: Changed parent of shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfNest;

///
/// Initializes union class with tag state of "sf_team_decline".
///
/// Description of the "sf_team_decline" tag state: Declined a team member's
/// invitation to a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamDecline;

///
/// Initializes union class with tag state of "sf_team_grant_access".
///
/// Description of the "sf_team_grant_access" tag state: Granted access to a
/// shared folder. This event is deprecated and will not be logged going forward
/// as the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamGrantAccess;

///
/// Initializes union class with tag state of "sf_team_invite".
///
/// Description of the "sf_team_invite" tag state: Invited team members to a
/// shared folder. This event is deprecated and will not be logged going forward
/// as the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamInvite;

///
/// Initializes union class with tag state of "sf_team_invite_change_role".
///
/// Description of the "sf_team_invite_change_role" tag state: Changed a team
/// member's role in a shared folder. This event is deprecated and will not be
/// logged going forward as the associated product functionality no longer
/// exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamInviteChangeRole;

///
/// Initializes union class with tag state of "sf_team_join".
///
/// Description of the "sf_team_join" tag state: Joined a team member's shared
/// folder. This event is deprecated and will not be logged going forward as the
/// associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamJoin;

///
/// Initializes union class with tag state of "sf_team_join_from_oob_link".
///
/// Description of the "sf_team_join_from_oob_link" tag state: Joined a team
/// member's shared folder from a link. This event is deprecated and will not be
/// logged going forward as the associated product functionality no longer
/// exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamJoinFromOobLink;

///
/// Initializes union class with tag state of "sf_team_uninvite".
///
/// Description of the "sf_team_uninvite" tag state: Unshared a folder with a
/// team member. This event is deprecated and will not be logged going forward
/// as the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSfTeamUninvite;

///
/// Initializes union class with tag state of "shared_content_add_invitees".
///
/// Description of the "shared_content_add_invitees" tag state: Sent an email
/// invitation to the membership of a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentAddInvitees;

///
/// Initializes union class with tag state of "shared_content_add_link_expiry".
///
/// Description of the "shared_content_add_link_expiry" tag state: Added an
/// expiry to the link for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentAddLinkExpiry;

///
/// Initializes union class with tag state of
/// "shared_content_add_link_password".
///
/// Description of the "shared_content_add_link_password" tag state: Added a
/// password to the link for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentAddLinkPassword;

///
/// Initializes union class with tag state of "shared_content_add_member".
///
/// Description of the "shared_content_add_member" tag state: Added users and/or
/// groups to the membership of a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentAddMember;

///
/// Initializes union class with tag state of
/// "shared_content_change_downloads_policy".
///
/// Description of the "shared_content_change_downloads_policy" tag state:
/// Changed whether members can download the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeDownloadsPolicy;

///
/// Initializes union class with tag state of
/// "shared_content_change_invitee_role".
///
/// Description of the "shared_content_change_invitee_role" tag state: Changed
/// the access type of an invitee to a shared file or folder before the
/// invitation was claimed.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeInviteeRole;

///
/// Initializes union class with tag state of
/// "shared_content_change_link_audience".
///
/// Description of the "shared_content_change_link_audience" tag state: Changed
/// the audience of the link for a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeLinkAudience;

///
/// Initializes union class with tag state of
/// "shared_content_change_link_expiry".
///
/// Description of the "shared_content_change_link_expiry" tag state: Changed
/// the expiry of the link for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeLinkExpiry;

///
/// Initializes union class with tag state of
/// "shared_content_change_link_password".
///
/// Description of the "shared_content_change_link_password" tag state: Changed
/// the password on the link for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeLinkPassword;

///
/// Initializes union class with tag state of
/// "shared_content_change_member_role".
///
/// Description of the "shared_content_change_member_role" tag state: Changed
/// the access type of a shared file or folder member.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeMemberRole;

///
/// Initializes union class with tag state of
/// "shared_content_change_viewer_info_policy".
///
/// Description of the "shared_content_change_viewer_info_policy" tag state:
/// Changed whether members can see who viewed the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentChangeViewerInfoPolicy;

///
/// Initializes union class with tag state of "shared_content_claim_invitation".
///
/// Description of the "shared_content_claim_invitation" tag state: Claimed
/// membership to a team member's shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentClaimInvitation;

///
/// Initializes union class with tag state of "shared_content_copy".
///
/// Description of the "shared_content_copy" tag state: Copied the shared file
/// or folder to own Dropbox.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentCopy;

///
/// Initializes union class with tag state of "shared_content_download".
///
/// Description of the "shared_content_download" tag state: Downloaded the
/// shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentDownload;

///
/// Initializes union class with tag state of
/// "shared_content_relinquish_membership".
///
/// Description of the "shared_content_relinquish_membership" tag state: Left
/// the membership of a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRelinquishMembership;

///
/// Initializes union class with tag state of "shared_content_remove_invitee".
///
/// Description of the "shared_content_remove_invitee" tag state: Removed an
/// invitee from the membership of a shared file or folder before it was
/// claimed.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRemoveInvitee;

///
/// Initializes union class with tag state of
/// "shared_content_remove_link_expiry".
///
/// Description of the "shared_content_remove_link_expiry" tag state: Removed
/// the expiry of the link for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRemoveLinkExpiry;

///
/// Initializes union class with tag state of
/// "shared_content_remove_link_password".
///
/// Description of the "shared_content_remove_link_password" tag state: Removed
/// the password on the link for the shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRemoveLinkPassword;

///
/// Initializes union class with tag state of "shared_content_remove_member".
///
/// Description of the "shared_content_remove_member" tag state: Removed a user
/// or a group from the membership of a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRemoveMember;

///
/// Initializes union class with tag state of "shared_content_request_access".
///
/// Description of the "shared_content_request_access" tag state: Requested to
/// be on the membership of a shared file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentRequestAccess;

///
/// Initializes union class with tag state of "shared_content_unshare".
///
/// Description of the "shared_content_unshare" tag state: Unshared a shared
/// file or folder by clearing its membership and turning off its link.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentUnshare;

///
/// Initializes union class with tag state of "shared_content_view".
///
/// Description of the "shared_content_view" tag state: Previewed the shared
/// file or folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedContentView;

///
/// Initializes union class with tag state of
/// "shared_folder_change_confidentiality".
///
/// Description of the "shared_folder_change_confidentiality" tag state: Set or
/// unset the confidential flag on a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderChangeConfidentiality;

///
/// Initializes union class with tag state of
/// "shared_folder_change_link_policy".
///
/// Description of the "shared_folder_change_link_policy" tag state: Changed who
/// can access the shared folder via a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderChangeLinkPolicy;

///
/// Initializes union class with tag state of
/// "shared_folder_change_member_management_policy".
///
/// Description of the "shared_folder_change_member_management_policy" tag
/// state: Changed who can manage the membership of a shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderChangeMemberManagementPolicy;

///
/// Initializes union class with tag state of
/// "shared_folder_change_member_policy".
///
/// Description of the "shared_folder_change_member_policy" tag state: Changed
/// who can become a member of the shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderChangeMemberPolicy;

///
/// Initializes union class with tag state of "shared_folder_create".
///
/// Description of the "shared_folder_create" tag state: Created a shared
/// folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderCreate;

///
/// Initializes union class with tag state of "shared_folder_mount".
///
/// Description of the "shared_folder_mount" tag state: Added a shared folder to
/// own Dropbox.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderMount;

///
/// Initializes union class with tag state of
/// "shared_folder_transfer_ownership".
///
/// Description of the "shared_folder_transfer_ownership" tag state: Transferred
/// the ownership of a shared folder to another member.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderTransferOwnership;

///
/// Initializes union class with tag state of "shared_folder_unmount".
///
/// Description of the "shared_folder_unmount" tag state: Deleted a shared
/// folder from Dropbox.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedFolderUnmount;

///
/// Initializes union class with tag state of "shared_note_opened".
///
/// Description of the "shared_note_opened" tag state: Shared Paper document was
/// opened. This event is deprecated and will not be logged going forward as the
/// associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharedNoteOpened;

///
/// Initializes union class with tag state of "shmodel_app_create".
///
/// Description of the "shmodel_app_create" tag state: Created a link to a file
/// using an app.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelAppCreate;

///
/// Initializes union class with tag state of "shmodel_create".
///
/// Description of the "shmodel_create" tag state: Created a new link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelCreate;

///
/// Initializes union class with tag state of "shmodel_disable".
///
/// Description of the "shmodel_disable" tag state: Removed a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelDisable;

///
/// Initializes union class with tag state of "shmodel_fb_share".
///
/// Description of the "shmodel_fb_share" tag state: Shared a link with Facebook
/// users.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelFbShare;

///
/// Initializes union class with tag state of "shmodel_group_share".
///
/// Description of the "shmodel_group_share" tag state: Shared a link with a
/// group. This event is deprecated and will not be logged going forward as the
/// associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelGroupShare;

///
/// Initializes union class with tag state of "shmodel_remove_expiration".
///
/// Description of the "shmodel_remove_expiration" tag state: Removed the
/// expiration date from a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelRemoveExpiration;

///
/// Initializes union class with tag state of "shmodel_set_expiration".
///
/// Description of the "shmodel_set_expiration" tag state: Added an expiration
/// date to a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelSetExpiration;

///
/// Initializes union class with tag state of "shmodel_team_copy".
///
/// Description of the "shmodel_team_copy" tag state: Added a team member's
/// file/folder to their Dropbox from a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelTeamCopy;

///
/// Initializes union class with tag state of "shmodel_team_download".
///
/// Description of the "shmodel_team_download" tag state: Downloaded a team
/// member's file/folder from a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelTeamDownload;

///
/// Initializes union class with tag state of "shmodel_team_share".
///
/// Description of the "shmodel_team_share" tag state: Shared a link with team
/// members.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelTeamShare;

///
/// Initializes union class with tag state of "shmodel_team_view".
///
/// Description of the "shmodel_team_view" tag state: Opened a team member's
/// link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelTeamView;

///
/// Initializes union class with tag state of "shmodel_visibility_password".
///
/// Description of the "shmodel_visibility_password" tag state:
/// Password-protected a link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelVisibilityPassword;

///
/// Initializes union class with tag state of "shmodel_visibility_public".
///
/// Description of the "shmodel_visibility_public" tag state: Made a file/folder
/// visible to anyone with the link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelVisibilityPublic;

///
/// Initializes union class with tag state of "shmodel_visibility_team_only".
///
/// Description of the "shmodel_visibility_team_only" tag state: Made a
/// file/folder visible only to team members with the link.
///
/// @return An initialized instance.
///
- (instancetype)initWithShmodelVisibilityTeamOnly;

///
/// Initializes union class with tag state of "remove_logout_url".
///
/// Description of the "remove_logout_url" tag state: Removed single sign-on
/// logout URL. This event is deprecated and will not be logged going forward as
/// the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithRemoveLogoutUrl;

///
/// Initializes union class with tag state of "remove_sso_url".
///
/// Description of the "remove_sso_url" tag state: Changed the sign-out URL for
/// SSO. This event is deprecated and will not be logged going forward as the
/// associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithRemoveSsoUrl;

///
/// Initializes union class with tag state of "sso_change_cert".
///
/// Description of the "sso_change_cert" tag state: Changed the X.509
/// certificate for SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangeCert;

///
/// Initializes union class with tag state of "sso_change_login_url".
///
/// Description of the "sso_change_login_url" tag state: Changed the sign-in URL
/// for SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangeLoginUrl;

///
/// Initializes union class with tag state of "sso_change_logout_url".
///
/// Description of the "sso_change_logout_url" tag state: Changed the sign-out
/// URL for SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangeLogoutUrl;

///
/// Initializes union class with tag state of "sso_change_saml_identity_mode".
///
/// Description of the "sso_change_saml_identity_mode" tag state: Changed the
/// SAML identity mode for SSO.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangeSamlIdentityMode;

///
/// Initializes union class with tag state of "team_folder_change_status".
///
/// Description of the "team_folder_change_status" tag state: Changed the
/// archival status of a team folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderChangeStatus;

///
/// Initializes union class with tag state of "team_folder_create".
///
/// Description of the "team_folder_create" tag state: Created a new team folder
/// in active status.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderCreate;

///
/// Initializes union class with tag state of "team_folder_downgrade".
///
/// Description of the "team_folder_downgrade" tag state: Downgraded a team
/// folder to a regular shared folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderDowngrade;

///
/// Initializes union class with tag state of "team_folder_permanently_delete".
///
/// Description of the "team_folder_permanently_delete" tag state: Permanently
/// deleted an archived team folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderPermanentlyDelete;

///
/// Initializes union class with tag state of "team_folder_rename".
///
/// Description of the "team_folder_rename" tag state: Renamed an active or
/// archived team folder.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamFolderRename;

///
/// Initializes union class with tag state of "account_capture_change_policy".
///
/// Description of the "account_capture_change_policy" tag state: Changed the
/// account capture policy on a domain belonging to the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithAccountCaptureChangePolicy;

///
/// Initializes union class with tag state of "allow_download_disabled".
///
/// Description of the "allow_download_disabled" tag state: Disabled allow
/// downloads. This event is deprecated and will not be logged going forward as
/// the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithAllowDownloadDisabled;

///
/// Initializes union class with tag state of "allow_download_enabled".
///
/// Description of the "allow_download_enabled" tag state: Enabled allow
/// downloads. This event is deprecated and will not be logged going forward as
/// the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithAllowDownloadEnabled;

///
/// Initializes union class with tag state of
/// "data_placement_restriction_change_policy".
///
/// Description of the "data_placement_restriction_change_policy" tag state: Set
/// a restriction policy regarding the location of data centers where team data
/// resides.
///
/// @return An initialized instance.
///
- (instancetype)initWithDataPlacementRestrictionChangePolicy;

///
/// Initializes union class with tag state of
/// "data_placement_restriction_satisfy_policy".
///
/// Description of the "data_placement_restriction_satisfy_policy" tag state:
/// Satisfied a previously set restriction policy regarding the location of data
/// centers where team data resides (i.e. all data have been migrated according
/// to the restriction placed).
///
/// @return An initialized instance.
///
- (instancetype)initWithDataPlacementRestrictionSatisfyPolicy;

///
/// Initializes union class with tag state of
/// "device_approvals_change_desktop_policy".
///
/// Description of the "device_approvals_change_desktop_policy" tag state: Set
/// or removed a limit on the number of computers each team member can link to
/// their work Dropbox account.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceApprovalsChangeDesktopPolicy;

///
/// Initializes union class with tag state of
/// "device_approvals_change_mobile_policy".
///
/// Description of the "device_approvals_change_mobile_policy" tag state: Set or
/// removed a limit on the number of mobiles devices each team member can link
/// to their work Dropbox account.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceApprovalsChangeMobilePolicy;

///
/// Initializes union class with tag state of
/// "device_approvals_change_overage_action".
///
/// Description of the "device_approvals_change_overage_action" tag state:
/// Changed the action taken when a team member is already over the limits (e.g
/// when they join the team, an admin lowers limits, etc.).
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceApprovalsChangeOverageAction;

///
/// Initializes union class with tag state of
/// "device_approvals_change_unlink_action".
///
/// Description of the "device_approvals_change_unlink_action" tag state:
/// Changed the action taken with respect to approval limits when a team member
/// unlinks an approved device.
///
/// @return An initialized instance.
///
- (instancetype)initWithDeviceApprovalsChangeUnlinkAction;

///
/// Initializes union class with tag state of "emm_add_exception".
///
/// Description of the "emm_add_exception" tag state: Added an exception for one
/// or more team members to optionally use the regular Dropbox app when EMM is
/// enabled.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmAddException;

///
/// Initializes union class with tag state of "emm_change_policy".
///
/// Description of the "emm_change_policy" tag state: Enabled or disabled
/// enterprise mobility management for team members.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmChangePolicy;

///
/// Initializes union class with tag state of "emm_remove_exception".
///
/// Description of the "emm_remove_exception" tag state: Removed an exception
/// for one or more team members to optionally use the regular Dropbox app when
/// EMM is enabled.
///
/// @return An initialized instance.
///
- (instancetype)initWithEmmRemoveException;

///
/// Initializes union class with tag state of
/// "extended_version_history_change_policy".
///
/// Description of the "extended_version_history_change_policy" tag state:
/// Accepted or opted out of extended version history.
///
/// @return An initialized instance.
///
- (instancetype)initWithExtendedVersionHistoryChangePolicy;

///
/// Initializes union class with tag state of "file_comments_change_policy".
///
/// Description of the "file_comments_change_policy" tag state: Enabled or
/// disabled commenting on team files.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileCommentsChangePolicy;

///
/// Initializes union class with tag state of "file_requests_change_policy".
///
/// Description of the "file_requests_change_policy" tag state: Enabled or
/// disabled file requests.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestsChangePolicy;

///
/// Initializes union class with tag state of "file_requests_emails_enabled".
///
/// Description of the "file_requests_emails_enabled" tag state: Enabled file
/// request emails for everyone. This event is deprecated and will not be logged
/// going forward as the associated product functionality no longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestsEmailsEnabled;

///
/// Initializes union class with tag state of
/// "file_requests_emails_restricted_to_team_only".
///
/// Description of the "file_requests_emails_restricted_to_team_only" tag state:
/// Allowed file request emails for the team. This event is deprecated and will
/// not be logged going forward as the associated product functionality no
/// longer exists.
///
/// @return An initialized instance.
///
- (instancetype)initWithFileRequestsEmailsRestrictedToTeamOnly;

///
/// Initializes union class with tag state of "google_sso_change_policy".
///
/// Description of the "google_sso_change_policy" tag state: Enabled or disabled
/// Google single sign-on for the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithGoogleSsoChangePolicy;

///
/// Initializes union class with tag state of
/// "group_user_management_change_policy".
///
/// Description of the "group_user_management_change_policy" tag state: Changed
/// who can create groups.
///
/// @return An initialized instance.
///
- (instancetype)initWithGroupUserManagementChangePolicy;

///
/// Initializes union class with tag state of "member_requests_change_policy".
///
/// Description of the "member_requests_change_policy" tag state: Changed
/// whether users can find the team when not invited.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberRequestsChangePolicy;

///
/// Initializes union class with tag state of
/// "member_space_limits_add_exception".
///
/// Description of the "member_space_limits_add_exception" tag state: Added an
/// exception for one or more team members to bypass space limits imposed by
/// policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSpaceLimitsAddException;

///
/// Initializes union class with tag state of
/// "member_space_limits_change_policy".
///
/// Description of the "member_space_limits_change_policy" tag state: Changed
/// the storage limits applied to team members by policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSpaceLimitsChangePolicy;

///
/// Initializes union class with tag state of
/// "member_space_limits_remove_exception".
///
/// Description of the "member_space_limits_remove_exception" tag state: Removed
/// an exception for one or more team members to bypass space limits imposed by
/// policy.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSpaceLimitsRemoveException;

///
/// Initializes union class with tag state of
/// "member_suggestions_change_policy".
///
/// Description of the "member_suggestions_change_policy" tag state: Enabled or
/// disabled the option for team members to suggest new members to add to the
/// team.
///
/// @return An initialized instance.
///
- (instancetype)initWithMemberSuggestionsChangePolicy;

///
/// Initializes union class with tag state of
/// "microsoft_office_addin_change_policy".
///
/// Description of the "microsoft_office_addin_change_policy" tag state: Enabled
/// or disabled the Microsoft Office add-in, which lets team members save files
/// to Dropbox directly from Microsoft Office.
///
/// @return An initialized instance.
///
- (instancetype)initWithMicrosoftOfficeAddinChangePolicy;

///
/// Initializes union class with tag state of "network_control_change_policy".
///
/// Description of the "network_control_change_policy" tag state: Enabled or
/// disabled network control.
///
/// @return An initialized instance.
///
- (instancetype)initWithNetworkControlChangePolicy;

///
/// Initializes union class with tag state of "paper_change_deployment_policy".
///
/// Description of the "paper_change_deployment_policy" tag state: Changed
/// whether Dropbox Paper, when enabled, is deployed to all teams or to specific
/// members of the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperChangeDeploymentPolicy;

///
/// Initializes union class with tag state of "paper_change_member_policy".
///
/// Description of the "paper_change_member_policy" tag state: Changed whether
/// team members can share Paper documents externally (i.e. outside the team),
/// and if so, whether they should be accessible only by team members or anyone
/// by default.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperChangeMemberPolicy;

///
/// Initializes union class with tag state of "paper_change_policy".
///
/// Description of the "paper_change_policy" tag state: Enabled or disabled
/// Dropbox Paper for the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithPaperChangePolicy;

///
/// Initializes union class with tag state of "permanent_delete_change_policy".
///
/// Description of the "permanent_delete_change_policy" tag state: Enabled or
/// disabled the ability of team members to permanently delete content.
///
/// @return An initialized instance.
///
- (instancetype)initWithPermanentDeleteChangePolicy;

///
/// Initializes union class with tag state of
/// "sharing_change_folder_join_policy".
///
/// Description of the "sharing_change_folder_join_policy" tag state: Changed
/// whether team members can join shared folders owned externally (i.e. outside
/// the team).
///
/// @return An initialized instance.
///
- (instancetype)initWithSharingChangeFolderJoinPolicy;

///
/// Initializes union class with tag state of "sharing_change_link_policy".
///
/// Description of the "sharing_change_link_policy" tag state: Changed whether
/// team members can share links externally (i.e. outside the team), and if so,
/// whether links should be accessible only by team members or anyone by
/// default.
///
/// @return An initialized instance.
///
- (instancetype)initWithSharingChangeLinkPolicy;

///
/// Initializes union class with tag state of "sharing_change_member_policy".
///
/// Description of the "sharing_change_member_policy" tag state: Changed whether
/// team members can share files and folders externally (i.e. outside the team).
///
/// @return An initialized instance.
///
- (instancetype)initWithSharingChangeMemberPolicy;

///
/// Initializes union class with tag state of "smart_sync_change_policy".
///
/// Description of the "smart_sync_change_policy" tag state: Changed the default
/// Smart Sync policy for team members.
///
/// @return An initialized instance.
///
- (instancetype)initWithSmartSyncChangePolicy;

///
/// Initializes union class with tag state of "sso_change_policy".
///
/// Description of the "sso_change_policy" tag state: Change the single sign-on
/// policy for the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithSsoChangePolicy;

///
/// Initializes union class with tag state of "tfa_change_policy".
///
/// Description of the "tfa_change_policy" tag state: Change two-step
/// verification policy for the team.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaChangePolicy;

///
/// Initializes union class with tag state of "two_account_change_policy".
///
/// Description of the "two_account_change_policy" tag state: Enabled or
/// disabled the option for team members to link a personal Dropbox account in
/// addition to their work account to the same computer.
///
/// @return An initialized instance.
///
- (instancetype)initWithTwoAccountChangePolicy;

///
/// Initializes union class with tag state of
/// "web_sessions_change_fixed_length_policy".
///
/// Description of the "web_sessions_change_fixed_length_policy" tag state:
/// Changed how long team members can stay signed in to Dropbox on the web.
///
/// @return An initialized instance.
///
- (instancetype)initWithWebSessionsChangeFixedLengthPolicy;

///
/// Initializes union class with tag state of
/// "web_sessions_change_idle_length_policy".
///
/// Description of the "web_sessions_change_idle_length_policy" tag state:
/// Changed how long team members can be idle while signed in to Dropbox on the
/// web.
///
/// @return An initialized instance.
///
- (instancetype)initWithWebSessionsChangeIdleLengthPolicy;

///
/// Initializes union class with tag state of "team_profile_add_logo".
///
/// Description of the "team_profile_add_logo" tag state: Added a team logo to
/// be displayed on shared link headers.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamProfileAddLogo;

///
/// Initializes union class with tag state of "team_profile_change_logo".
///
/// Description of the "team_profile_change_logo" tag state: Changed the team
/// logo to be displayed on shared link headers.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamProfileChangeLogo;

///
/// Initializes union class with tag state of "team_profile_change_name".
///
/// Description of the "team_profile_change_name" tag state: Changed the team
/// name.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamProfileChangeName;

///
/// Initializes union class with tag state of "team_profile_remove_logo".
///
/// Description of the "team_profile_remove_logo" tag state: Removed the team
/// logo to be displayed on shared link headers.
///
/// @return An initialized instance.
///
- (instancetype)initWithTeamProfileRemoveLogo;

///
/// Initializes union class with tag state of "tfa_add_backup_phone".
///
/// Description of the "tfa_add_backup_phone" tag state: Added a backup phone
/// for two-step verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaAddBackupPhone;

///
/// Initializes union class with tag state of "tfa_add_security_key".
///
/// Description of the "tfa_add_security_key" tag state: Added a security key
/// for two-step verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaAddSecurityKey;

///
/// Initializes union class with tag state of "tfa_change_backup_phone".
///
/// Description of the "tfa_change_backup_phone" tag state: Changed the backup
/// phone for two-step verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaChangeBackupPhone;

///
/// Initializes union class with tag state of "tfa_change_status".
///
/// Description of the "tfa_change_status" tag state: Enabled, disabled or
/// changed the configuration for two-step verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaChangeStatus;

///
/// Initializes union class with tag state of "tfa_remove_backup_phone".
///
/// Description of the "tfa_remove_backup_phone" tag state: Removed the backup
/// phone for two-step verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaRemoveBackupPhone;

///
/// Initializes union class with tag state of "tfa_remove_security_key".
///
/// Description of the "tfa_remove_security_key" tag state: Removed a security
/// key for two-step verification.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaRemoveSecurityKey;

///
/// Initializes union class with tag state of "tfa_reset".
///
/// Description of the "tfa_reset" tag state: Reset two-step verification for
/// team member.
///
/// @return An initialized instance.
///
- (instancetype)initWithTfaReset;

///
/// Initializes union class with tag state of "other".
///
/// @return An initialized instance.
///
- (instancetype)initWithOther;

- (instancetype)init NS_UNAVAILABLE;

#pragma mark - Tag state methods

///
/// Retrieves whether the union's current tag state has value
/// "member_change_membership_type".
///
/// @return Whether the union's current tag state has value
/// "member_change_membership_type".
///
- (BOOL)isMemberChangeMembershipType;

///
/// Retrieves whether the union's current tag state has value
/// "member_permanently_delete_account_contents".
///
/// @return Whether the union's current tag state has value
/// "member_permanently_delete_account_contents".
///
- (BOOL)isMemberPermanentlyDeleteAccountContents;

///
/// Retrieves whether the union's current tag state has value
/// "member_space_limits_change_status".
///
/// @return Whether the union's current tag state has value
/// "member_space_limits_change_status".
///
- (BOOL)isMemberSpaceLimitsChangeStatus;

///
/// Retrieves whether the union's current tag state has value
/// "member_transfer_account_contents".
///
/// @return Whether the union's current tag state has value
/// "member_transfer_account_contents".
///
- (BOOL)isMemberTransferAccountContents;

///
/// Retrieves whether the union's current tag state has value
/// "paper_enabled_users_group_addition".
///
/// @return Whether the union's current tag state has value
/// "paper_enabled_users_group_addition".
///
- (BOOL)isPaperEnabledUsersGroupAddition;

///
/// Retrieves whether the union's current tag state has value
/// "paper_enabled_users_group_removal".
///
/// @return Whether the union's current tag state has value
/// "paper_enabled_users_group_removal".
///
- (BOOL)isPaperEnabledUsersGroupRemoval;

///
/// Retrieves whether the union's current tag state has value
/// "paper_external_view_allow".
///
/// @return Whether the union's current tag state has value
/// "paper_external_view_allow".
///
- (BOOL)isPaperExternalViewAllow;

///
/// Retrieves whether the union's current tag state has value
/// "paper_external_view_default_team".
///
/// @return Whether the union's current tag state has value
/// "paper_external_view_default_team".
///
- (BOOL)isPaperExternalViewDefaultTeam;

///
/// Retrieves whether the union's current tag state has value
/// "paper_external_view_forbid".
///
/// @return Whether the union's current tag state has value
/// "paper_external_view_forbid".
///
- (BOOL)isPaperExternalViewForbid;

///
/// Retrieves whether the union's current tag state has value
/// "sf_external_invite_warn".
///
/// @return Whether the union's current tag state has value
/// "sf_external_invite_warn".
///
- (BOOL)isSfExternalInviteWarn;

///
/// Retrieves whether the union's current tag state has value "team_merge".
///
/// @return Whether the union's current tag state has value "team_merge".
///
- (BOOL)isTeamMerge;

///
/// Retrieves whether the union's current tag state has value "app_link_team".
///
/// @return Whether the union's current tag state has value "app_link_team".
///
- (BOOL)isAppLinkTeam;

///
/// Retrieves whether the union's current tag state has value "app_link_user".
///
/// @return Whether the union's current tag state has value "app_link_user".
///
- (BOOL)isAppLinkUser;

///
/// Retrieves whether the union's current tag state has value "app_unlink_team".
///
/// @return Whether the union's current tag state has value "app_unlink_team".
///
- (BOOL)isAppUnlinkTeam;

///
/// Retrieves whether the union's current tag state has value "app_unlink_user".
///
/// @return Whether the union's current tag state has value "app_unlink_user".
///
- (BOOL)isAppUnlinkUser;

///
/// Retrieves whether the union's current tag state has value
/// "device_change_ip_desktop".
///
/// @return Whether the union's current tag state has value
/// "device_change_ip_desktop".
///
- (BOOL)isDeviceChangeIpDesktop;

///
/// Retrieves whether the union's current tag state has value
/// "device_change_ip_mobile".
///
/// @return Whether the union's current tag state has value
/// "device_change_ip_mobile".
///
- (BOOL)isDeviceChangeIpMobile;

///
/// Retrieves whether the union's current tag state has value
/// "device_change_ip_web".
///
/// @return Whether the union's current tag state has value
/// "device_change_ip_web".
///
- (BOOL)isDeviceChangeIpWeb;

///
/// Retrieves whether the union's current tag state has value
/// "device_delete_on_unlink_fail".
///
/// @return Whether the union's current tag state has value
/// "device_delete_on_unlink_fail".
///
- (BOOL)isDeviceDeleteOnUnlinkFail;

///
/// Retrieves whether the union's current tag state has value
/// "device_delete_on_unlink_success".
///
/// @return Whether the union's current tag state has value
/// "device_delete_on_unlink_success".
///
- (BOOL)isDeviceDeleteOnUnlinkSuccess;

///
/// Retrieves whether the union's current tag state has value
/// "device_link_fail".
///
/// @return Whether the union's current tag state has value "device_link_fail".
///
- (BOOL)isDeviceLinkFail;

///
/// Retrieves whether the union's current tag state has value
/// "device_link_success".
///
/// @return Whether the union's current tag state has value
/// "device_link_success".
///
- (BOOL)isDeviceLinkSuccess;

///
/// Retrieves whether the union's current tag state has value
/// "device_management_disabled".
///
/// @return Whether the union's current tag state has value
/// "device_management_disabled".
///
- (BOOL)isDeviceManagementDisabled;

///
/// Retrieves whether the union's current tag state has value
/// "device_management_enabled".
///
/// @return Whether the union's current tag state has value
/// "device_management_enabled".
///
- (BOOL)isDeviceManagementEnabled;

///
/// Retrieves whether the union's current tag state has value "device_unlink".
///
/// @return Whether the union's current tag state has value "device_unlink".
///
- (BOOL)isDeviceUnlink;

///
/// Retrieves whether the union's current tag state has value
/// "emm_refresh_auth_token".
///
/// @return Whether the union's current tag state has value
/// "emm_refresh_auth_token".
///
- (BOOL)isEmmRefreshAuthToken;

///
/// Retrieves whether the union's current tag state has value
/// "account_capture_change_availability".
///
/// @return Whether the union's current tag state has value
/// "account_capture_change_availability".
///
- (BOOL)isAccountCaptureChangeAvailability;

///
/// Retrieves whether the union's current tag state has value
/// "account_capture_migrate_account".
///
/// @return Whether the union's current tag state has value
/// "account_capture_migrate_account".
///
- (BOOL)isAccountCaptureMigrateAccount;

///
/// Retrieves whether the union's current tag state has value
/// "account_capture_relinquish_account".
///
/// @return Whether the union's current tag state has value
/// "account_capture_relinquish_account".
///
- (BOOL)isAccountCaptureRelinquishAccount;

///
/// Retrieves whether the union's current tag state has value
/// "disabled_domain_invites".
///
/// @return Whether the union's current tag state has value
/// "disabled_domain_invites".
///
- (BOOL)isDisabledDomainInvites;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_approve_request_to_join_team".
///
/// @return Whether the union's current tag state has value
/// "domain_invites_approve_request_to_join_team".
///
- (BOOL)isDomainInvitesApproveRequestToJoinTeam;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_decline_request_to_join_team".
///
/// @return Whether the union's current tag state has value
/// "domain_invites_decline_request_to_join_team".
///
- (BOOL)isDomainInvitesDeclineRequestToJoinTeam;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_email_existing_users".
///
/// @return Whether the union's current tag state has value
/// "domain_invites_email_existing_users".
///
- (BOOL)isDomainInvitesEmailExistingUsers;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_request_to_join_team".
///
/// @return Whether the union's current tag state has value
/// "domain_invites_request_to_join_team".
///
- (BOOL)isDomainInvitesRequestToJoinTeam;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_set_invite_new_user_pref_to_no".
///
/// @return Whether the union's current tag state has value
/// "domain_invites_set_invite_new_user_pref_to_no".
///
- (BOOL)isDomainInvitesSetInviteNewUserPrefToNo;

///
/// Retrieves whether the union's current tag state has value
/// "domain_invites_set_invite_new_user_pref_to_yes".
///
/// @return Whether the union's current tag state has value
/// "domain_invites_set_invite_new_user_pref_to_yes".
///
- (BOOL)isDomainInvitesSetInviteNewUserPrefToYes;

///
/// Retrieves whether the union's current tag state has value
/// "domain_verification_add_domain_fail".
///
/// @return Whether the union's current tag state has value
/// "domain_verification_add_domain_fail".
///
- (BOOL)isDomainVerificationAddDomainFail;

///
/// Retrieves whether the union's current tag state has value
/// "domain_verification_add_domain_success".
///
/// @return Whether the union's current tag state has value
/// "domain_verification_add_domain_success".
///
- (BOOL)isDomainVerificationAddDomainSuccess;

///
/// Retrieves whether the union's current tag state has value
/// "domain_verification_remove_domain".
///
/// @return Whether the union's current tag state has value
/// "domain_verification_remove_domain".
///
- (BOOL)isDomainVerificationRemoveDomain;

///
/// Retrieves whether the union's current tag state has value
/// "enabled_domain_invites".
///
/// @return Whether the union's current tag state has value
/// "enabled_domain_invites".
///
- (BOOL)isEnabledDomainInvites;

///
/// Retrieves whether the union's current tag state has value "create_folder".
///
/// @return Whether the union's current tag state has value "create_folder".
///
- (BOOL)isCreateFolder;

///
/// Retrieves whether the union's current tag state has value "file_add".
///
/// @return Whether the union's current tag state has value "file_add".
///
- (BOOL)isFileAdd;

///
/// Retrieves whether the union's current tag state has value "file_copy".
///
/// @return Whether the union's current tag state has value "file_copy".
///
- (BOOL)isFileCopy;

///
/// Retrieves whether the union's current tag state has value "file_delete".
///
/// @return Whether the union's current tag state has value "file_delete".
///
- (BOOL)isFileDelete;

///
/// Retrieves whether the union's current tag state has value "file_download".
///
/// @return Whether the union's current tag state has value "file_download".
///
- (BOOL)isFileDownload;

///
/// Retrieves whether the union's current tag state has value "file_edit".
///
/// @return Whether the union's current tag state has value "file_edit".
///
- (BOOL)isFileEdit;

///
/// Retrieves whether the union's current tag state has value
/// "file_get_copy_reference".
///
/// @return Whether the union's current tag state has value
/// "file_get_copy_reference".
///
- (BOOL)isFileGetCopyReference;

///
/// Retrieves whether the union's current tag state has value "file_move".
///
/// @return Whether the union's current tag state has value "file_move".
///
- (BOOL)isFileMove;

///
/// Retrieves whether the union's current tag state has value
/// "file_permanently_delete".
///
/// @return Whether the union's current tag state has value
/// "file_permanently_delete".
///
- (BOOL)isFilePermanentlyDelete;

///
/// Retrieves whether the union's current tag state has value "file_preview".
///
/// @return Whether the union's current tag state has value "file_preview".
///
- (BOOL)isFilePreview;

///
/// Retrieves whether the union's current tag state has value "file_rename".
///
/// @return Whether the union's current tag state has value "file_rename".
///
- (BOOL)isFileRename;

///
/// Retrieves whether the union's current tag state has value "file_restore".
///
/// @return Whether the union's current tag state has value "file_restore".
///
- (BOOL)isFileRestore;

///
/// Retrieves whether the union's current tag state has value "file_revert".
///
/// @return Whether the union's current tag state has value "file_revert".
///
- (BOOL)isFileRevert;

///
/// Retrieves whether the union's current tag state has value
/// "file_rollback_changes".
///
/// @return Whether the union's current tag state has value
/// "file_rollback_changes".
///
- (BOOL)isFileRollbackChanges;

///
/// Retrieves whether the union's current tag state has value
/// "file_save_copy_reference".
///
/// @return Whether the union's current tag state has value
/// "file_save_copy_reference".
///
- (BOOL)isFileSaveCopyReference;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_add_deadline".
///
/// @return Whether the union's current tag state has value
/// "file_request_add_deadline".
///
- (BOOL)isFileRequestAddDeadline;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_change_folder".
///
/// @return Whether the union's current tag state has value
/// "file_request_change_folder".
///
- (BOOL)isFileRequestChangeFolder;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_change_title".
///
/// @return Whether the union's current tag state has value
/// "file_request_change_title".
///
- (BOOL)isFileRequestChangeTitle;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_close".
///
/// @return Whether the union's current tag state has value
/// "file_request_close".
///
- (BOOL)isFileRequestClose;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_create".
///
/// @return Whether the union's current tag state has value
/// "file_request_create".
///
- (BOOL)isFileRequestCreate;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_receive_file".
///
/// @return Whether the union's current tag state has value
/// "file_request_receive_file".
///
- (BOOL)isFileRequestReceiveFile;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_remove_deadline".
///
/// @return Whether the union's current tag state has value
/// "file_request_remove_deadline".
///
- (BOOL)isFileRequestRemoveDeadline;

///
/// Retrieves whether the union's current tag state has value
/// "file_request_send".
///
/// @return Whether the union's current tag state has value "file_request_send".
///
- (BOOL)isFileRequestSend;

///
/// Retrieves whether the union's current tag state has value
/// "group_add_external_id".
///
/// @return Whether the union's current tag state has value
/// "group_add_external_id".
///
- (BOOL)isGroupAddExternalId;

///
/// Retrieves whether the union's current tag state has value
/// "group_add_member".
///
/// @return Whether the union's current tag state has value "group_add_member".
///
- (BOOL)isGroupAddMember;

///
/// Retrieves whether the union's current tag state has value
/// "group_change_external_id".
///
/// @return Whether the union's current tag state has value
/// "group_change_external_id".
///
- (BOOL)isGroupChangeExternalId;

///
/// Retrieves whether the union's current tag state has value
/// "group_change_management_type".
///
/// @return Whether the union's current tag state has value
/// "group_change_management_type".
///
- (BOOL)isGroupChangeManagementType;

///
/// Retrieves whether the union's current tag state has value
/// "group_change_member_role".
///
/// @return Whether the union's current tag state has value
/// "group_change_member_role".
///
- (BOOL)isGroupChangeMemberRole;

///
/// Retrieves whether the union's current tag state has value "group_create".
///
/// @return Whether the union's current tag state has value "group_create".
///
- (BOOL)isGroupCreate;

///
/// Retrieves whether the union's current tag state has value "group_delete".
///
/// @return Whether the union's current tag state has value "group_delete".
///
- (BOOL)isGroupDelete;

///
/// Retrieves whether the union's current tag state has value
/// "group_description_updated".
///
/// @return Whether the union's current tag state has value
/// "group_description_updated".
///
- (BOOL)isGroupDescriptionUpdated;

///
/// Retrieves whether the union's current tag state has value
/// "group_join_policy_updated".
///
/// @return Whether the union's current tag state has value
/// "group_join_policy_updated".
///
- (BOOL)isGroupJoinPolicyUpdated;

///
/// Retrieves whether the union's current tag state has value "group_moved".
///
/// @return Whether the union's current tag state has value "group_moved".
///
- (BOOL)isGroupMoved;

///
/// Retrieves whether the union's current tag state has value
/// "group_remove_external_id".
///
/// @return Whether the union's current tag state has value
/// "group_remove_external_id".
///
- (BOOL)isGroupRemoveExternalId;

///
/// Retrieves whether the union's current tag state has value
/// "group_remove_member".
///
/// @return Whether the union's current tag state has value
/// "group_remove_member".
///
- (BOOL)isGroupRemoveMember;

///
/// Retrieves whether the union's current tag state has value "group_rename".
///
/// @return Whether the union's current tag state has value "group_rename".
///
- (BOOL)isGroupRename;

///
/// Retrieves whether the union's current tag state has value
/// "emm_login_success".
///
/// @return Whether the union's current tag state has value "emm_login_success".
///
- (BOOL)isEmmLoginSuccess;

///
/// Retrieves whether the union's current tag state has value "logout".
///
/// @return Whether the union's current tag state has value "logout".
///
- (BOOL)isLogout;

///
/// Retrieves whether the union's current tag state has value
/// "password_login_fail".
///
/// @return Whether the union's current tag state has value
/// "password_login_fail".
///
- (BOOL)isPasswordLoginFail;

///
/// Retrieves whether the union's current tag state has value
/// "password_login_success".
///
/// @return Whether the union's current tag state has value
/// "password_login_success".
///
- (BOOL)isPasswordLoginSuccess;

///
/// Retrieves whether the union's current tag state has value
/// "reseller_support_session_end".
///
/// @return Whether the union's current tag state has value
/// "reseller_support_session_end".
///
- (BOOL)isResellerSupportSessionEnd;

///
/// Retrieves whether the union's current tag state has value
/// "reseller_support_session_start".
///
/// @return Whether the union's current tag state has value
/// "reseller_support_session_start".
///
- (BOOL)isResellerSupportSessionStart;

///
/// Retrieves whether the union's current tag state has value
/// "sign_in_as_session_end".
///
/// @return Whether the union's current tag state has value
/// "sign_in_as_session_end".
///
- (BOOL)isSignInAsSessionEnd;

///
/// Retrieves whether the union's current tag state has value
/// "sign_in_as_session_start".
///
/// @return Whether the union's current tag state has value
/// "sign_in_as_session_start".
///
- (BOOL)isSignInAsSessionStart;

///
/// Retrieves whether the union's current tag state has value "sso_login_fail".
///
/// @return Whether the union's current tag state has value "sso_login_fail".
///
- (BOOL)isSsoLoginFail;

///
/// Retrieves whether the union's current tag state has value "member_add_name".
///
/// @return Whether the union's current tag state has value "member_add_name".
///
- (BOOL)isMemberAddName;

///
/// Retrieves whether the union's current tag state has value
/// "member_change_email".
///
/// @return Whether the union's current tag state has value
/// "member_change_email".
///
- (BOOL)isMemberChangeEmail;

///
/// Retrieves whether the union's current tag state has value
/// "member_change_name".
///
/// @return Whether the union's current tag state has value
/// "member_change_name".
///
- (BOOL)isMemberChangeName;

///
/// Retrieves whether the union's current tag state has value
/// "member_change_role".
///
/// @return Whether the union's current tag state has value
/// "member_change_role".
///
- (BOOL)isMemberChangeRole;

///
/// Retrieves whether the union's current tag state has value "member_invite".
///
/// @return Whether the union's current tag state has value "member_invite".
///
- (BOOL)isMemberInvite;

///
/// Retrieves whether the union's current tag state has value "member_join".
///
/// @return Whether the union's current tag state has value "member_join".
///
- (BOOL)isMemberJoin;

///
/// Retrieves whether the union's current tag state has value "member_leave".
///
/// @return Whether the union's current tag state has value "member_leave".
///
- (BOOL)isMemberLeave;

///
/// Retrieves whether the union's current tag state has value "member_recover".
///
/// @return Whether the union's current tag state has value "member_recover".
///
- (BOOL)isMemberRecover;

///
/// Retrieves whether the union's current tag state has value "member_suggest".
///
/// @return Whether the union's current tag state has value "member_suggest".
///
- (BOOL)isMemberSuggest;

///
/// Retrieves whether the union's current tag state has value "member_suspend".
///
/// @return Whether the union's current tag state has value "member_suspend".
///
- (BOOL)isMemberSuspend;

///
/// Retrieves whether the union's current tag state has value
/// "member_unsuspend".
///
/// @return Whether the union's current tag state has value "member_unsuspend".
///
- (BOOL)isMemberUnsuspend;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_add_member".
///
/// @return Whether the union's current tag state has value
/// "paper_content_add_member".
///
- (BOOL)isPaperContentAddMember;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_add_to_folder".
///
/// @return Whether the union's current tag state has value
/// "paper_content_add_to_folder".
///
- (BOOL)isPaperContentAddToFolder;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_archive".
///
/// @return Whether the union's current tag state has value
/// "paper_content_archive".
///
- (BOOL)isPaperContentArchive;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_change_subscription".
///
/// @return Whether the union's current tag state has value
/// "paper_content_change_subscription".
///
- (BOOL)isPaperContentChangeSubscription;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_create".
///
/// @return Whether the union's current tag state has value
/// "paper_content_create".
///
- (BOOL)isPaperContentCreate;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_permanently_delete".
///
/// @return Whether the union's current tag state has value
/// "paper_content_permanently_delete".
///
- (BOOL)isPaperContentPermanentlyDelete;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_remove_from_folder".
///
/// @return Whether the union's current tag state has value
/// "paper_content_remove_from_folder".
///
- (BOOL)isPaperContentRemoveFromFolder;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_remove_member".
///
/// @return Whether the union's current tag state has value
/// "paper_content_remove_member".
///
- (BOOL)isPaperContentRemoveMember;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_rename".
///
/// @return Whether the union's current tag state has value
/// "paper_content_rename".
///
- (BOOL)isPaperContentRename;

///
/// Retrieves whether the union's current tag state has value
/// "paper_content_restore".
///
/// @return Whether the union's current tag state has value
/// "paper_content_restore".
///
- (BOOL)isPaperContentRestore;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_add_comment".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_add_comment".
///
- (BOOL)isPaperDocAddComment;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_change_member_role".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_change_member_role".
///
- (BOOL)isPaperDocChangeMemberRole;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_change_sharing_policy".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_change_sharing_policy".
///
- (BOOL)isPaperDocChangeSharingPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_deleted".
///
/// @return Whether the union's current tag state has value "paper_doc_deleted".
///
- (BOOL)isPaperDocDeleted;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_delete_comment".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_delete_comment".
///
- (BOOL)isPaperDocDeleteComment;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_download".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_download".
///
- (BOOL)isPaperDocDownload;

///
/// Retrieves whether the union's current tag state has value "paper_doc_edit".
///
/// @return Whether the union's current tag state has value "paper_doc_edit".
///
- (BOOL)isPaperDocEdit;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_edit_comment".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_edit_comment".
///
- (BOOL)isPaperDocEditComment;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_followed".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_followed".
///
- (BOOL)isPaperDocFollowed;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_mention".
///
/// @return Whether the union's current tag state has value "paper_doc_mention".
///
- (BOOL)isPaperDocMention;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_request_access".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_request_access".
///
- (BOOL)isPaperDocRequestAccess;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_resolve_comment".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_resolve_comment".
///
- (BOOL)isPaperDocResolveComment;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_revert".
///
/// @return Whether the union's current tag state has value "paper_doc_revert".
///
- (BOOL)isPaperDocRevert;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_slack_share".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_slack_share".
///
- (BOOL)isPaperDocSlackShare;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_team_invite".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_team_invite".
///
- (BOOL)isPaperDocTeamInvite;

///
/// Retrieves whether the union's current tag state has value
/// "paper_doc_unresolve_comment".
///
/// @return Whether the union's current tag state has value
/// "paper_doc_unresolve_comment".
///
- (BOOL)isPaperDocUnresolveComment;

///
/// Retrieves whether the union's current tag state has value "paper_doc_view".
///
/// @return Whether the union's current tag state has value "paper_doc_view".
///
- (BOOL)isPaperDocView;

///
/// Retrieves whether the union's current tag state has value
/// "paper_folder_deleted".
///
/// @return Whether the union's current tag state has value
/// "paper_folder_deleted".
///
- (BOOL)isPaperFolderDeleted;

///
/// Retrieves whether the union's current tag state has value
/// "paper_folder_followed".
///
/// @return Whether the union's current tag state has value
/// "paper_folder_followed".
///
- (BOOL)isPaperFolderFollowed;

///
/// Retrieves whether the union's current tag state has value
/// "paper_folder_team_invite".
///
/// @return Whether the union's current tag state has value
/// "paper_folder_team_invite".
///
- (BOOL)isPaperFolderTeamInvite;

///
/// Retrieves whether the union's current tag state has value "password_change".
///
/// @return Whether the union's current tag state has value "password_change".
///
- (BOOL)isPasswordChange;

///
/// Retrieves whether the union's current tag state has value "password_reset".
///
/// @return Whether the union's current tag state has value "password_reset".
///
- (BOOL)isPasswordReset;

///
/// Retrieves whether the union's current tag state has value
/// "password_reset_all".
///
/// @return Whether the union's current tag state has value
/// "password_reset_all".
///
- (BOOL)isPasswordResetAll;

///
/// Retrieves whether the union's current tag state has value
/// "emm_create_exceptions_report".
///
/// @return Whether the union's current tag state has value
/// "emm_create_exceptions_report".
///
- (BOOL)isEmmCreateExceptionsReport;

///
/// Retrieves whether the union's current tag state has value
/// "emm_create_usage_report".
///
/// @return Whether the union's current tag state has value
/// "emm_create_usage_report".
///
- (BOOL)isEmmCreateUsageReport;

///
/// Retrieves whether the union's current tag state has value
/// "smart_sync_create_admin_privilege_report".
///
/// @return Whether the union's current tag state has value
/// "smart_sync_create_admin_privilege_report".
///
- (BOOL)isSmartSyncCreateAdminPrivilegeReport;

///
/// Retrieves whether the union's current tag state has value
/// "team_activity_create_report".
///
/// @return Whether the union's current tag state has value
/// "team_activity_create_report".
///
- (BOOL)isTeamActivityCreateReport;

///
/// Retrieves whether the union's current tag state has value
/// "collection_share".
///
/// @return Whether the union's current tag state has value "collection_share".
///
- (BOOL)isCollectionShare;

///
/// Retrieves whether the union's current tag state has value
/// "file_add_comment".
///
/// @return Whether the union's current tag state has value "file_add_comment".
///
- (BOOL)isFileAddComment;

///
/// Retrieves whether the union's current tag state has value
/// "file_like_comment".
///
/// @return Whether the union's current tag state has value "file_like_comment".
///
- (BOOL)isFileLikeComment;

///
/// Retrieves whether the union's current tag state has value
/// "file_unlike_comment".
///
/// @return Whether the union's current tag state has value
/// "file_unlike_comment".
///
- (BOOL)isFileUnlikeComment;

///
/// Retrieves whether the union's current tag state has value
/// "note_acl_invite_only".
///
/// @return Whether the union's current tag state has value
/// "note_acl_invite_only".
///
- (BOOL)isNoteAclInviteOnly;

///
/// Retrieves whether the union's current tag state has value "note_acl_link".
///
/// @return Whether the union's current tag state has value "note_acl_link".
///
- (BOOL)isNoteAclLink;

///
/// Retrieves whether the union's current tag state has value
/// "note_acl_team_link".
///
/// @return Whether the union's current tag state has value
/// "note_acl_team_link".
///
- (BOOL)isNoteAclTeamLink;

///
/// Retrieves whether the union's current tag state has value "note_shared".
///
/// @return Whether the union's current tag state has value "note_shared".
///
- (BOOL)isNoteShared;

///
/// Retrieves whether the union's current tag state has value
/// "note_share_receive".
///
/// @return Whether the union's current tag state has value
/// "note_share_receive".
///
- (BOOL)isNoteShareReceive;

///
/// Retrieves whether the union's current tag state has value
/// "open_note_shared".
///
/// @return Whether the union's current tag state has value "open_note_shared".
///
- (BOOL)isOpenNoteShared;

///
/// Retrieves whether the union's current tag state has value "sf_add_group".
///
/// @return Whether the union's current tag state has value "sf_add_group".
///
- (BOOL)isSfAddGroup;

///
/// Retrieves whether the union's current tag state has value
/// "sf_allow_non_members_to_view_shared_links".
///
/// @return Whether the union's current tag state has value
/// "sf_allow_non_members_to_view_shared_links".
///
- (BOOL)isSfAllowNonMembersToViewSharedLinks;

///
/// Retrieves whether the union's current tag state has value "sf_invite_group".
///
/// @return Whether the union's current tag state has value "sf_invite_group".
///
- (BOOL)isSfInviteGroup;

///
/// Retrieves whether the union's current tag state has value "sf_nest".
///
/// @return Whether the union's current tag state has value "sf_nest".
///
- (BOOL)isSfNest;

///
/// Retrieves whether the union's current tag state has value "sf_team_decline".
///
/// @return Whether the union's current tag state has value "sf_team_decline".
///
- (BOOL)isSfTeamDecline;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_grant_access".
///
/// @return Whether the union's current tag state has value
/// "sf_team_grant_access".
///
- (BOOL)isSfTeamGrantAccess;

///
/// Retrieves whether the union's current tag state has value "sf_team_invite".
///
/// @return Whether the union's current tag state has value "sf_team_invite".
///
- (BOOL)isSfTeamInvite;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_invite_change_role".
///
/// @return Whether the union's current tag state has value
/// "sf_team_invite_change_role".
///
- (BOOL)isSfTeamInviteChangeRole;

///
/// Retrieves whether the union's current tag state has value "sf_team_join".
///
/// @return Whether the union's current tag state has value "sf_team_join".
///
- (BOOL)isSfTeamJoin;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_join_from_oob_link".
///
/// @return Whether the union's current tag state has value
/// "sf_team_join_from_oob_link".
///
- (BOOL)isSfTeamJoinFromOobLink;

///
/// Retrieves whether the union's current tag state has value
/// "sf_team_uninvite".
///
/// @return Whether the union's current tag state has value "sf_team_uninvite".
///
- (BOOL)isSfTeamUninvite;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_add_invitees".
///
/// @return Whether the union's current tag state has value
/// "shared_content_add_invitees".
///
- (BOOL)isSharedContentAddInvitees;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_add_link_expiry".
///
/// @return Whether the union's current tag state has value
/// "shared_content_add_link_expiry".
///
- (BOOL)isSharedContentAddLinkExpiry;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_add_link_password".
///
/// @return Whether the union's current tag state has value
/// "shared_content_add_link_password".
///
- (BOOL)isSharedContentAddLinkPassword;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_add_member".
///
/// @return Whether the union's current tag state has value
/// "shared_content_add_member".
///
- (BOOL)isSharedContentAddMember;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_downloads_policy".
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_downloads_policy".
///
- (BOOL)isSharedContentChangeDownloadsPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_invitee_role".
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_invitee_role".
///
- (BOOL)isSharedContentChangeInviteeRole;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_link_audience".
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_link_audience".
///
- (BOOL)isSharedContentChangeLinkAudience;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_link_expiry".
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_link_expiry".
///
- (BOOL)isSharedContentChangeLinkExpiry;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_link_password".
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_link_password".
///
- (BOOL)isSharedContentChangeLinkPassword;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_member_role".
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_member_role".
///
- (BOOL)isSharedContentChangeMemberRole;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_change_viewer_info_policy".
///
/// @return Whether the union's current tag state has value
/// "shared_content_change_viewer_info_policy".
///
- (BOOL)isSharedContentChangeViewerInfoPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_claim_invitation".
///
/// @return Whether the union's current tag state has value
/// "shared_content_claim_invitation".
///
- (BOOL)isSharedContentClaimInvitation;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_copy".
///
/// @return Whether the union's current tag state has value
/// "shared_content_copy".
///
- (BOOL)isSharedContentCopy;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_download".
///
/// @return Whether the union's current tag state has value
/// "shared_content_download".
///
- (BOOL)isSharedContentDownload;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_relinquish_membership".
///
/// @return Whether the union's current tag state has value
/// "shared_content_relinquish_membership".
///
- (BOOL)isSharedContentRelinquishMembership;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_remove_invitee".
///
/// @return Whether the union's current tag state has value
/// "shared_content_remove_invitee".
///
- (BOOL)isSharedContentRemoveInvitee;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_remove_link_expiry".
///
/// @return Whether the union's current tag state has value
/// "shared_content_remove_link_expiry".
///
- (BOOL)isSharedContentRemoveLinkExpiry;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_remove_link_password".
///
/// @return Whether the union's current tag state has value
/// "shared_content_remove_link_password".
///
- (BOOL)isSharedContentRemoveLinkPassword;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_remove_member".
///
/// @return Whether the union's current tag state has value
/// "shared_content_remove_member".
///
- (BOOL)isSharedContentRemoveMember;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_request_access".
///
/// @return Whether the union's current tag state has value
/// "shared_content_request_access".
///
- (BOOL)isSharedContentRequestAccess;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_unshare".
///
/// @return Whether the union's current tag state has value
/// "shared_content_unshare".
///
- (BOOL)isSharedContentUnshare;

///
/// Retrieves whether the union's current tag state has value
/// "shared_content_view".
///
/// @return Whether the union's current tag state has value
/// "shared_content_view".
///
- (BOOL)isSharedContentView;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_change_confidentiality".
///
/// @return Whether the union's current tag state has value
/// "shared_folder_change_confidentiality".
///
- (BOOL)isSharedFolderChangeConfidentiality;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_change_link_policy".
///
/// @return Whether the union's current tag state has value
/// "shared_folder_change_link_policy".
///
- (BOOL)isSharedFolderChangeLinkPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_change_member_management_policy".
///
/// @return Whether the union's current tag state has value
/// "shared_folder_change_member_management_policy".
///
- (BOOL)isSharedFolderChangeMemberManagementPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_change_member_policy".
///
/// @return Whether the union's current tag state has value
/// "shared_folder_change_member_policy".
///
- (BOOL)isSharedFolderChangeMemberPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_create".
///
/// @return Whether the union's current tag state has value
/// "shared_folder_create".
///
- (BOOL)isSharedFolderCreate;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_mount".
///
/// @return Whether the union's current tag state has value
/// "shared_folder_mount".
///
- (BOOL)isSharedFolderMount;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_transfer_ownership".
///
/// @return Whether the union's current tag state has value
/// "shared_folder_transfer_ownership".
///
- (BOOL)isSharedFolderTransferOwnership;

///
/// Retrieves whether the union's current tag state has value
/// "shared_folder_unmount".
///
/// @return Whether the union's current tag state has value
/// "shared_folder_unmount".
///
- (BOOL)isSharedFolderUnmount;

///
/// Retrieves whether the union's current tag state has value
/// "shared_note_opened".
///
/// @return Whether the union's current tag state has value
/// "shared_note_opened".
///
- (BOOL)isSharedNoteOpened;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_app_create".
///
/// @return Whether the union's current tag state has value
/// "shmodel_app_create".
///
- (BOOL)isShmodelAppCreate;

///
/// Retrieves whether the union's current tag state has value "shmodel_create".
///
/// @return Whether the union's current tag state has value "shmodel_create".
///
- (BOOL)isShmodelCreate;

///
/// Retrieves whether the union's current tag state has value "shmodel_disable".
///
/// @return Whether the union's current tag state has value "shmodel_disable".
///
- (BOOL)isShmodelDisable;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_fb_share".
///
/// @return Whether the union's current tag state has value "shmodel_fb_share".
///
- (BOOL)isShmodelFbShare;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_group_share".
///
/// @return Whether the union's current tag state has value
/// "shmodel_group_share".
///
- (BOOL)isShmodelGroupShare;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_remove_expiration".
///
/// @return Whether the union's current tag state has value
/// "shmodel_remove_expiration".
///
- (BOOL)isShmodelRemoveExpiration;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_set_expiration".
///
/// @return Whether the union's current tag state has value
/// "shmodel_set_expiration".
///
- (BOOL)isShmodelSetExpiration;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_team_copy".
///
/// @return Whether the union's current tag state has value "shmodel_team_copy".
///
- (BOOL)isShmodelTeamCopy;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_team_download".
///
/// @return Whether the union's current tag state has value
/// "shmodel_team_download".
///
- (BOOL)isShmodelTeamDownload;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_team_share".
///
/// @return Whether the union's current tag state has value
/// "shmodel_team_share".
///
- (BOOL)isShmodelTeamShare;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_team_view".
///
/// @return Whether the union's current tag state has value "shmodel_team_view".
///
- (BOOL)isShmodelTeamView;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_visibility_password".
///
/// @return Whether the union's current tag state has value
/// "shmodel_visibility_password".
///
- (BOOL)isShmodelVisibilityPassword;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_visibility_public".
///
/// @return Whether the union's current tag state has value
/// "shmodel_visibility_public".
///
- (BOOL)isShmodelVisibilityPublic;

///
/// Retrieves whether the union's current tag state has value
/// "shmodel_visibility_team_only".
///
/// @return Whether the union's current tag state has value
/// "shmodel_visibility_team_only".
///
- (BOOL)isShmodelVisibilityTeamOnly;

///
/// Retrieves whether the union's current tag state has value
/// "remove_logout_url".
///
/// @return Whether the union's current tag state has value "remove_logout_url".
///
- (BOOL)isRemoveLogoutUrl;

///
/// Retrieves whether the union's current tag state has value "remove_sso_url".
///
/// @return Whether the union's current tag state has value "remove_sso_url".
///
- (BOOL)isRemoveSsoUrl;

///
/// Retrieves whether the union's current tag state has value "sso_change_cert".
///
/// @return Whether the union's current tag state has value "sso_change_cert".
///
- (BOOL)isSsoChangeCert;

///
/// Retrieves whether the union's current tag state has value
/// "sso_change_login_url".
///
/// @return Whether the union's current tag state has value
/// "sso_change_login_url".
///
- (BOOL)isSsoChangeLoginUrl;

///
/// Retrieves whether the union's current tag state has value
/// "sso_change_logout_url".
///
/// @return Whether the union's current tag state has value
/// "sso_change_logout_url".
///
- (BOOL)isSsoChangeLogoutUrl;

///
/// Retrieves whether the union's current tag state has value
/// "sso_change_saml_identity_mode".
///
/// @return Whether the union's current tag state has value
/// "sso_change_saml_identity_mode".
///
- (BOOL)isSsoChangeSamlIdentityMode;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_change_status".
///
/// @return Whether the union's current tag state has value
/// "team_folder_change_status".
///
- (BOOL)isTeamFolderChangeStatus;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_create".
///
/// @return Whether the union's current tag state has value
/// "team_folder_create".
///
- (BOOL)isTeamFolderCreate;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_downgrade".
///
/// @return Whether the union's current tag state has value
/// "team_folder_downgrade".
///
- (BOOL)isTeamFolderDowngrade;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_permanently_delete".
///
/// @return Whether the union's current tag state has value
/// "team_folder_permanently_delete".
///
- (BOOL)isTeamFolderPermanentlyDelete;

///
/// Retrieves whether the union's current tag state has value
/// "team_folder_rename".
///
/// @return Whether the union's current tag state has value
/// "team_folder_rename".
///
- (BOOL)isTeamFolderRename;

///
/// Retrieves whether the union's current tag state has value
/// "account_capture_change_policy".
///
/// @return Whether the union's current tag state has value
/// "account_capture_change_policy".
///
- (BOOL)isAccountCaptureChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "allow_download_disabled".
///
/// @return Whether the union's current tag state has value
/// "allow_download_disabled".
///
- (BOOL)isAllowDownloadDisabled;

///
/// Retrieves whether the union's current tag state has value
/// "allow_download_enabled".
///
/// @return Whether the union's current tag state has value
/// "allow_download_enabled".
///
- (BOOL)isAllowDownloadEnabled;

///
/// Retrieves whether the union's current tag state has value
/// "data_placement_restriction_change_policy".
///
/// @return Whether the union's current tag state has value
/// "data_placement_restriction_change_policy".
///
- (BOOL)isDataPlacementRestrictionChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "data_placement_restriction_satisfy_policy".
///
/// @return Whether the union's current tag state has value
/// "data_placement_restriction_satisfy_policy".
///
- (BOOL)isDataPlacementRestrictionSatisfyPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "device_approvals_change_desktop_policy".
///
/// @return Whether the union's current tag state has value
/// "device_approvals_change_desktop_policy".
///
- (BOOL)isDeviceApprovalsChangeDesktopPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "device_approvals_change_mobile_policy".
///
/// @return Whether the union's current tag state has value
/// "device_approvals_change_mobile_policy".
///
- (BOOL)isDeviceApprovalsChangeMobilePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "device_approvals_change_overage_action".
///
/// @return Whether the union's current tag state has value
/// "device_approvals_change_overage_action".
///
- (BOOL)isDeviceApprovalsChangeOverageAction;

///
/// Retrieves whether the union's current tag state has value
/// "device_approvals_change_unlink_action".
///
/// @return Whether the union's current tag state has value
/// "device_approvals_change_unlink_action".
///
- (BOOL)isDeviceApprovalsChangeUnlinkAction;

///
/// Retrieves whether the union's current tag state has value
/// "emm_add_exception".
///
/// @return Whether the union's current tag state has value "emm_add_exception".
///
- (BOOL)isEmmAddException;

///
/// Retrieves whether the union's current tag state has value
/// "emm_change_policy".
///
/// @return Whether the union's current tag state has value "emm_change_policy".
///
- (BOOL)isEmmChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "emm_remove_exception".
///
/// @return Whether the union's current tag state has value
/// "emm_remove_exception".
///
- (BOOL)isEmmRemoveException;

///
/// Retrieves whether the union's current tag state has value
/// "extended_version_history_change_policy".
///
/// @return Whether the union's current tag state has value
/// "extended_version_history_change_policy".
///
- (BOOL)isExtendedVersionHistoryChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "file_comments_change_policy".
///
/// @return Whether the union's current tag state has value
/// "file_comments_change_policy".
///
- (BOOL)isFileCommentsChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "file_requests_change_policy".
///
/// @return Whether the union's current tag state has value
/// "file_requests_change_policy".
///
- (BOOL)isFileRequestsChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "file_requests_emails_enabled".
///
/// @return Whether the union's current tag state has value
/// "file_requests_emails_enabled".
///
- (BOOL)isFileRequestsEmailsEnabled;

///
/// Retrieves whether the union's current tag state has value
/// "file_requests_emails_restricted_to_team_only".
///
/// @return Whether the union's current tag state has value
/// "file_requests_emails_restricted_to_team_only".
///
- (BOOL)isFileRequestsEmailsRestrictedToTeamOnly;

///
/// Retrieves whether the union's current tag state has value
/// "google_sso_change_policy".
///
/// @return Whether the union's current tag state has value
/// "google_sso_change_policy".
///
- (BOOL)isGoogleSsoChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "group_user_management_change_policy".
///
/// @return Whether the union's current tag state has value
/// "group_user_management_change_policy".
///
- (BOOL)isGroupUserManagementChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "member_requests_change_policy".
///
/// @return Whether the union's current tag state has value
/// "member_requests_change_policy".
///
- (BOOL)isMemberRequestsChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "member_space_limits_add_exception".
///
/// @return Whether the union's current tag state has value
/// "member_space_limits_add_exception".
///
- (BOOL)isMemberSpaceLimitsAddException;

///
/// Retrieves whether the union's current tag state has value
/// "member_space_limits_change_policy".
///
/// @return Whether the union's current tag state has value
/// "member_space_limits_change_policy".
///
- (BOOL)isMemberSpaceLimitsChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "member_space_limits_remove_exception".
///
/// @return Whether the union's current tag state has value
/// "member_space_limits_remove_exception".
///
- (BOOL)isMemberSpaceLimitsRemoveException;

///
/// Retrieves whether the union's current tag state has value
/// "member_suggestions_change_policy".
///
/// @return Whether the union's current tag state has value
/// "member_suggestions_change_policy".
///
- (BOOL)isMemberSuggestionsChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "microsoft_office_addin_change_policy".
///
/// @return Whether the union's current tag state has value
/// "microsoft_office_addin_change_policy".
///
- (BOOL)isMicrosoftOfficeAddinChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "network_control_change_policy".
///
/// @return Whether the union's current tag state has value
/// "network_control_change_policy".
///
- (BOOL)isNetworkControlChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "paper_change_deployment_policy".
///
/// @return Whether the union's current tag state has value
/// "paper_change_deployment_policy".
///
- (BOOL)isPaperChangeDeploymentPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "paper_change_member_policy".
///
/// @return Whether the union's current tag state has value
/// "paper_change_member_policy".
///
- (BOOL)isPaperChangeMemberPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "paper_change_policy".
///
/// @return Whether the union's current tag state has value
/// "paper_change_policy".
///
- (BOOL)isPaperChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "permanent_delete_change_policy".
///
/// @return Whether the union's current tag state has value
/// "permanent_delete_change_policy".
///
- (BOOL)isPermanentDeleteChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "sharing_change_folder_join_policy".
///
/// @return Whether the union's current tag state has value
/// "sharing_change_folder_join_policy".
///
- (BOOL)isSharingChangeFolderJoinPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "sharing_change_link_policy".
///
/// @return Whether the union's current tag state has value
/// "sharing_change_link_policy".
///
- (BOOL)isSharingChangeLinkPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "sharing_change_member_policy".
///
/// @return Whether the union's current tag state has value
/// "sharing_change_member_policy".
///
- (BOOL)isSharingChangeMemberPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "smart_sync_change_policy".
///
/// @return Whether the union's current tag state has value
/// "smart_sync_change_policy".
///
- (BOOL)isSmartSyncChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "sso_change_policy".
///
/// @return Whether the union's current tag state has value "sso_change_policy".
///
- (BOOL)isSsoChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_change_policy".
///
/// @return Whether the union's current tag state has value "tfa_change_policy".
///
- (BOOL)isTfaChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "two_account_change_policy".
///
/// @return Whether the union's current tag state has value
/// "two_account_change_policy".
///
- (BOOL)isTwoAccountChangePolicy;

///
/// Retrieves whether the union's current tag state has value
/// "web_sessions_change_fixed_length_policy".
///
/// @return Whether the union's current tag state has value
/// "web_sessions_change_fixed_length_policy".
///
- (BOOL)isWebSessionsChangeFixedLengthPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "web_sessions_change_idle_length_policy".
///
/// @return Whether the union's current tag state has value
/// "web_sessions_change_idle_length_policy".
///
- (BOOL)isWebSessionsChangeIdleLengthPolicy;

///
/// Retrieves whether the union's current tag state has value
/// "team_profile_add_logo".
///
/// @return Whether the union's current tag state has value
/// "team_profile_add_logo".
///
- (BOOL)isTeamProfileAddLogo;

///
/// Retrieves whether the union's current tag state has value
/// "team_profile_change_logo".
///
/// @return Whether the union's current tag state has value
/// "team_profile_change_logo".
///
- (BOOL)isTeamProfileChangeLogo;

///
/// Retrieves whether the union's current tag state has value
/// "team_profile_change_name".
///
/// @return Whether the union's current tag state has value
/// "team_profile_change_name".
///
- (BOOL)isTeamProfileChangeName;

///
/// Retrieves whether the union's current tag state has value
/// "team_profile_remove_logo".
///
/// @return Whether the union's current tag state has value
/// "team_profile_remove_logo".
///
- (BOOL)isTeamProfileRemoveLogo;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_add_backup_phone".
///
/// @return Whether the union's current tag state has value
/// "tfa_add_backup_phone".
///
- (BOOL)isTfaAddBackupPhone;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_add_security_key".
///
/// @return Whether the union's current tag state has value
/// "tfa_add_security_key".
///
- (BOOL)isTfaAddSecurityKey;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_change_backup_phone".
///
/// @return Whether the union's current tag state has value
/// "tfa_change_backup_phone".
///
- (BOOL)isTfaChangeBackupPhone;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_change_status".
///
/// @return Whether the union's current tag state has value "tfa_change_status".
///
- (BOOL)isTfaChangeStatus;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_remove_backup_phone".
///
/// @return Whether the union's current tag state has value
/// "tfa_remove_backup_phone".
///
- (BOOL)isTfaRemoveBackupPhone;

///
/// Retrieves whether the union's current tag state has value
/// "tfa_remove_security_key".
///
/// @return Whether the union's current tag state has value
/// "tfa_remove_security_key".
///
- (BOOL)isTfaRemoveSecurityKey;

///
/// Retrieves whether the union's current tag state has value "tfa_reset".
///
/// @return Whether the union's current tag state has value "tfa_reset".
///
- (BOOL)isTfaReset;

///
/// Retrieves whether the union's current tag state has value "other".
///
/// @return Whether the union's current tag state has value "other".
///
- (BOOL)isOther;

///
/// Retrieves string value of union's current tag state.
///
/// @return A human-readable string representing the union's current tag state.
///
- (NSString *)tagName;

@end

#pragma mark - Serializer Object

///
/// The serialization class for the `DBTEAMLOGEventType` union.
///
@interface DBTEAMLOGEventTypeSerializer : NSObject

///
/// Serializes `DBTEAMLOGEventType` instances.
///
/// @param instance An instance of the `DBTEAMLOGEventType` API object.
///
/// @return A json-compatible dictionary representation of the
/// `DBTEAMLOGEventType` API object.
///
+ (NSDictionary *)serialize:(DBTEAMLOGEventType *)instance;

///
/// Deserializes `DBTEAMLOGEventType` instances.
///
/// @param dict A json-compatible dictionary representation of the
/// `DBTEAMLOGEventType` API object.
///
/// @return An instantiation of the `DBTEAMLOGEventType` object.
///
+ (DBTEAMLOGEventType *)deserialize:(NSDictionary *)dict;

@end

NS_ASSUME_NONNULL_END
