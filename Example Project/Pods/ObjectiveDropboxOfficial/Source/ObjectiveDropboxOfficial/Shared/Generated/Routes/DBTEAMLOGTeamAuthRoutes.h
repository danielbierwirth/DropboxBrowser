///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBTasks.h"

@class DBNilObject;
@class DBTEAMCOMMONTimeRange;
@class DBTEAMLOGGetTeamEventsContinueError;
@class DBTEAMLOGGetTeamEventsError;
@class DBTEAMLOGGetTeamEventsResult;
@class DBTEAMLOGTeamEvent;

@protocol DBTransportClient;

///
/// Routes for the `TeamLog` namespace
///

NS_ASSUME_NONNULL_BEGIN

@interface DBTEAMLOGTeamAuthRoutes : NSObject

/// An instance of the networking client that each route will use to submit a
/// request.
@property (nonatomic, readonly) id<DBTransportClient> client;

/// Initializes the `DBTEAMLOGTeamAuthRoutes` namespace container object with a
/// networking client.
- (instancetype)init:(id<DBTransportClient>)client;

///
/// Retrieves team events. Permission : Team Auditing.
///
///
/// @return Through the response callback, the caller will receive a `DBTEAMLOGGetTeamEventsResult` object on success or
/// a `DBTEAMLOGGetTeamEventsError` object on failure.
///
- (DBRpcTask<DBTEAMLOGGetTeamEventsResult *, DBTEAMLOGGetTeamEventsError *> *)getEvents;

///
/// Retrieves team events. Permission : Team Auditing.
///
/// @param limit Number of results to return per call.
/// @param accountId Filter the events by account ID. Return ony events with this account_id as either Actor, Context,
/// or Participants.
/// @param time Filter by time range.
///
/// @return Through the response callback, the caller will receive a `DBTEAMLOGGetTeamEventsResult` object on success or
/// a `DBTEAMLOGGetTeamEventsError` object on failure.
///
- (DBRpcTask<DBTEAMLOGGetTeamEventsResult *, DBTEAMLOGGetTeamEventsError *> *)
getEvents:(nullable NSNumber *)limit
accountId:(nullable NSString *)accountId
     time:(nullable DBTEAMCOMMONTimeRange *)time;

///
/// Once a cursor has been retrieved from `getEvents`, use this to paginate through all events. Permission : Team
/// Auditing.
///
/// @param cursor Indicates from what point to get the next set of events.
///
/// @return Through the response callback, the caller will receive a `DBTEAMLOGGetTeamEventsResult` object on success or
/// a `DBTEAMLOGGetTeamEventsContinueError` object on failure.
///
- (DBRpcTask<DBTEAMLOGGetTeamEventsResult *, DBTEAMLOGGetTeamEventsContinueError *> *)getEventsContinue:
    (NSString *)cursor;

@end

NS_ASSUME_NONNULL_END
